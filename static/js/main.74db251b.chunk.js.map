{"version":3,"sources":["components/PageStyles.js","components/Common.js","components/Toolbar.js","components/Hero.js","components/About.js","components/projects/ProjectTemplate.js","components/projects/ProjectCommon.js","components/projects/Images.js","components/projects/Hexapod.js","components/projects/Meteorites.js","components/projects/Daedalus.js","components/Showcase.js","components/projects/SocketEngine.js","components/projects/Helios.js","components/projects/Icarus.js","components/projects/Surge.js","components/projects/PicoOscilloscope.js","components/projects/Ballbot.js","components/projects/DrawingRobot.js","components/projects/Vegas.js","components/projects/Fleet.js","components/projects/SpacePrinter.js","components/projects/Crawler.js","components/projects/DevBoard.js","components/OtherProjects.js","components/Contact.js","components/Sticky.js","pages/Home.js","components/old/ProjectCard.js","components/projects/Clock.js","components/projects/LED.js","components/projects/Fireeye.js","components/projects/BCI.js","components/projects/MLE.js","components/projects/VizEngine.js","components/projects/CtrlEngine.js","components/projects/Couch.js","components/projects/Autodrive.js","components/projects/DumEArms.js","components/projects/Lego.js","components/projects/QBot.js","components/projects/UJumbo.js","components/projects/FirefightingRobot.js","components/projects/ExpoDigitizer.js","components/projects/HobbesBot.js","components/projects/Quadcopter.js","components/projects/Longboard.js","components/projects/PicoPCA.js","components/projects/index.js","components/old/Projects.js","components/old/Contact.js","components/old/Research.js","index.js"],"names":["slate","orange","fontSans","fontMono","thinScreen","window","screen","width","StyledButton","withStyles","root","color","fontFamily","textTransform","backgroundColor","Button","sectionHeaderStyles","makeStyles","theme","margin","props","fontSize","number","float","paddingRight","text","background","padding","SectionHeader","classes","className","linkStyles","a","textDecoration","display","position","content","transform","height","bottom","left","transformOrigin","transition","StyledLink","href","target","rel","smallScreen","useStyles","marginTop","logo","marginLeft","verticalAlign","leftAlign","textAlign","navItem","marginRight","top","navButton","centerButton","alignContent","outline","borderColor","rightToolbar","NavbarLink","styles","close","to","style","onClick","NavbarButton","outlined","variant","FullToolBar","Toolbar","src","alt","children","drawerClasses","right","opacity","zIndex","items","MobileDrawer","MobileToolBar","open","toggle","ToolBar","useState","setOpen","offsetTop","hello","marginBottom","intro","fontWeight","letterSpacing","name","build","about","maxWidth","buttonGroup","button","Hero","useEffect","document","title","grid","gridItem","minWidth","lineHeight","imgWrapper","avatar","borderRadius","About","id","Grid","container","spacing","item","xs","paddingBottom","link","linkButton","ProjectTemplate","scrollTo","data","github","pypi","npm","NPM","imagePath","space","image","Images","images","imageSpace","length","gridSize","map","key","path","coverImage","description","tags","software","hardware","technology","Component","pcb","showcaseInformationStyles","direction","cursor","featured","projectTitle","paddingTop","icons","ShowcaseInformation","params","project","showcaseStyles","projectContainer","imgFloat","ShowcaseProject","alignItems","justify","firstProject","Showcase","Hexapod","Meteorites","Daedalus","oss","hackathon","card","mainContent","folder","ProjectCard","join","sectionTitle","subtitle","projects","SocketEngine","Helios","Icarus","PicoOscilloscope","Surge","Ballbot","fullProjects","DrawingRobot","Vegas","Fleet","SpacePrinter","Crawler","DevBoard","toShow","setToShow","more","setMore","info","footer","Contact","sideSpace","useSideStyles","side","socialList","flexDirection","listStyle","list","listItem","emailBar","email","writingMode","paddingLeft","StickySide","Sticky","showSticky","Home","media","actions","Card","CardActionArea","CardMedia","CardContent","Typography","gutterBottom","CardActions","Chip","size","label","hexapod","crawler","ballbot","drawing_robot","clock","Clock","led","LED","daedalus","helios","icarus","fireeye","Fireeye","bci","BCI","mle","MLE","socketengine","vizengine","VizEngine","ctrlengine","CtrlEngine","meteorites","pico_oscilloscope","couch","Couch","autodrive","Autodrive","fleet","dume_arms","DumEArms","lego","Lego","qbot","QBot","ujumbo","UJumbo","firefighting","Firefighting","expo_digitizer","ExpoDigitizer","hobbesbot","HobbesBot","quadcopter","Quadcopter","longboard","Longboard","vegas","space_printer","devboard","pico_pca","PicoPCA","surge","flexWrap","icon","paper","filter","website","linkedin","ReactDOM","render","exact","component","React","setFilter","handleClick","tag","Object","entries","projectPages","showProject","getElementById"],"mappings":"8rVAmBMA,EAAQ,UAIRC,EAAS,UAGTC,EACJ,uEACIC,GAAW,oD,iBCvBXC,GAAaC,OAAOC,OAAOC,MAAQ,IAEnCC,GAAeC,aAAW,CAC9BC,KAAM,CACJC,MAAOV,EACPW,WAAYT,GACZU,cAAe,OACf,UAAW,CACTC,gBDWe,6BCjBAL,CASlBM,MAEGC,GAAsBC,aAAW,SAACC,GAAD,MAAY,CACjDR,KAAM,CACJH,MAAO,OAGPY,OAAQ,SAACC,GAAD,OAAYA,EAAMhB,WAAa,WAAa,eACpDO,MDHY,UCIZC,WAAYT,GACZkB,SAAU,SAACD,GAAD,OAAYA,EAAMhB,WAAa,QAAU,QAErDkB,OAAQ,CACNX,MAAOV,EACPsB,MAAO,OACPC,aAAc,OAEhBC,KAAM,CACJC,WAAY,UACZC,QAAS,cAIb,SAASC,GAAcR,GACrB,IAAMS,EAAUb,GAAoB,CAAEZ,gBAEtC,OACE,6BACE,yBAAK0B,UAAWD,EAAQnB,MACtB,yBAAKoB,UAAWD,EAAQP,QAAxB,IAAkCF,EAAME,OAAxC,KACA,yBAAKQ,UAAWD,EAAQJ,MAAOL,EAAMK,QAM7C,IAAMM,GAAad,aAAW,SAACC,GAAD,MAAY,CACxCc,EAAG,CACDrB,MAAOV,EACPgC,eAAgB,OAChBC,QAAS,eACTC,SAAU,WACV,WAAY,CACVC,QAAS,KACTD,SAAU,WACV5B,MAAO,OACP8B,UAAW,YACXC,OAAQ,MACRC,OAAQ,EACRC,KAAM,EACN1B,gBAAiBb,EACjBwC,gBAAiB,eACjBC,WAAY,4BAEd,UAAW,CACT,WAAY,CACVL,UAAW,YACXI,gBAAiB,qBAMzB,SAASE,GAAWvB,GAClB,IAAMS,EAAUE,KAChB,OACE,uBACEa,KAAMxB,EAAMwB,KACZC,OAAO,SACPC,IAAI,sBACJhB,UAAWD,EAAQG,GAElBZ,EAAMK,MC/Eb,IAAMsB,GAAc1C,OAAOC,OAAOC,MAAQ,IACpCH,GAAaC,OAAOC,OAAOC,MAAQ,IAEnCyC,GAAY/B,aAAW,SAACC,GAAD,MAAY,CACvCR,KAAM,CACJgB,WAAY,cACZf,MAAOV,EACPgD,UAAW,SAEbC,KAAM,CACJZ,OAAQ,QACRa,WAAY,QACZC,cAAe,UAEjBC,UAAW,CACT9B,MAAO,SAACH,GAAD,OAAYA,EAAMhB,WAAa,OAAS,SAEjDkB,OAAQ,CACNgC,UAAW,SAAClC,GAAD,OAAYA,EAAMhB,WAAa,SAAW,WACrDmB,MAAO,SAACH,GAAD,OAAYA,EAAMhB,WAAa,OAAS,QAC/CO,MAAOV,EACPuB,aAAc,OAEhB+B,QAAS,CACPD,UAAW,SAAClC,GAAD,OAAYA,EAAMhB,WAAa,SAAW,WACrDmB,MAAO,SAACH,GAAD,OAAYA,EAAMhB,WAAa,OAAS,QAC/CO,MAAOX,EACPY,WAAYT,GACZgD,WAAY,MACZK,YAAa,MACbP,UAAW,SAAC7B,GAAD,OAAYA,EAAMhB,WAAa,MAAQ,KAClDiB,SAAU,SAACD,GAAD,OAAYA,EAAMhB,WAAa,QAAU,SACnDsC,WAAY,OACZ,UAAW,CACT/B,MAAOV,GAETwD,IAAK,MACLpB,UAAW,oBAGbqB,UAAW,CACTnC,MAAO,SAACH,GAAD,OAAYA,EAAMhB,WAAa,OAAS,QAC/CQ,WAAYT,GACZgD,WAAY,MACZK,YAAa,MACbP,UAAW,SAAC7B,GAAD,OAAYA,EAAMhB,WAAa,MAAQ,GAClDiB,SAAU,SAACD,GAAD,OAAYA,EAAMhB,WAAa,QAAU,SACnD,UAAW,CACTO,MAAOV,GAETwD,IAAK,MACLpB,UAAW,oBAEbsB,aAAc,CACZC,aAAc,SACdN,UAAW,UAEbO,QAAS,CACPC,YAAa7D,GAEf8D,aAAc,CACZZ,WAAY,OACZF,UAAW,WAIf,SAASe,GAAW5C,GAClB,IAAMS,EAAUT,EAAM6C,OAChBC,EAAQ9C,EAAM8C,MACpB,OACE,kBAAC,IAAD,CAAUC,GAAI/C,EAAM+C,GAAIC,MAAO,CAAEnC,eAAgB,SAC/C,yBAAKH,UAAWD,EAAQ0B,QAASc,QAASH,GACxC,yBAAKpC,UAAWD,EAAQP,QAAxB,IAAkCF,EAAME,OAAxC,KACA,yBAAKQ,UAAWD,EAAQwB,WAAYjC,EAAMK,QAMlD,SAAS6C,GAAalD,GACpB,IAAMS,EAAUT,EAAM6C,OAChBC,EAAQ9C,EAAM8C,MACd9B,EACJ,kBAAC5B,GAAD,CACEsB,UAAWD,EAAQ6B,UACnB7B,QAAS,CAAE0C,SAAU1C,EAAQgC,SAC7BW,QAAQ,WACR5B,KAAMxB,EAAMwB,KACZC,OAAO,UAENzB,EAAMK,MAGX,OAAOrB,GACL,yBAAK0B,UAAWD,EAAQ8B,aAAcU,QAASH,GAAQ9B,GAEvDA,EAIJ,SAASqC,GAAYrD,GACnB,IAAMS,EAAUmB,GAAU,CAAED,eAAa3C,gBAEzC,OACE,kBAACsE,EAAA,EAAD,CAAS5C,UAAWD,EAAQnB,MAC1B,yBAAKoB,UAAWD,EAAQqB,KAAMyB,IAAI,kBAAkBC,IAAI,KAExD,6BAAS9C,UAAWD,EAAQkC,cAAe3C,EAAMyD,WAKvD,IAAMC,GAAgB7D,aAAW,SAACC,GAAD,MAAY,CAC3CR,KAAM,CACJ4B,OAAQ,OACRyC,MAAO,IACPtB,IAAK,IACLlD,MAAO,MACP4B,SAAU,QACVT,WF/GU,UEgHVsD,QAAS,MACTC,OAAQ,MAEVf,MAAO,CACLa,MAAO,MACPtB,IAAK,MACLtB,SAAU,SAEZ+C,MAAO,CACL/C,SAAU,WACVsB,IAAK,MACLpB,UAAW,wBAIf,SAAS8C,GAAa/D,GACpB,IAAMS,EAAUiD,GAAc,CAAE1E,gBAEhC,OACE,yBAAK0B,UAAWD,EAAQnB,MACtB,yBAAKoB,UAAWD,EAAQqC,OACtB,kBAAC,IAAD,CAAW7C,SAAS,QAAQgD,QAASjD,EAAM8C,SAE7C,yBAAKpC,UAAWD,EAAQqD,OAAQ9D,EAAMyD,WAK5C,SAASO,GAAchE,GACrB,IAAMS,EAAUmB,GAAU,CAAED,eAAa3C,gBACjCiF,EAAiBjE,EAAjBiE,KAAMC,EAAWlE,EAAXkE,OAKd,OACE,kBAACZ,EAAA,EAAD,CAAS5C,UAAWD,EAAQnB,MAC1B,yBAAKoB,UAAWD,EAAQqB,KAAMyB,IAAI,kBAAkBC,IAAI,KAExD,6BAAS9C,UAAWD,EAAQkC,cAC1B,kBAAC,IAAD,CAAU1C,SAAS,QAAQgD,QAASiB,IACnCD,GAAQ,kBAACF,GAAD,CAAcjB,MAAOoB,GAASlE,EAAMyD,YAsDtCU,OAhDf,SAAiBnE,GACf,IAAMS,EAAUmB,GAAU,CAAE5C,gBAC5B,EAAwBoF,oBAAS,GAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAMA,SAASvB,IACPuB,GAAQ,GAGV,IAAMZ,EACJ,6BACE,kBAACb,GAAD,CAAYG,GAAG,IAAI7C,OAAO,IAAI2C,OAAQpC,EAASqC,MAAOA,EAAOzC,KAAK,SAClE,kBAACuC,GAAD,CAAYG,GAAG,UAAU7C,OAAO,IAAI2C,OAAQpC,EAASqC,MAAOA,EAAOzC,KAAK,aACxE,kBAACuC,GAAD,CAAYG,GAAG,aAAa7C,OAAO,IAAI2C,OAAQpC,EAASqC,MAAOA,EAAOzC,KAAK,aAC3E,kBAACuC,GAAD,CACEG,GAAG,YACH7C,OAAO,IACP2C,OAAQpC,EACRJ,KAAK,aACLyC,MAAOA,IAGT,kBAACI,GAAD,CACE1B,KAAK,+BACLqB,OAAQpC,EACRJ,KAAK,SACLyC,MAAOA,IAET,kBAACI,GAAD,CACE1B,KAAK,2BACLqB,OAAQpC,EACRJ,KAAK,SACLyC,MAAOA,KAKb,OACE,8BACI9D,IAAc,kBAACqE,GAAD,KAAcI,GAC7BzE,IAAc,kBAACgF,GAAD,CAAeC,KAAMA,EAAMC,OAvC9C,WACEG,GAASJ,KAsCoDR,KCpN3D9B,GAAc1C,OAAOC,OAAOgC,OAAS,IACrClC,GAAaC,OAAOC,OAAOC,MAAQ,IAEnCyC,GAAY/B,aAAW,SAACC,GAAD,MAAY,CACvCR,KAAM,CACJyB,SAAU,WACVsB,IAAK,SAACrC,GAAD,OACHA,EAAM2B,YAAN,UAAuB2C,EAAvB,gBARY,GAQZ,OACFnF,MAAO,SAACa,GAAD,OAAYA,EAAM2B,YAAc,MAAQ,OAC/C5B,OAAQ,QAEVwE,MAAO,CACL/E,WAAYT,GACZQ,MAAOV,EACPoB,SAAU,MACVuE,aAAc,QAEhBC,MAAO,CACLC,WAAY,MACZC,cAAe,MACfnF,WAAYV,EACZmB,SAAU,SAACD,GAAD,OAAYA,EAAM2B,YAAc,QAAU,QAEtDiD,KAAM,CACJrF,MHVY,WGYdsF,MAAO,CACLtF,MAAOX,GAETkG,MAAO,CACLtF,WAAYV,EACZmB,SAAU,SAACD,GAAD,OAAYA,EAAMhB,WAAa,QAAU,SACnD6C,UAAW,SAAC7B,GAAD,OAAYA,EAAMhB,WAAa,OAAS,GACnDO,MAAOX,EACPmG,SAAU,SAAC/E,GAAD,OAAYA,EAAM2B,YAAc,MAAQ,QAEpDqD,YAAa,CACXnD,UAAW,SAAC7B,GAAD,OAAYA,EAAM2B,YAAc,OAAS,SAEtDc,QAAS,CACPC,YAAa7D,GAEfoG,OAAQ,CACN9E,MAAO,OACPF,SAAU,SAACD,GAAD,OAAYA,EAAMhB,WAAa,QAAU,OACnDoD,YAAa,MACb7B,QAAS,SAACP,GAAD,OACPA,EAAMhB,WAAa,oBAAsB,4BAIhC,SAASkG,GAAKlF,GAC3B,IAAMS,EAAUmB,GAAU,CAAED,eAAa3C,gBAMzC,OAJAmG,qBAAU,WACRC,SAASC,MAAQ,4BAIjB,yBAAK3E,UAAWD,EAAQnB,MACtB,yBAAKoB,UAAWD,EAAQ8D,OAAxB,kBACA,yBAAK7D,UAAWD,EAAQgE,OACtB,yBAAK/D,UAAWD,EAAQmE,MAAxB,mBACA,yBAAKlE,UAAWD,EAAQoE,OAAxB,+BAGF,yBAAKnE,UAAWD,EAAQqE,OAAxB,4OAOA,yBAAKpE,UAAWD,EAAQuE,aACtB,kBAAC,IAAD,CAAUjC,GAAG,YAAYC,MAAO,CAAEnC,eAAgB,SAChD,kBAACzB,GAAD,CACEsB,UAAWD,EAAQwE,OACnBxE,QAAS,CAAE0C,SAAU1C,EAAQgC,SAC7BW,QAAQ,YAHV,iBASF,kBAAC,IAAD,CAAUL,GAAG,aAAaC,MAAO,CAAEnC,eAAgB,SACjD,kBAACzB,GAAD,CACEsB,UAAWD,EAAQwE,OACnBxE,QAAS,CAAE0C,SAAU1C,EAAQgC,SAC7BW,QAAQ,YAHV,kB,aCtFJzB,GAAc1C,OAAOC,OAAOgC,OAAS,IACrClC,GAAaC,OAAOC,OAAOC,MAAQ,IAEnCyC,GAAY/B,aAAW,SAACC,GAAD,MAAY,CACvCR,KAAM,CACJS,OAAQ,OACR8B,UAAW,OACX1C,MAAO,SAACa,GAAD,OAAYA,EAAMhB,WAAa,MAAQ,QAEhDsG,KAAM,CACJzD,UAAW,OAEb0D,SAAU,CACRC,SAAU,SAACxF,GAAD,OAAYA,EAAMhB,WAAa,OAAS,SAEpD8F,MAAO,CACLtF,WAAYV,EACZmB,SAAU,QACVV,MAAOX,EACPmC,SAAU,WACVsB,IAAK,MACLpB,UAAW,mBACXwE,WAAY,SAACzF,GAAD,OAAYA,EAAMhB,WAAa,MAAQ,QAErD0G,WAAY,CAEV5E,QAAS,QACTC,SAAU,WACV5B,MAAO,SAACa,GAAD,OAAYA,EAAMhB,WAAa,OAAS,SAkBjD2G,OAAQ,CACNxG,MAAO,OACP+B,OAAQ,OACR0E,aAAc,WAiBH,SAASC,GAAM7F,GAC5B,IAAMS,EAAUmB,GAAU,CAAED,eAAa3C,gBAEzC,OACE,yBAAK0B,UAAWD,EAAQnB,KAAMwG,GAAG,SAC/B,kBAACtF,GAAD,CAAeN,OAAO,IAAIG,KAAK,aAC/B,kBAAC0F,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGvF,UAAWD,EAAQ6E,MAC7C,kBAACS,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGzF,UAAWD,EAAQ8E,UACnC,yBAAK7E,UAAWD,EAAQqE,OAAxB,mLAGsD,IACpD,kBAACvD,GAAD,CAAYC,KAAK,0BAA0BnB,KAAK,eAJlD,+FAMgC,IAC9B,kBAACkB,GAAD,CACEC,KAAK,0CACLnB,KAAK,qBATT,eAWiB,IACf,kBAACkB,GAAD,CAAYC,KAAK,qBAAqBnB,KAAK,qBAZ7C,QAcE,6BACA,6BAfF,4MAuBF,kBAAC0F,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGzF,UAAWD,EAAQ8E,UACnC,yBAAK7E,UAAWD,EAAQiF,YACtB,yBAAKnC,IAAI,qBAAqBC,IAAI,SAAS9C,UAAWD,EAAQkF,a,iCChGpEhE,GAAc1C,OAAOC,OAAOC,MAAQ,IAEpCyC,GAAY/B,aAAW,SAACC,GAAD,MAAY,CACvCR,KAAM,CACJoF,WAAY,MACZzE,SAAU,MACVc,SAAU,WACVK,KAAK,GAAD,OATW,EASX,MACJjC,MAAM,GAAD,OAAK,GAAL,MACL+B,OAAO,GAAD,OAAK,GAAL,MACNmB,IAAI,GAAD,OAXW,EAWX,OAELgD,MAAO,CACL9F,MAAOV,EACPuH,cAAe,MACf5G,WAAYT,IAEd0E,SAAU,CACRlE,MLPW,UKQXC,WAAYV,EACZiG,SAAU,OACV9E,SAAU,SAACD,GAAD,OAAYA,EAAM2B,YAAc,SAAW,SACrDb,QAAS,SAEX2B,QAAS,CACPC,YAAa7D,GAEfwH,KAAM,CACJ9G,MAAOV,GAEToG,OAAQ,CACN9E,MAAO,OACPqE,aAAc,MACdE,WAAY,MACZzE,SAAU,SAACD,GAAD,OAAYA,EAAM2B,YAAc,QAAU,SACpDS,YAAa,OAEfkE,WAAY,CACVnG,MAAO,OACP4B,WAAY,SAAC/B,GAAD,OAAYA,EAAM2B,YAAN,MAA4B,OACpD+C,WAAY,MACZzE,SAAU,SAACD,GAAD,OAAYA,EAAM2B,YAAc,QAAU,SACpDS,YAAa,WAIF,SAASmE,GAAgBvG,GACtC,IAAMS,EAAUmB,GAAU,CAAED,iBAO5B,OALAwD,qBAAU,WACRC,SAASC,MAAT,UAAoBrF,EAAMqF,MAA1B,sBACApG,OAAOuH,SAAS,EAAG,MAInB,6BACE,kBAAC,GAAD,MAEA,yBAAK9F,UAAWD,EAAQnB,MACtB,yBAAKoB,UAAWD,EAAQ4E,OACrBrF,EAAMqF,MACNrF,EAAMyG,MAAQzG,EAAMyG,KAAKC,QACxB,kBAACtH,GAAD,CACEsB,UAAWD,EAAQ6F,WACnB7F,QAAS,CAAE0C,SAAU1C,EAAQgC,SAC7BW,QAAQ,WACR5B,KAAMxB,EAAMyG,KAAKC,OACjBjF,OAAO,UALT,oBAUDzB,EAAMyG,MAAQzG,EAAMyG,KAAKE,MACxB,kBAACvH,GAAD,CACEsB,UAAWD,EAAQ6F,WACnB7F,QAAS,CAAE0C,SAAU1C,EAAQgC,SAC7BW,QAAQ,WACR5B,KAAMxB,EAAMyG,KAAKE,KACjBlF,OAAO,UALT,kBAUDzB,EAAMyG,MAAQzG,EAAMyG,KAAKG,KACxB,kBAACxH,GAAD,CACEsB,UAAWD,EAAQ6F,WACnB7F,QAAS,CAAE0C,SAAU1C,EAAQgC,SAC7BW,QAAQ,WACR7D,MAAM,UACNiC,KAAMxB,EAAMyG,KAAKI,IACjBpF,OAAO,UANT,kBAYJ,yBAAKf,UAAWD,EAAQgD,UAAWzD,EAAMyD,UAEzC,6BAEA,kBAAC,IAAD,CAAMV,GAAG,YAAYC,MAAO,CAAEnC,eAAgB,SAC5C,kBAACzB,GAAD,CACEsB,UAAWD,EAAQwE,OACnBxE,QAAS,CAAE0C,SAAU1C,EAAQgC,SAC7BW,QAAQ,YAHV,iBC9GV,IAAM0D,GAAY,mBCIZnF,GAAc1C,OAAOC,OAAOC,MAAQ,IAEpCyC,GAAY/B,aAAW,SAACC,GAAD,MAAY,CACvCwF,KAAM,CACJnG,MAAO,OACP0C,UAAW,SAAC7B,GAAD,OAAYA,EAAM+G,MAAQ,MAAQ,IAE/CC,MAAO,CACL7H,MAAO,YAII,SAAS8H,GAAOjH,GAC7B,IAAMkH,EAASlH,EAAMkH,OACfzG,EAAUmB,GAAU5B,GACpBmH,EAAa,GAAKD,EAAOE,OACzBC,EAAW1F,GAAc,GAAKwF,EAEpC,OACE,6BACE,kBAACpB,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGvF,UAAWD,EAAQ6E,MAC5C4B,EAAOI,KAAI,SAACN,GACX,OACE,kBAACjB,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAIkB,EAAUE,IAAKP,GAC5B,yBAAKtG,UAAWD,EAAQuG,MAAOzD,IAAKyD,EAAOxD,IAAI,WCvB7D,IAAM6B,GAAQ,gBACRmC,GAAO,UACPC,GAAa,wBACbC,GACJ,yNACIC,GAAO,CACXC,UAAU,EACVC,UAAU,GAENC,GAAa,CAAC,eAAgB,SAAU,cACxCrB,GAAO,CACXC,OAAQ,uDAGK,SAASqB,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,4CAEHA,GAFG,oCAGHA,GAHG,6BAFZ,wbAcE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OACHJ,GADG,oCAEHA,GAFG,oCAGHA,GAHG,6BAMV,kBAACG,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,oCAEHA,GAFG,oCAGHA,GAHG,8BCrChB,IAAMlF,GAAY/B,aAAW,SAACC,GAAD,MAAY,CACvCuG,KAAM,CACJ9G,MTyBc,eSrBZ8F,GAAQ,uBACRmC,GAAO,aACPC,GAAa,iBACbC,GACJ,wGACIC,GAAO,CACXC,UAAU,GAENE,GAAa,CAAC,WAAY,gBAAiB,UAC3CrB,GAAO,CACXC,OAAQ,qDAGK,SAASqB,KACtB,IAAMtH,EAAUmB,KAEhB,OACE,kBAAC2E,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CAAQC,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,iCADlB,oaAO6D,IAC3D,uBACEtF,KAAK,wBACLC,OAAO,SACPC,IAAI,sBACJhB,UAAWD,EAAQ4F,MAJrB,aARF,KCzBJ,IAAMhB,GAAQ,iCACRmC,GAAO,WACPC,GAAa,8BACbC,GACJ,sMACIC,GAAO,CACXK,KAAK,GAEDvB,GAAO,CACXC,OAAQ,wCAEJoB,GAAa,CAAC,SAEL,SAASC,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,IACtB,kBAAC4B,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,mDAEHA,GAFG,0BAFZ,+XAaE,kBAACG,GAAD,CAAQF,OAAK,EAACG,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,kCCf5B,IAAM9H,GAAaC,OAAOC,OAAOC,MAAQ,IAEnC8I,GAA4BpI,aAAW,SAACC,GAAD,MAAY,CACvDR,KAAM,CACJ4I,UAAW,SAAClI,GAAD,MAA4B,SAAhBA,EAAMG,MAAmB,MAAQ,OACxD0D,OAAQ,IACRtE,MXHY,UWIZ,UAAW,CACTA,MAAOV,EACPsJ,OAAQ,YAGZC,SAAU,CACRlG,UAAW,SAAClC,GAAD,OAAWA,EAAMG,OAC5BX,WAAYT,GACZkB,SAAU,QACVV,MAAOV,GAETwJ,aAAc,CACZnG,UAAW,SAAClC,GAAD,OAAWA,EAAMG,OAC5BZ,MAAO,UACPmF,WAAY,IACZC,cAAe,MACfnF,WAAYV,EACZmB,SAAU,MACVqI,WAAY,OAEdZ,YAAa,CACXxF,UAAW,SAAClC,GAAD,OAAWA,EAAMG,OAC5BiC,YAAa,SAACpC,GAAD,MAA4B,SAAhBA,EAAMG,MAAmB,OAAS,GAC3D4B,WAAY,SAAC/B,GAAD,MAA4B,SAAhBA,EAAMG,MAAmB,EAAI,QACrDhB,MAAO,SAACa,GAAD,OAAYA,EAAMhB,WAAa,MAAQ,QAC9CsB,WXjCU,UWkCVd,WAAYV,EACZS,MXhCW,UWiCXqG,aAAc,MACdrF,QAAS,OACTN,SAAU,QACVF,OAAQ,SAACC,GAAD,OAAYA,EAAMhB,WAAa,gBAAkB,iBACzDsC,WAAY,OACZe,IAAK,EACLtB,SAAU,WACV,UAAW,CACTsB,IAAK,SAGTyF,WAAY,CACVvI,MAAOX,EACPY,WAAYT,GACZkB,SAAU,QACVE,MAAO,SAACH,GAAD,OAAWA,EAAMG,OACxBC,aAAc,QAEhBQ,EAAG,CACDrB,MAAO,UACPsB,eAAgB,QAElB0H,MAAO,CACLhJ,MAAOX,EACP0J,WAAY,OACZrI,SAAU,MACVE,MAAO,SAACH,GAAD,OAAWA,EAAMG,OACxBC,aAAc,OACd,UAAW,CACTb,MAAOV,QAKb,SAAS2J,GAAoBxI,GAC3B,IAAMS,EAAUwH,GAA0B,6BAAKjI,EAAMyI,QAAZ,IAAoBzJ,iBACvD0J,EAAU1I,EAAM0I,QAEtB,OACE,uBACElH,KAAMkH,EAAQjC,KAAKC,OACnBjF,OAAO,SACPC,IAAI,sBACJhB,UAAWD,EAAQG,GAEnB,yBAAKF,UAAWD,EAAQnB,MACtB,yBAAKoB,UAAWD,EAAQ2H,UAAxB,oBACA,yBAAK1H,UAAWD,EAAQ4H,cAAeK,EAAQrD,OAC/C,yBAAK3E,UAAWD,EAAQiH,aAAcgB,EAAQhB,aAC7CgB,EAAQZ,WAAWR,KAAI,SAACC,GAAD,OACtB,yBAAK7G,UAAWD,EAAQqH,WAAYP,IAAKA,GAAMA,OAE/CvI,IAAc,6BACf0J,EAAQjC,MAAQiC,EAAQjC,KAAKC,SAAW1H,IACvC,yBAAK0B,UAAWD,EAAQ8H,OAAxB,iBAOO,kBAAC,KAAD,SASjB,IAAMI,GAAiB9I,aAAW,SAACC,GAAD,MAAY,CAC5C8I,iBAAkB,CAChB7H,SAAU,WACV5B,MAAO,SAACa,GAAD,OAAYA,EAAMhB,WAAa,OAAS,SAEjDgI,MAAO,CACL7H,MAAO,OACP+B,OAAQ,OACRf,MAAO,SAACH,GAAD,OAAWA,EAAM6I,UACxB9H,SAAU,WACV8C,QAAS,EACT+B,aAAc,OAEhBL,SAAU,CACRC,SAAU,SAACxF,GAAD,OAAYA,EAAMhB,WAAa,OAAS,aAItD,SAAS8J,GAAgB9I,GACvB,IAAIyI,EAEFA,EADEzI,EAAM2D,MACC,CAAExD,MAAO,QAAS0I,SAAU,QAE5B,CAAE1I,MAAO,OAAQ0I,SAAU,SAEtC,IAaIzH,EAAMuC,EAbJlD,EAAUkI,GAAe,6BAAKF,GAAN,IAAczJ,iBACtC0J,EAAU1I,EAAM0I,QAEhBrI,EAAO,kBAACmI,GAAD,CAAqBE,QAASA,EAASD,OAAQA,IACtDzB,EACJ,yBACEtG,UAAWD,EAAQuG,MACnBzD,IAAG,0BAAqBmF,EAAQlB,KAA7B,YAAqCkB,EAAQjB,YAEhDjE,IAAI,KAaR,OARIxD,EAAM2D,OACRvC,EAAO4F,EACPrD,EAAQtD,IAERe,EAAOf,EACPsD,EAAQqD,GAIR,yBAAKtG,UAAWD,EAAQmI,kBACtB,kBAAC7C,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTvF,UAAWD,EAAQ6E,KACnByD,WAAW,SACXC,QAAQ,UAER,kBAACjD,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAInG,EAAM2D,MAAQ,EAAI,EAAGjD,UAAWD,EAAQ8E,UACpDnE,GAGH,kBAAC2E,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAInG,EAAM2D,MAAQ,EAAI,EAAGjD,UAAWD,EAAQ8E,UACpD5B,KAOX,IAAM/B,GAAY/B,aAAW,SAACC,GAAD,MAAY,CACvCR,KAAM,CACJS,OAAQ,OACR8B,UAAW,OACX1C,MAAO,SAACa,GAAD,OAAYA,EAAMhB,WAAa,OAAS,QAEjDiK,aAAc,CAEZpH,UAAW,MACX2C,aAAc,QAEhBkE,QAAS,CACP7G,UAAW,OACX2C,aAAc,YAIH,SAAS0E,GAASlJ,GAC/B,IAAMS,EAAUmB,GAAU,CAAE5C,gBAE5B,OACE,yBAAK0B,UAAWD,EAAQnB,KAAMwG,GAAG,YAC/B,kBAACtF,GAAD,CAAeN,OAAO,IAAIG,KAAK,2BAC/B,yBAAKK,UAAWD,EAAQwI,cACtB,kBAACH,GAAD,CAAiBJ,QAASS,KAE5B,yBAAKzI,UAAWD,EAAQiI,UACpB1J,IAAc,kBAAC8J,GAAD,CAAiBJ,QAASU,EAAYzF,OAAK,IAC1D3E,IAAc,kBAAC8J,GAAD,CAAiBJ,QAASU,KAE3C,yBAAK1I,UAAWD,EAAQiI,SACtB,kBAACI,GAAD,CAAiBJ,QAASW,M,wBCzN5BhE,GAAQ,gBACRoC,GAAa,mBACbC,GACJ,gKACIC,GAAO,CACXC,UAAU,EACV0B,KAAK,GAEDxB,GAAa,CAAC,SAAU,UAAW,eAAgB,OACnDrB,GAAO,CACXC,OAAQ,4CACRC,KAAM,0CACNC,IAAK,+CAGQ,SAASmB,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CAAQC,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,qCADlB,mlBCjBJ,IAAMzB,GAAQ,iCACRoC,GAAa,mBACbC,GACJ,uJACIC,GAAO,CACXK,KAAK,GAEDvB,GAAO,CACXC,OAAQ,sCAEJoB,GAAa,CAAC,SAEL,SAASC,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,IACtB,kBAAC4B,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,sCAEHA,GAFG,+BAFZ,4hBCdJ,IAAMzB,GAAQ,kCACRoC,GAAa,mBACbC,GACJ,oMACIC,GAAO,CACXK,KAAK,GAEDvB,GAAO,CACXC,OAAQ,sCAEJoB,GAAa,CAAC,SAEL,SAASC,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,IACtB,kBAAC4B,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,sCAEHA,GAFG,2BAFZ,wgBAeE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OACHJ,GADG,kCAEHA,GAFG,2BAKV,kBAACG,GAAD,CAAQC,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,gCCpCtB,IAAMzB,GAAQ,WACRoC,GAAa,YACbC,GACJ,uFACIC,GAAO,CACXC,UAAU,GAENnB,GAAO,CACXC,OAAQ,qCAEJoB,GAAa,CAAC,SAAU,YAEf,SAASC,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CAAQC,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,uBADlB,6gBCdJ,IAAMzB,GAAQ,iCACRoC,GAAa,wBACbC,GACJ,sKACIC,GAAO,CACXC,UAAU,GAENnB,GAAO,CACXC,OAAQ,iDAEJoB,GAAa,CAAC,IAAK,UAAW,WAAY,aAEjC,SAASC,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CAAQC,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,uCADlB,qtBAYE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,gDC5BhB,IAAMzB,GAAQ,UACRoC,GAAa,wBACbC,GACJ,wMACIC,GAAO,CACXC,UAAU,EACVC,UAAU,GAENpB,GAAO,CACXC,OAAQ,wDAEJoB,GAAa,CAAC,SAAU,aAAc,gBAE7B,SAASC,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,4CAEHA,GAFG,oCAGHA,GAHG,6BAFZ,+gBAgBE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OACHJ,GADG,oCAEHA,GAFG,oCAGHA,GAHG,8BCjChB,IAAMzB,GAAQ,gBACRoC,GAAa,wBACbC,GACJ,+KACIC,GAAO,CACXC,UAAU,EACVC,UAAU,GAENpB,GAAO,CACXC,OAAQ,wDAEJoB,GAAa,CAAC,SAAU,aAAc,gBAE7B,SAASC,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,kDAEHA,GAFG,gDAGHA,GAHG,yCAFZ,qnBAiBE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OACHJ,GADG,gDAEHA,GAFG,gDAGHA,GAHG,0CClChB,IAAMzB,GAAQ,sBACRoC,GAAa,aACbC,GACJ,sMACIC,GAAO,CACXE,UAAU,EACVD,UAAU,EACV2B,WAAW,GAEP9C,GAAO,CACXC,OAAQ,+CAEJoB,GAAa,CAAC,SAAU,kBAAmB,gBAElC,SAASC,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,8BAEHA,GAFG,yBAFZ,mZAaE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OACHJ,GADG,gCAEHA,GAFG,0BC/BhB,IAAMzB,GAAQ,QACRoC,GAAa,YACbC,GACJ,6KACIC,GAAO,CACXC,UAAU,EACVC,UAAU,GAENpB,GAAO,CACXC,OAAQ,qCAEJoB,GAAa,CAAC,SAAU,kBAAmB,cAElC,SAASC,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,8BAEHA,GAFG,+BAGHA,GAHG,yBAFZ,odAeE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OACHJ,GADG,gCAEHA,GAFG,yBChChB,IAAMzB,GAAQ,6BACRoC,GAAa,mBACbC,GACJ,gLACIC,GAAO,CACXE,UAAU,EACVD,UAAU,GAENnB,GAAO,CACXC,OAAQ,6CAEJoB,GAAa,CAAC,aAAc,SAAU,eAE7B,SAASC,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CAAQC,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,sCADlB,0UCfJ,IAAMzB,GAAQ,iBACRoC,GAAa,wBACbC,GACJ,2MACIC,GAAO,CACXC,UAAU,EACVC,UAAU,GAENpB,GAAO,CACXC,OAAQ,qDAEJoB,GAAa,CAAC,SAAU,aAAc,gBAE7B,SAASC,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,4CAEHA,GAFG,oCAGHA,GAHG,6BAFZ,6cAeE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OACHJ,GADG,oCAEHA,GAFG,oCAGHA,GAHG,6BAMV,kBAACG,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,oCAEHA,GAFG,8BCvChB,IAAMzB,GAAQ,0BACRoC,GAAa,eACbC,GACJ,+JACIC,GAAO,CACXC,UAAU,EACVI,KAAK,GAEDvB,GAAO,CACXC,OAAQ,qDAEJoB,GAAa,CAAC,SAEL,SAASC,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,IACtB,kBAAC4B,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,oCAEHA,GAFG,+BAFZ,kTAYE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OACHJ,GADG,sCAEHA,GAFG,+BAKV,kBAACG,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,sCAEHA,GAFG,+BAKV,kBAACG,GAAD,CAAQC,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,qCChBtB,IAAM9H,GAAaC,OAAOC,OAAOC,MAAQ,IAEnCyC,GAAY/B,aAAW,SAACC,GAAD,MAAY,CACvC0J,KAAM,CACJlJ,WxBhBU,UwBiBVC,QAAS,sBACTqF,aAAc,MACdtE,WAAY,OACZP,SAAU,WACVxB,MxBjBY,UwBkBZ8C,IAAK,MACL,UAAW,CACTA,IAAK,OACL8F,OAAQ,UACR5I,MAAOV,IAGX4K,YAAa,CACXvI,OAAQ,SAEVmE,MAAO,CACL7F,WAAYV,EACZmB,SAAU,QACVyE,WAAY,MACZC,cAAe,MACf9C,UAAW,QAEb6F,YAAa,CACXnI,MxBrCW,UwBsCXC,WAAYV,EACZmB,SAAU,MACV4B,UAAW,QAEbiG,WAAY,CACVvI,MAAOX,EACPqB,SAAU,QACVT,WAAYT,GACZ8C,UAAW,QAEb0G,MAAO,CACL/D,aAAc,QAEhBkF,OAAQ,CACNvJ,MAAO,OACPZ,MAAOV,GAET6H,OAAQ,CACNvG,MAAO,SAETS,EAAG,CACDrB,MAAO,UACPsB,eAAgB,YAIpB,SAAS8I,GAAY3J,GACnB,IAAMS,EAAUmB,GAAU,CAAE5C,gBACtB0J,EAAU1I,EAAM0I,QAEtB,OACE,uBACElH,KAAMkH,EAAQjC,KAAKC,OACnBjF,OAAO,SACPC,IAAI,sBACJhB,UAAWD,EAAQG,GAEnB,yBAAKF,UAAWD,EAAQ+I,MACtB,yBAAK9I,UAAWD,EAAQ8H,OACtB,yBAAK7H,UAAWD,EAAQiJ,QACtB,kBAAC,KAAD,CAAYzJ,SAAS,WAEvB,yBAAKS,UAAWD,EAAQiG,QACtB,kBAAC,KAAD,CAAYzG,SAAS,YAGzB,yBAAKS,UAAWD,EAAQgJ,aACtB,yBAAK/I,UAAWD,EAAQ4E,OAAQqD,EAAQrD,OACxC,yBAAK3E,UAAWD,EAAQiH,aAAcgB,EAAQhB,cAEhD,yBAAKhH,UAAWD,EAAQqH,YACrBY,EAAQZ,WAAW8B,KAAK,SAOnC,IAAMjB,GAAiB9I,aAAW,SAACC,GAAD,MAAY,CAC5CR,KAAM,CACJS,OAAQ,OACR8B,UAAW,OACX1C,MAAO,SAACa,GAAD,OAAYA,EAAMhB,WAAa,MAAQ,QAEhD6K,aAAc,CACZ3H,UAAW,SACX1C,WAAYT,GACZQ,MxBxGY,UwByGZU,SAAU,SAACD,GAAD,OAAYA,EAAMhB,WAAa,MAAQ,SACjD0F,WAAY,MACZC,cAAe,OAEjBmF,SAAU,CACR5H,UAAW,SACX1C,WAAYT,GACZQ,MAAOV,EACPoB,SAAU,SAACD,GAAD,OAAYA,EAAMhB,WAAa,QAAU,OACnD6C,UAAW,OAEbyD,KAAM,CACJzD,UAAW,OAEb0D,SAAU,CACRC,SAAU,SAACxF,GAAD,OAAYA,EAAMhB,WAAa,OAAS,SAEpDuD,aAAc,CACZL,UAAW,SACXL,UAAW,OAEbY,QAAS,CACPC,YAAa7D,GAEfoG,OAAQ,CACNhF,SAAU,MACVM,QAAS,2BAIE,SAAS2I,GAASlJ,GAC/B,IAAMS,EAAUkI,GAAe,CAAE3J,gBAC3B+K,EAAW,CACfC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEIC,EAAY,UACbP,EADa,CAEhBQ,EACAC,EACAC,EACAC,EACAC,EACAC,IAEF,EAA4BxG,mBAAS2F,GAArC,mBAAOc,EAAP,KAAeC,EAAf,KACA,EAAwB1G,oBAAS,GAAjC,mBAAO2G,EAAP,KAAaC,EAAb,KAYA,OACE,yBAAKtK,UAAWD,EAAQnB,MACtB,yBAAKoB,UAAWD,EAAQoJ,cAAxB,6BACA,kBAAC,IAAD,CAAM9G,GAAG,YAAYC,MAAO,CAAEnC,eAAgB,SAC5C,yBAAKH,UAAWD,EAAQqJ,UAAxB,sBAGF,kBAAC/D,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGvF,UAAWD,EAAQ6E,MAC5CuF,EAAOvD,KAAI,SAACoB,GACX,OACE,kBAAC3C,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGzF,UAAWD,EAAQ8E,UACnC,kBAACoE,GAAD,CAAajB,QAASA,SAM9B,yBAAKhI,UAAWD,EAAQ8B,cACtB,kBAACnD,GAAD,CACEsB,UAAWD,EAAQwE,OACnBxE,QAAS,CAAE0C,SAAU1C,EAAQgC,SAC7BW,QAAQ,WACRH,QAhCR,WACM8H,GACFD,EAAUf,GACViB,GAAQ,KAERF,EAAUR,GACVU,GAAQ,MA4BHD,EAAO,YAAc,eC/MhC,IAAM/L,GAAaC,OAAOC,OAAOC,MAAQ,IAEnCyC,GAAY/B,aAAW,SAACC,GAAD,MAAY,CACvCR,KAAM,CACJS,OAAQ,OACR8B,UAAW,QAEbgI,aAAc,CACZ3H,UAAW,SACX1C,WAAYT,GACZQ,MAAOV,EACPoB,SAAU,SAEZ6J,SAAU,CACR5H,UAAW,SACX1C,WAAYV,EACZS,MzBAY,UyBCZU,SAAU,MACVyE,WAAY,IACZ7C,UAAW,MACX8C,cAAe,OAEjBsG,KAAM,CACJ1L,MAAOX,EACPqB,SAAU,SAACD,GAAD,OAAYA,EAAMhB,WAAa,QAAU,SACnDG,MAAO,SAACa,GAAD,OAAYA,EAAMhB,WAAa,OAAS,OAC/Ce,OAAQ,OACRmC,UAAW,SACX1C,WAAYV,EACZ+C,UAAW,OAEbU,aAAc,CACZL,UAAW,SACXL,UAAW,SAAC7B,GAAD,OAAYA,EAAMhB,WAAa,MAAQ,QAEpDyD,QAAS,CACPC,YAAa7D,GAEfoG,OAAQ,CACNhF,SAAU,MACVM,QAAS,uBAEX2K,OAAQ,CACNhJ,UAAW,SACXL,UAAW,OACX2C,aAAc,MACdhF,WAAYT,GACZQ,MAAOX,EACPqB,SAAU,QACVqB,WAAY,OACZ,UAAW,CACT/B,MAAOV,EACPsJ,OAAQ,YAGZvH,EAAG,CACDrB,MAAO,UACPsB,eAAgB,YAIL,SAASsK,GAAQnL,GAC9B,IAAMS,EAAUmB,GAAU,CAAE5C,gBAE5B,OACE,yBAAK0B,UAAWD,EAAQnB,KAAMwG,GAAG,WAC/B,yBAAKpF,UAAWD,EAAQoJ,cAAxB,oBACA,yBAAKnJ,UAAWD,EAAQqJ,UAAxB,gBACA,yBAAKpJ,UAAWD,EAAQwK,MAAxB,iNAMA,yBAAKvK,UAAWD,EAAQ8B,cACtB,uBACEf,KAAK,mCACLE,IAAI,sBACJhB,UAAWD,EAAQG,GAEnB,kBAACxB,GAAD,CACEsB,UAAWD,EAAQwE,OACnBxE,QAAS,CAAE0C,SAAU1C,EAAQgC,SAC7BW,QAAQ,YAHV,eAUJ,yBAAK1C,UAAWD,EAAQyK,QACtB,uBACE1J,KAAK,iDACLC,OAAO,SACPC,IAAI,sBACJhB,UAAWD,EAAQG,GAJrB,iF,4CCzFFe,GAAc1C,OAAOC,OAAOgC,OAAS,IAErCkK,GADanM,OAAOC,OAAOC,MAAQ,IACV,OAAS,OAElCkM,GAAgBxL,aAAW,SAACC,GAAD,MAAY,CAC3CR,KAAM,CACJyB,SAAU,QACVI,OAAQ,IACRC,KAAM,SAACpB,GAAD,MAA2B,SAAfA,EAAMsL,KAAkBF,GAAY,QACtDzH,MAAO,SAAC3D,GAAD,MAA2B,UAAfA,EAAMsL,KAAmBF,GAAY,QACxD7L,MAAOV,EACPoB,SAAU,MACVT,WAAYT,GACZI,MAAO,YAILyC,GAAY/B,aAAW,SAACC,GAAD,MAAY,CACvCyL,WAAY,CACVzK,QAAS,OACT0K,cAAe,SACfzC,WAAY,SACZhJ,OAAQ,EACRQ,QAAS,EACTkL,UAAW,OACX,WAAY,CACVzK,QAAS,KACTF,QAAS,QACT3B,MAAO,MACP+B,OAAQ,OACRnB,OAAQ,SACRL,gBAAiBb,IAGrB+B,EAAG,CACDrB,MAAO,UACPsB,eAAgB,QAElB6K,KAAM,CACJlH,aAAc,QAEhBmH,SAAU,CACRrK,WAAY,OACZf,QAAS,MACT,UAAW,CACTU,UAAW,mBACX1B,MAAOX,EACPuJ,OAAQ,YAGZyD,SAAU,CACR,WAAY,CACV5K,QAAS,KACTF,QAAS,QACT3B,MAAO,MACP+B,OAAQ,OACRnB,OAAQ,SACRL,gBAAiBb,IAGrBgN,MAAO,CACLC,YAAa,cACb7L,SAAU,SACVuE,aAAc,OAEduH,YAAa,OACb3F,cAAe,MACfpE,cAAe,cACfV,WAAY,OACZ,UAAW,CACTL,UAAW,mBACX1B,MAAOX,EACPuJ,OAAQ,gBAKd,SAAS6D,GAAWhM,GAClB,IAAMS,EAAU4K,GAAcrL,GAE9B,OAAO,yBAAKU,UAAWD,EAAQnB,MAAOU,EAAMyD,UAG/B,SAASwI,GAAOjM,GAC7B,IAAMS,EAAUmB,GAAU,CAAED,iBACtBuK,EAAajN,OAAOC,OAAOC,MAAQ,IAEzC,OACE,6BACG+M,GACC,kBAACF,GAAD,CAAYV,KAAK,QACf,wBAAI5K,UAAWD,EAAQ8K,YACrB,yBAAK7K,UAAWD,EAAQiL,MACtB,uBACElK,KAAK,+BACLC,OAAO,SACPC,IAAI,sBACJhB,UAAWD,EAAQG,GAEnB,wBAAIF,UAAWD,EAAQkL,UACrB,kBAAC,KAAD,QAGJ,uBACEnK,KAAK,+CACLC,OAAO,SACPC,IAAI,sBACJhB,UAAWD,EAAQG,GAEnB,wBAAIF,UAAWD,EAAQkL,UACrB,kBAAC,KAAD,QAGJ,uBACEnK,KAAK,oCACLE,IAAI,sBACJhB,UAAWD,EAAQG,GAEnB,wBAAIF,UAAWD,EAAQkL,UACrB,kBAAC,KAAD,WAOXO,GACC,kBAACF,GAAD,CAAYV,KAAK,SACf,yBAAK5K,UAAWD,EAAQmL,UACtB,uBACEpK,KAAK,mCACLE,IAAI,sBACJhB,UAAWD,EAAQG,GAEnB,yBAAKF,UAAWD,EAAQoL,OAAxB,iCCnId,IAAM7M,GAAaC,OAAOC,OAAOC,MAAQ,IAEnCyC,GAAY/B,aAAW,SAACC,GAAD,MAAY,CACvCR,KAAM,CACJyF,SAAU,SAAC/E,GAAD,OAAYA,EAAMhB,WAAa,MAAQ,OACjDe,OAAQ,YAIG,SAASoM,KACtB,IAAM1L,EAAUmB,GAAU,CAAE5C,gBAE5B,OACE,6BACE,kBAAC,GAAD,MAEA,yBAAK0B,UAAWD,EAAQnB,MACtB,kBAAC4F,GAAD,MACA,kBAACW,GAAD,MACA,kBAACqD,GAAD,MACA,kBAAC,GAAD,MACA,kBAACiC,GAAD,OAGF,kBAACc,GAAD,O,4ECZArK,GAAY/B,YAAW,CAC3BP,KAAM,CACJyF,SAAU,OACVzE,W5BPW,U4BQXf,M5BNW,W4BQb8F,MAAO,CACLpF,SAAU,MACVyE,WAAY,MACZnF,MAAOV,GAET6I,YAAa,CACXnI,M5BbY,W4Bed6M,MAAO,CACLlL,OAAQ,QAEVmL,QAAS,CACPlM,MAAO,SAETa,QAAS,GAIT6G,SAAU,CACRtI,M5Bda,U4BebmD,Y5Bfa,W4BiBfkF,SAAU,CACRrI,M5BjBc,U4BkBdmD,Y5BlBc,W4BoBhBsF,IAAK,CACHzI,M5BpBe,U4BqBfmD,Y5BrBe,W4BuBjB4G,IAAK,CACH/J,M5BvBgB,U4BwBhBmD,Y5BxBgB,W4B0BlB6G,UAAW,CACThK,MAAOV,EACP6D,YAAa7D,GAEf4D,QAAS,CACPC,YAAa7D,GAEfoG,OAAQ,CACN9E,MAAO,UAQI,SAASwJ,GAAY3J,GAClC,IAAMS,EAAUmB,KACRgD,EAAkB5E,EAAlB4E,KAAM8D,EAAY1I,EAAZ0I,QAEd,OACE,kBAAC4D,GAAA,EAAD,CAAM5L,UAAWD,EAAQnB,MACvB,kBAAC,IAAD,CAAMyD,GAAE,mBAAc6B,GAAQ5B,MAAO,CAAEnC,eAAgB,SACrD,kBAAC0L,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACE9L,UAAWD,EAAQ2L,MACnBpF,MAAK,0BAAqBpC,EAArB,YAA6B8D,EAAQjB,YAC1CpC,MAAOT,IAET,kBAAC6H,GAAA,EAAD,CAAa/L,UAAWD,EAAQO,SAC9B,kBAAC0L,GAAA,EAAD,CAAYC,cAAY,EAACjM,UAAWD,EAAQ4E,OACzCqD,EAAQrD,OAEX,kBAACqH,GAAA,EAAD,CAAYhM,UAAWD,EAAQiH,aAC5BgB,EAAQhB,gBAMjB,kBAACkF,GAAA,EAAD,CAAalM,UAAWD,EAAQ4L,SAC7B3D,EAAQf,KAAKE,UACZ,kBAACgF,GAAA,EAAD,CACEzJ,QAAQ,WACR0J,KAAK,SACLpM,UAAWD,EAAQoH,SACnBkF,MAAM,aAGTrE,EAAQf,KAAKC,UACZ,kBAACiF,GAAA,EAAD,CACEzJ,QAAQ,WACR0J,KAAK,SACLpM,UAAWD,EAAQmH,SACnBmF,MAAM,aAGTrE,EAAQf,KAAKK,KACZ,kBAAC6E,GAAA,EAAD,CACEzJ,QAAQ,WACR0J,KAAK,SACLpM,UAAWD,EAAQuH,IACnB+E,MAAM,eAGTrE,EAAQf,KAAK2B,KACZ,kBAACuD,GAAA,EAAD,CACEzJ,QAAQ,WACR0J,KAAK,SACLpM,UAAWD,EAAQ6I,IACnByD,MAAM,wBAGTrE,EAAQf,KAAK4B,WACZ,kBAACsD,GAAA,EAAD,CACEzJ,QAAQ,WACR0J,KAAK,SACLpM,UAAWD,EAAQ8I,UACnBwD,MAAM,sBAGV,kBAAC,IAAD,CAAMhK,GAAE,mBAAc6B,GAAQ5B,MAAO,CAAEnC,eAAgB,SACrD,kBAACzB,GAAD,CAAcsB,UAAWD,EAAQwE,OAAQxE,QAAS,CAAE0C,SAAU1C,EAAQgC,SAAWqK,KAAK,SAAS1J,QAAQ,YAAvG,mBC3IV,IAAMiC,GAAQ,eACRoC,GAAa,sBACbC,GACJ,yLACIC,GAAO,CACXC,UAAU,EACVC,UAAU,GAENpB,GAAO,CACXC,OAAQ,qDAGK,SAASqB,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,wCAEHA,GAFG,gCAGHA,GAHG,yBAFZ,6VAaE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OACHJ,GADG,gCAEHA,GAFG,0BC7BhB,IAAMzB,GAAQ,cACRoC,GAAa,oBACbC,GACJ,4LACIC,GAAO,CACXC,UAAU,EACVC,UAAU,GAENpB,GAAO,CACXC,OAAQ,qDAGK,SAASqB,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,oCAEHA,GAFG,4BAGHA,GAHG,qBAFZ,syBAoBE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,4BAAkCA,GAAlC,sBCpChB,IAAMzB,GAAQ,UACRoC,GAAa,cACbC,GACJ,8LACIC,GAAO,CACXC,UAAU,EACV0B,KAAK,GAED7C,GAAO,CACXC,OAAQ,sCACRC,KAAM,oCACNC,IAAK,yCAGQ,SAASmB,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IAArC,qdAQE,kBAACQ,GAAD,CAAQF,OAAK,EAACG,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,4BCxB5B,IAAMzB,GAAQ,iBACRoC,GAAa,UACbC,GACJ,kMACIC,GAAO,CACXC,UAAU,GAGG,SAASG,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,IAAxB,qjBASE,kBAAC4B,GAAD,CAAQF,OAAK,EAACG,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,oBCnB5B,IAAMzB,GAAQ,sBACRoC,GAAa,UACbC,GACJ,kMACIC,GAAO,CACXC,UAAU,EACVC,UAAU,EACV0B,WAAW,GAEP9C,GAAO,CACXC,OAAQ,mCAGK,SAASqB,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CACEC,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,0BAAgCA,GAAhC,oBAFZ,wxBAeE,kBAACG,GAAD,CAAQF,OAAK,EAACG,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,qBC9B5B,IAAMzB,GAAQ,aACRoC,GAAa,gBACbC,GACJ,wLACIC,GAAO,CACXC,UAAU,EACV0B,KAAK,GAED7C,GAAO,CACXC,OAAQ,0CAGK,SAASqB,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CAAQC,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,+BADlB,ufASE,kBAACG,GAAD,CAAQF,OAAK,EAACG,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,gCCvB5B,IAAMzB,GAAQ,cACRoC,GAAa,iBACbC,GACJ,qOACIC,GAAO,CACXC,UAAU,EACV0B,KAAK,GAED7C,GAAO,CACXC,OAAQ,2CAGK,SAASqB,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CAAQC,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,iCADlB,8fCdJ,IAAMzB,GAAQ,iBACRoC,GAAa,YACbC,GACJ,iKACIC,GAAO,CACXC,UAAU,EACVC,UAAU,GAGG,SAASE,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,IACtB,kBAAC4B,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,8BAEHA,GAFG,yBAFZ,4aCXJ,IAAMzB,GAAQ,YACRoC,GAAa,iBACbC,GACJ,oKACIC,GAAO,CACXC,UAAU,EACVC,UAAU,GAGG,SAASE,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,IACtB,kBAAC4B,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,uCAEHA,GAFG,iCAFZ,0ZAaE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OACHJ,GADG,wCAEHA,GAFG,kCC1BhB,IAAMzB,GAAQ,iBACRoC,GAAa,iBACbC,GACJ,wLACIC,GAAO,CACXC,UAAU,EACVC,UAAU,EACV0B,WAAW,GAEP9C,GAAO,CACXC,OAAQ,yCAGK,SAASqB,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,GAAOoB,KAAMA,IACnC,kBAACQ,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,uCAEHA,GAFG,iCAFZ,shBAeE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OACHJ,GADG,wCAEHA,GAFG,kCChChB,IAAMzB,GAAQ,cACRoC,GAAa,YACbC,GACJ,sHACIC,GAAO,CACXC,UAAU,EACVC,UAAU,GAGG,SAASE,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,IACtB,kBAAC4B,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,6BAEHA,GAFG,kCAGHA,GAHG,kCAIHA,GAJG,2BAFZ,wXAeE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OACHJ,GADG,+BAEHA,GAFG,wBAKV,kBAACG,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,gCAEHA,GAFG,yBAKV,kBAACG,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,8BAEHA,GAFG,wBCxChB,IAAMzB,GAAQ,OACRoC,GAAa,YACbC,GACJ,wJACIC,GAAO,CACXC,UAAU,EACVC,UAAU,GAGG,SAASE,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,IACtB,kBAAC4B,GAAD,CACEC,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,6BAAmCA,GAAnC,sBAFZ,+dAWE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,6BAAmCA,GAAnC,uBCxBhB,IAAMzB,GAAQ,YACRoC,GAAa,cACbC,GACJ,sHACIC,GAAO,CACXC,UAAU,EACVC,UAAU,GAGG,SAASE,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,IACtB,kBAAC4B,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,iCAEHA,GAFG,0BAFZ,4kBAgBE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OACHJ,GADG,iCAEHA,GAFG,2BC7BhB,IAAMzB,GAAQ,qBACRoC,GAAa,oBACbC,GACJ,4FACIC,GAAO,CACXC,UAAU,EACVC,UAAU,GAGG,SAASE,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,IACtB,kBAAC4B,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,6CAEHA,GAFG,uCAFZ,8YAaE,kBAACG,GAAD,CAAQF,OAAK,EAACG,OAAQ,CAAC,GAAD,OAAIJ,GAAJ,wCCxB5B,IAAMzB,GAAQ,iBACRoC,GAAa,sBACbC,GACJ,gFACIC,GAAO,CACXC,UAAU,EACVC,UAAU,EACV0B,WAAW,GAGE,SAASxB,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,IACtB,kBAAC4B,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,iDAEHA,GAFG,4CAFZ,yTCZJ,IAAMzB,GAAQ,YACRoC,GAAa,iBACbC,GACJ,0MACIC,GAAO,CACXC,UAAU,EACVC,UAAU,GAGG,SAASE,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,IACtB,kBAAC4B,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,uCAEHA,GAFG,8BAFZ,+iBAeE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OACHJ,GADG,qCAEHA,GAFG,+BC5BhB,IAAMzB,GAAQ,iBACRoC,GAAa,kBACbC,GACJ,4GACIC,GAAO,CACXC,UAAU,EACVC,UAAU,GAGG,SAASE,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,IACtB,kBAAC4B,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,yCAEHA,GAFG,oCAFZ,kTCXJ,IAAMzB,GAAQ,qBACRoC,GAAa,iBACbC,GACJ,+DACIC,GAAO,CACXE,UAAU,GAGG,SAASE,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,IACtB,kBAAC4B,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,uCAEHA,GAFG,kCAFZ,8KCVJ,IAAMzB,GAAQ,iCACRoC,GAAa,eACbC,GACJ,wGACIC,GAAO,CACXC,UAAU,EACVI,KAAK,GAGQ,SAASD,KACtB,OACE,kBAACxB,GAAD,CAAiBlB,MAAOA,IACtB,kBAAC4B,GAAD,CACEC,OAAQ,CAAC,GAAD,OACHJ,GADG,oCAEHA,GAFG,sCAGHA,GAHG,+BAFZ,kOAYE,kBAACG,GAAD,CACEF,OAAK,EACLG,OAAQ,CAAC,GAAD,OACHJ,GADG,sCAEHA,GAFG,gCCKD,QACbkG,QAAS7D,EACT8D,QAAStC,EACTuC,QAAS7C,EACT8C,cAAe5C,EACf6C,MAAOC,EACPC,IAAKC,EACLC,SAAUnE,EACVoE,OAAQxD,EACRyD,OAAQxD,EACRyD,QAASC,EACTC,IAAKC,EACLC,IAAKC,EACLC,aAAcjE,EACdkE,UAAWC,EACXC,WAAYC,EACZC,WAAYlF,EACZmF,kBAAmBpE,EACnBqE,MAAOC,EACPC,UAAWC,EACXC,MAAOnE,EACPoE,UAAWC,EACXC,KAAMC,EACNC,KAAMC,EACNC,OAAQC,EACRC,aAAcC,EACdC,eAAgBC,EAChBC,UAAWC,EACXC,WAAYC,EACZC,UAAWC,EACXC,MAAOvF,EACPwF,cAAetF,EACfuF,SAAUrF,EACVsF,SAAUC,EACVC,MAAOhG,GClDHzI,GAAc1C,OAAOC,OAAOC,MAAQ,IAEpCyC,GAAY/B,aAAW,SAACC,GAAD,MAAY,CACvCR,KAAM,CACJgB,WjDPS,WiDSX+E,MAAO,CACLvE,QAAS,OACTiI,WAAY,SACZsH,SAAU,OACV9Q,MAAOV,EACP6F,WAAY,MACZzE,SAAU,MACVmG,cAAe,MACfkC,WAAY,MACZvG,WAAY,MACZvC,WAAYT,IAEduR,KAAM,CACJrQ,SAAU,OAEZsQ,MAAO,CACLrP,OAAQ,OAEVoE,KAAM,CACJvD,WAAW,GAAD,OA3BM,EA2BN,MACVK,YAAY,GAAD,OA5BK,EA4BL,MACXjD,MAAM,GAAD,OAAK,GAAL,OAEPoG,SAAU,GAQVsC,SAAU,CACRtI,MAAO,SAACS,GAAD,OAAYA,EAAMwQ,OAAO3I,SjDxBnB,UiDfK,WAwClBnF,YAAa,SAAC1C,GAAD,OAAYA,EAAMwQ,OAAO3I,SjDzBzB,UiDfK,WAyClB9F,WAAY,MACZF,UAAW,SAAC7B,GAAD,OAAYA,EAAM2B,YAAc,MAAQ,IAErDiG,SAAU,CACRrI,MAAO,SAACS,GAAD,OAAYA,EAAMwQ,OAAO5I,SjD7BlB,UiDhBI,WA8ClBlF,YAAa,SAAC1C,GAAD,OAAYA,EAAMwQ,OAAO5I,SjD9BxB,UiDhBI,WA+ClB7F,WAAY,QACZF,UAAW,SAAC7B,GAAD,OAAYA,EAAM2B,YAAc,MAAQ,IAErDqG,IAAK,CACHzI,MAAO,SAACS,GAAD,OAAYA,EAAMwQ,OAAOxI,IjDlCjB,UiDjBG,WAoDlBtF,YAAa,SAAC1C,GAAD,OAAYA,EAAMwQ,OAAOxI,IjDnCvB,UiDjBG,WAqDlBjG,WAAY,QACZF,UAAW,SAAC7B,GAAD,OAAYA,EAAM2B,YAAc,MAAQ,IAErD2H,IAAK,CACH/J,MAAO,SAACS,GAAD,OAAYA,EAAMwQ,OAAOlH,IjDvChB,UiDlBE,WA0DlB5G,YAAa,SAAC1C,GAAD,OAAYA,EAAMwQ,OAAOlH,IjDxCtB,UiDlBE,WA2DlBvH,WAAY,QACZF,UAAW,SAAC7B,GAAD,OAAYA,EAAM2B,YAAc,MAAQ,IAErD4H,UAAW,CACThK,MAAO,SAACS,GAAD,OAAYA,EAAMwQ,OAAOjH,UAAY1K,EA/D1B,WAgElB6D,YAAa,SAAC1C,GAAD,OACXA,EAAMwQ,OAAOjH,UAAY1K,EAjET,WAkElBkD,WAAY,QACZF,UAAW,SAAC7B,GAAD,OAAYA,EAAM2B,YAAc,MAAQ,QC9EvD,IAIMC,GAAY/B,aAAW,SAACC,GAAD,MAAY,CACvCR,KAAM,CACJoF,WAAY,MACZzE,SAAU,gBACVc,SAAU,WACVK,KAAK,GAAD,OATW,EASX,MACJjC,MAAM,GAAD,OAAK,GAAL,MACL+B,OAAO,GAAD,OAAK,GAAL,MACNmB,IAAI,GAAD,OAXW,GAWX,OAELwJ,MAAO,CACLtM,MAAO,SAETkR,QAAS,CACPlR,MAAO,QACP+I,WAAW,GAAD,OAjBM,EAiBN,OAEZ5B,OAAQ,CACNnH,MAAO,QACP+I,WAAW,GAAD,OArBM,EAqBN,OAEZoI,SAAU,CACRnR,MAAO,QACP+I,WAAW,GAAD,OAzBM,EAyBN,OAEZ7F,QAAS,CACPC,YlDLgB,WkDOlB2D,KAAM,CACJ9G,MlDLe,WkDOjB0F,OAAQ,CACN9E,MAAO,OACPuE,WAAY,MACZzE,SAAU,QACVV,MlDdgB,UkDehB,UAAW,CACTmD,YlDba,UkDcbnD,MlDda,gBmD5BnB,IAGMqC,GAAY/B,aAAW,SAACC,GAAD,MAAY,CACvCR,KAAM,CACJoF,WAAY,MACZzE,SAAU,MACVc,SAAU,WACVK,KAAK,GAAD,OARW,EAQX,MACJjC,MAAM,GAAD,OAAK,GAAL,MACL+B,OAAO,GAAD,OAAK,GAAL,MACNmB,IAAI,GAAD,OAVW,GAUX,OAELhC,KAAM,CACJd,MAAO,SAETkD,QAAS,CACPC,YnDQgB,WmDNlB2D,KAAM,CACJ9G,MnDQe,WmDNjB0F,OAAQ,CACN9E,MAAO,OACPuE,WAAY,MACZzE,SAAU,QACVmC,YAAa,MACb7C,MnDFgB,UmDGhB,UAAW,CACTmD,YnDDa,UmDEbnD,MnDFa,gBoD1BnBoR,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACrJ,KAAK,IAAIsJ,UAAW3E,KACjC,kBAAC,IAAD,CAAO0E,OAAK,EAACrJ,KAAK,WAAWsJ,UFyCpB,WACb,IAAMrQ,EAAUmB,KAMhB,OAJAuD,qBAAU,WACRC,SAASC,MAAQ,+BAIjB,6BACE,kBAAC,GAAD,MAEA,yBAAK3E,UAAWD,EAAQnB,MACtB,yBAAKoB,UAAWD,EAAQoL,OAAxB,SACS,IACP,uBACErK,KAAK,mCACLE,IAAI,sBACJhB,UAAWD,EAAQ4F,MAHrB,8BAQF,yBAAK3F,UAAWD,EAAQgQ,SAAxB,yBACA,yBAAK/P,UAAWD,EAAQiG,QAAxB,UACU,IACR,uBACElF,KAAK,8BACLC,OAAO,SACPC,IAAI,sBACJhB,UAAWD,EAAQ4F,MAJrB,wBASF,yBAAK3F,UAAWD,EAAQiQ,UAAxB,YACY,IACV,uBACElP,KAAK,+CACLC,OAAO,SACPC,IAAI,sBACJhB,UAAWD,EAAQ4F,MAJrB,oCAUF,6BACA,6BAEA,kBAAC,IAAD,CAAMtD,GAAG,IAAIC,MAAO,CAAEnC,eAAgB,SACpC,kBAAClB,GAAA,EAAD,CACEe,UAAWD,EAAQwE,OACnBxE,QAAS,CAAE0C,SAAU1C,EAAQgC,SAC7BW,QAAQ,WACR7D,MAAM,WAJR,cE1FJ,kBAAC,IAAD,CAAOsR,OAAK,EAACrJ,KAAK,YAAYsJ,UH2ErB,WACb,MAA4BC,IAAM3M,SAAS,CACzCwD,UAAU,EACVC,UAAU,EACVG,KAAK,EACLsB,KAAK,EACLC,WAAW,IALb,mBAAOiH,EAAP,KAAeQ,EAAf,KAOMvQ,EAAUmB,GAAU,CAAE4O,SAAQ7O,iBAC9B0F,EAAW1F,GAAc,GAAK,EAEpCwD,qBAAU,WACRC,SAASC,MAAQ,6BACjBpG,OAAOuH,SAAS,EAAG,MAGrB,IAAMyK,EAAc,SAACC,GACnBF,EAAU,6BAAKR,GAAN,mBAAeU,GAAOV,EAAOU,OAYxC,OACE,6BACE,kBAAC,GAAD,MAEA,yBAAKxQ,UAAWD,EAAQnB,MACtB,yBAAKoB,UAAWD,EAAQ4E,OAAxB,aAEE,kBAACwH,GAAA,EAAD,CACEzJ,QAAQ,WACR2J,MAAM,WACNrM,UAAWD,EAAQoH,SACnB5E,QAAS,kBAAMgO,EAAY,eAE7B,kBAACpE,GAAA,EAAD,CACEzJ,QAAQ,WACR2J,MAAM,WACNrM,UAAWD,EAAQmH,SACnB3E,QAAS,kBAAMgO,EAAY,eAE7B,kBAACpE,GAAA,EAAD,CACEzJ,QAAQ,WACR2J,MAAM,aACNrM,UAAWD,EAAQuH,IACnB/E,QAAS,kBAAMgO,EAAY,UAE7B,kBAACpE,GAAA,EAAD,CACEzJ,QAAQ,WACR2J,MAAM,sBACNrM,UAAWD,EAAQ6I,IACnBrG,QAAS,kBAAMgO,EAAY,UAE7B,kBAACpE,GAAA,EAAD,CACEzJ,QAAQ,WACR2J,MAAM,oBACNrM,UAAWD,EAAQ8I,UACnBtG,QAAS,kBAAMgO,EAAY,iBAI/B,kBAAClL,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGvF,UAAWD,EAAQ6E,MAC5C6L,OAAOC,QAAQC,IAAc/J,KAAI,YAAsB,IAAD,mBAAnB1C,EAAmB,KAAb8D,EAAa,KACrD,OAlDU,SAACA,GACnB,cAAoByI,OAAOC,QAAQ1I,EAAQf,MAA3C,eAAkD,CAA7C,IAAOJ,EAAP,uBACH,IAAKiJ,EAAOjJ,GACV,OAAO,EAGX,OAAO,EA4CK+J,CAAY5I,GAEZ,kBAAC3C,GAAA,EAAD,CAAMrF,UAAWD,EAAQ8E,SAAUW,MAAI,EAACC,GAAIkB,EAAUE,IAAK3C,GACzD,kBAAC,GAAD,CAAaA,KAAMA,EAAM8D,QAASA,EAASnB,IAAK3C,KAI/C,uCGvJb,kBAAC,IAAD,CAAOiM,OAAK,EAACrJ,KAAK,YAAYsJ,UD2BrB,WACb,IAAMrQ,EAAUmB,KAMhB,OAJAuD,qBAAU,WACRC,SAASC,MAAQ,gCAIjB,6BACE,kBAAC,GAAD,MAEA,yBAAK3E,UAAWD,EAAQnB,MACtB,yBAAKoB,UAAWD,EAAQJ,MAAxB,yDACyD,IACvD,uBACEmB,KAAK,mCACLC,OAAO,SACPC,IAAI,sBACJhB,UAAWD,EAAQ4F,MAJrB,QAFF,KAaA,6BACA,6BAEA,kBAAC,IAAD,CAAMtD,GAAG,IAAIC,MAAO,CAAEnC,eAAgB,SACpC,kBAAClB,GAAA,EAAD,CACEe,UAAWD,EAAQwE,OACnBxE,QAAS,CAAE0C,SAAU1C,EAAQgC,SAC7BW,QAAQ,WACR7D,MAAM,WAJR,cCvDH4R,OAAOC,QAAQC,IAAc/J,KAAI,mCAAE1C,EAAF,KAAQ8D,EAAR,YAChC,kBAAC,IAAD,CACEmI,OAAK,EACLrJ,KAAI,oBAAe5C,GACnB2C,IAAK3C,EACLkM,UAAWpI,EAAQX,eAGvB,kBAAC,IAAD,CAAOP,KAAK,IAAIsJ,UAAW3E,OAG/B/G,SAASmM,eAAe,W","file":"static/js/main.74db251b.chunk.js","sourcesContent":["// Color scheme: https://coolors.co/ffffff-ff7f11-353535-ff1b1c-202020\n\n/* color scheme:\n\n| Color          | Hex                                                                |\n| -------------- | ------------------------------------------------------------------ |\n| Navy           | ![#0a192f](https://via.placeholder.com/20/0a192f?text=+) `#0a192f` |\n| Light Navy     | ![#112240](https://via.placeholder.com/20/112240?text=+) `#112240` |\n| Lightest Navy  | ![#233554](https://via.placeholder.com/20/233554?text=+) `#233554` |\n| Slate          | ![#8892b0](https://via.placeholder.com/20/8892b0?text=+) `#8892b0` |\n| Light Slate    | ![#a8b2d1](https://via.placeholder.com/20/a8b2d1?text=+) `#a8b2d1` |\n| Lightest Slate | ![#ccd6f6](https://via.placeholder.com/20/ccd6f6?text=+) `#ccd6f6` |\n| White          | ![#e6f1ff](https://via.placeholder.com/20/e6f1ff?text=+) `#e6f1ff` |\n| Orange         | ![#FF7F11](https://via.placeholder.com/20/FF7F11?text=+) `#FF7F11` |\n\n*/\nconst navy = \"#0a192f\";\nconst lnavy = \"#112240\";\nconst llnavy = \"#233554\";\nconst slate = \"#8892b0\";\nconst lslate = \"#a8b2d1\";\nconst llslate = \"#ccd6f6\";\nconst white = \"#e6f1ff\";\nconst orange = \"#FF7F11\";\nconst slightOrange = \"rgba(255, 127, 17, 0.2)\";\n\nconst fontSans =\n  \"Calibre,San Francisco,SF Pro Text,-apple-system,system-ui,sans-serif\";\nconst fontMono = \"SF Mono,Fira Code,Fira Mono,Roboto Mono,monospace\";\n\nconst backgroundColor = \"#202020\";\nconst paperColor = \"#303030\";\nconst colorOrange = \"#F7931E\";\nconst colorRed = \"#FF1B1C\";\nconst colorBlue = \"#4fbbd6\";\nconst colorGreen = \"#38A700\";\nconst colorYellow = \"#F7CB15\";\nconst paddingSize = \"8px\";\n\nexport {\n  navy,\n  lnavy,\n  llnavy,\n  slate,\n  lslate,\n  llslate,\n  white,\n  orange,\n  slightOrange,\n  fontSans,\n  fontMono,\n  backgroundColor,\n  paperColor,\n  paddingSize,\n  colorOrange,\n  colorRed,\n  colorBlue,\n  colorGreen,\n  colorYellow,\n};\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { orange, slightOrange, fontMono, llslate } from \"./PageStyles\";\n\nconst thinScreen = window.screen.width < 950;\n\nconst StyledButton = withStyles({\n  root: {\n    color: orange,\n    fontFamily: fontMono,\n    textTransform: \"none\",\n    \"&:hover\": {\n      backgroundColor: slightOrange,\n    },\n  },\n})(Button);\n\nconst sectionHeaderStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    // lineHeight: \"0.1em\",\n    // borderBottom: `1px solid ${slate}`,\n    margin: (props) => (props.thinScreen ? \"10px 0 0\" : \"10px 0 20px\"),\n    color: llslate,\n    fontFamily: fontMono,\n    fontSize: (props) => (props.thinScreen ? \"1.5em\" : \"2em\"),\n  },\n  number: {\n    color: orange,\n    float: \"left\",\n    paddingRight: \"8px\",\n  },\n  text: {\n    background: \"#0a192f\",\n    padding: \"0 10px\",\n  },\n}));\n\nfunction SectionHeader(props) {\n  const classes = sectionHeaderStyles({ thinScreen });\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <div className={classes.number}>0{props.number}.</div>\n        <div className={classes.text}>{props.text}</div>\n      </div>\n    </div>\n  );\n}\n\nconst linkStyles = makeStyles((theme) => ({\n  a: {\n    color: orange,\n    textDecoration: \"none\",\n    display: \"inline-block\",\n    position: \"relative\",\n    \"&::after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      width: \"100%\",\n      transform: \"scaleX(0)\",\n      height: \"1px\",\n      bottom: 7,\n      left: 0,\n      backgroundColor: orange,\n      transformOrigin: \"bottom right\",\n      transition: \"transform 0.25s ease-out\",\n    },\n    \"&:hover\": {\n      \"&::after\": {\n        transform: \"scaleX(1)\",\n        transformOrigin: \"bottom left\",\n      },\n    },\n  },\n}));\n\nfunction StyledLink(props) {\n  const classes = linkStyles();\n  return (\n    <a\n      href={props.href}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className={classes.a}\n    >\n      {props.text}\n    </a>\n  );\n}\n\nexport { StyledButton, SectionHeader, StyledLink };\n","import React, { useState } from \"react\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { fontMono, orange, slate, lnavy } from \"./PageStyles\";\nimport { StyledButton } from \"./Common\";\n\nconst smallScreen = window.screen.width < 650;\nconst thinScreen = window.screen.width < 950;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: \"transparent\",\n    color: orange,\n    marginTop: \"1.5vh\",\n  },\n  logo: {\n    height: \"2.5em\",\n    marginLeft: \"1.8vw\",\n    verticalAlign: \"center\",\n  },\n  leftAlign: {\n    float: (props) => (props.thinScreen ? \"none\" : \"left\"),\n  },\n  number: {\n    textAlign: (props) => (props.thinScreen ? \"center\" : \"inherit\"),\n    float: (props) => (props.thinScreen ? \"none\" : \"left\"),\n    color: orange,\n    paddingRight: \"2px\",\n  },\n  navItem: {\n    textAlign: (props) => (props.thinScreen ? \"center\" : \"inherit\"),\n    float: (props) => (props.thinScreen ? \"none\" : \"left\"),\n    color: slate,\n    fontFamily: fontMono,\n    marginLeft: \"1vw\",\n    marginRight: \"1vw\",\n    marginTop: (props) => (props.thinScreen ? \"5vh\" : \"0\"),\n    fontSize: (props) => (props.thinScreen ? \"1.2em\" : \"0.9em\"),\n    transition: \"0.3s\",\n    \"&:hover\": {\n      color: orange,\n    },\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n  // TODO: De-duplicate this with navItem\n  navButton: {\n    float: (props) => (props.thinScreen ? \"none\" : \"left\"),\n    fontFamily: fontMono,\n    marginLeft: \"1vw\",\n    marginRight: \"1vw\",\n    marginTop: (props) => (props.thinScreen ? \"5vh\" : 0),\n    fontSize: (props) => (props.thinScreen ? \"1.2em\" : \"0.9em\"),\n    \"&:hover\": {\n      color: orange,\n    },\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n  centerButton: {\n    alignContent: \"center\",\n    textAlign: \"center\",\n  },\n  outline: {\n    borderColor: orange,\n  },\n  rightToolbar: {\n    marginLeft: \"auto\",\n    marginTop: \"3vh\",\n  },\n}));\n\nfunction NavbarLink(props) {\n  const classes = props.styles;\n  const close = props.close;\n  return (\n    <HashLink to={props.to} style={{ textDecoration: \"none\" }}>\n      <div className={classes.navItem} onClick={close}>\n        <div className={classes.number}>0{props.number}.</div>\n        <div className={classes.leftAlign}>{props.text}</div>\n      </div>\n    </HashLink>\n  );\n}\n\nfunction NavbarButton(props) {\n  const classes = props.styles;\n  const close = props.close;\n  const content = (\n    <StyledButton\n      className={classes.navButton}\n      classes={{ outlined: classes.outline }}\n      variant=\"outlined\"\n      href={props.href}\n      target=\"_blank\"\n    >\n      {props.text}\n    </StyledButton>\n  );\n  return thinScreen ? (\n    <div className={classes.centerButton} onClick={close}>{content}</div>\n  ) : (\n    content\n  );\n}\n\nfunction FullToolBar(props) {\n  const classes = useStyles({ smallScreen, thinScreen });\n\n  return (\n    <Toolbar className={classes.root}>\n      <img className={classes.logo} src=\"static/logo.png\" alt=\"\" />\n\n      <section className={classes.rightToolbar}>{props.children}</section>\n    </Toolbar>\n  );\n}\n\nconst drawerClasses = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    right: \"0\",\n    top: \"0\",\n    width: \"80%\",\n    position: \"fixed\",\n    background: lnavy,\n    opacity: \"1.0\",\n    zIndex: 9999,\n  },\n  close: {\n    right: \"4vw\",\n    top: \"8vw\",\n    position: \"fixed\",\n  },\n  items: {\n    position: \"relative\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n}));\n\nfunction MobileDrawer(props) {\n  const classes = drawerClasses({ thinScreen });\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.close}>\n        <CloseIcon fontSize=\"large\" onClick={props.close} />\n      </div>\n      <div className={classes.items}>{props.children}</div>\n    </div>\n  );\n}\n\nfunction MobileToolBar(props) {\n  const classes = useStyles({ smallScreen, thinScreen });\n  const { open, toggle } = props;\n  \n\n  \n\n  return (\n    <Toolbar className={classes.root}>\n      <img className={classes.logo} src=\"static/logo.png\" alt=\"\" />\n\n      <section className={classes.rightToolbar}>\n        <MenuIcon fontSize=\"large\" onClick={toggle} />\n        {open && <MobileDrawer close={toggle}>{props.children}</MobileDrawer>}\n      </section>\n    </Toolbar>\n  );\n}\n\nfunction ToolBar(props) {\n  const classes = useStyles({ thinScreen });\n  const [open, setOpen] = useState(false);\n\n  function toggle() {\n    setOpen(!open);\n  }\n\n  function close() {\n    setOpen(false);\n  }\n\n  const children = (\n    <div>\n      <NavbarLink to=\"/\" number=\"0\" styles={classes} close={close} text=\"Home\" />\n      <NavbarLink to=\"/#about\" number=\"1\" styles={classes} close={close} text=\"About Me\" />\n      <NavbarLink to=\"/#projects\" number=\"2\" styles={classes} close={close} text=\"Projects\" />\n      <NavbarLink\n        to=\"/#contact\"\n        number=\"3\"\n        styles={classes}\n        text=\"Contact Me\"\n        close={close}\n      />\n\n      <NavbarButton\n        href=\"https://github.com/0xJeremy/\"\n        styles={classes}\n        text=\"Github\"\n        close={close} \n      />\n      <NavbarButton\n        href=\"/static/JCK%20Resume.pdf\"\n        styles={classes}\n        text=\"Resume\"\n        close={close} \n      />\n    </div>\n  );\n\n  return (\n    <div>\n      {!thinScreen && <FullToolBar>{children}</FullToolBar>}\n      {thinScreen && <MobileToolBar open={open} toggle={toggle}>{children}</MobileToolBar>}\n    </div>\n  );\n}\n\nexport default ToolBar;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { fontMono, fontSans, orange, llslate, slate } from \"./PageStyles\";\nimport { StyledButton } from \"./Common\";\n\nconst offsetTop = 18;\nconst smallScreen = window.screen.height < 850;\nconst thinScreen = window.screen.width < 950;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    top: (props) =>\n      props.smallScreen ? `${offsetTop / 3}vh` : `${offsetTop}vh`,\n    width: (props) => (props.smallScreen ? \"95%\" : \"70%\"),\n    margin: \"auto\",\n  },\n  hello: {\n    fontFamily: fontMono,\n    color: orange,\n    fontSize: \"1em\",\n    marginBottom: \"24px\",\n  },\n  intro: {\n    fontWeight: \"600\",\n    letterSpacing: \"1px\",\n    fontFamily: fontSans,\n    fontSize: (props) => (props.smallScreen ? \"2.5em\" : \"5em\"),\n  },\n  name: {\n    color: llslate,\n  },\n  build: {\n    color: slate,\n  },\n  about: {\n    fontFamily: fontSans,\n    fontSize: (props) => (props.thinScreen ? \"1.1em\" : \"1.2em\"),\n    marginTop: (props) => (props.thinScreen ? \"16px\" : 0),\n    color: slate,\n    maxWidth: (props) => (props.smallScreen ? \"90%\" : \"50%\"),\n  },\n  buttonGroup: {\n    marginTop: (props) => (props.smallScreen ? \"32px\" : \"64px\"),\n  },\n  outline: {\n    borderColor: orange,\n  },\n  button: {\n    float: \"none\",\n    fontSize: (props) => (props.thinScreen ? \"0.8em\" : \"1em\"),\n    marginRight: \"2em\",\n    padding: (props) =>\n      props.thinScreen ? \"6px 10px 6px 10px\" : \"12px 20px 12px 20px\",\n  },\n}));\n\nexport default function Hero(props) {\n  const classes = useStyles({ smallScreen, thinScreen });\n\n  useEffect(() => {\n    document.title = \"Home | Jeremy Kanovsky\";\n  });\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.hello}>Hi, my name is</div>\n      <div className={classes.intro}>\n        <div className={classes.name}>Jeremy Kanovsky</div>\n        <div className={classes.build}>I write code for hardware.</div>\n      </div>\n\n      <div className={classes.about}>\n        I'm a Boston-based software engineer who specializes in writing code for\n        IoT devices and robots. Sometimes, I dabble in hardware. Currently, I'm\n        an engineer at Markforged working on the software powering\n        next-generation 3D printers.\n      </div>\n\n      <div className={classes.buttonGroup}>\n        <HashLink to=\"/#contact\" style={{ textDecoration: \"none\" }}>\n          <StyledButton\n            className={classes.button}\n            classes={{ outlined: classes.outline }}\n            variant=\"outlined\"\n          >\n            Get In Touch\n          </StyledButton>\n        </HashLink>\n\n        <HashLink to=\"/#projects\" style={{ textDecoration: \"none\" }}>\n          <StyledButton\n            className={classes.button}\n            classes={{ outlined: classes.outline }}\n            variant=\"outlined\"\n          >\n            See My Work\n          </StyledButton>\n        </HashLink>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { fontSans, slate } from \"./PageStyles\";\nimport { SectionHeader, StyledLink } from \"./Common\";\n\nconst smallScreen = window.screen.height < 850;\nconst thinScreen = window.screen.width < 950;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"auto\",\n    marginTop: \"50vh\",\n    width: (props) => (props.thinScreen ? \"95%\" : \"60%\"),\n  },\n  grid: {\n    marginTop: \"5vh\",\n  },\n  gridItem: {\n    minWidth: (props) => (props.thinScreen ? \"100%\" : \"auto\"),\n  },\n  about: {\n    fontFamily: fontSans,\n    fontSize: \"1.2em\",\n    color: slate,\n    position: \"relative\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n    lineHeight: (props) => (props.thinScreen ? \"1.2\" : \"1.6\"),\n  },\n  imgWrapper: {\n    // TODO: make this image prettier\n    display: \"block\",\n    position: \"relative\",\n    width: (props) => (props.thinScreen ? \"100%\" : \"auto\"),\n    // width: '100%',\n    // borderRadius: '5px',\n    // backgroundColor: orange,\n    // \"&:hover\": {\n    //   top: '15px',\n    //   left: '15px',\n    // },\n    // \"&::after\": {\n    //   content: '\"\"',\n    //   display: 'block',\n    //   position: 'absolute',\n    //   width: '100%',\n    //   height: '100%',\n    //   borderRadius: '5px',\n    //   transition: '0.3s',\n    // }\n  },\n  avatar: {\n    width: \"100%\",\n    height: \"auto\",\n    borderRadius: \"5px\",\n\n    // display: 'inline-block',\n    // position: 'relative',\n    // \"&::after\": {\n    //   content: '\"\"',\n    //   position: 'absolute',\n    //   top: '-5%',\n    //   left: '-15%',\n    //   width: '100%',\n    //   height: '100%',\n    //   border: '4px solid red',\n    // }\n    // boxShadow: '2px 2px 2px 1px red',\n  },\n}));\n\nexport default function About(props) {\n  const classes = useStyles({ smallScreen, thinScreen });\n\n  return (\n    <div className={classes.root} id=\"about\">\n      <SectionHeader number=\"1\" text=\"About Me\" />\n      <Grid container spacing={3} className={classes.grid}>\n        <Grid item xs={8} className={classes.gridItem}>\n          <div className={classes.about}>\n            Hello! My name is Jeremy and I write code that lives and runs on\n            hardware. Specifically, I enjoy writing code for robots, 3D\n            printers, and embedded systems. I currently work at{\" \"}\n            <StyledLink href=\"https://markforged.com/\" text=\"Markforged\" />\n            &nbsp; writing software that powers next generation 3D printers.\n            Previously I've worked at the{\" \"}\n            <StyledLink\n              href=\"https://www.microsoft.com/en-us/garage/\"\n              text=\"Microsoft Garage\"\n            />\n            &nbsp; and the{\" \"}\n            <StyledLink href=\"https://nolop.org/\" text=\"Nolop Makerspace\" />\n            &nbsp;.\n            <br />\n            <br />\n            Some of the things I've worked with recently are TypeScript,\n            React.js, Python, and high-performance web applications. In my free\n            time I build open-source libraries, robots, and design circuit\n            boards.\n          </div>\n        </Grid>\n\n        <Grid item xs={4} className={classes.gridItem}>\n          <div className={classes.imgWrapper}>\n            <img src=\"static/avatar.jpeg\" alt=\"Avatar\" className={classes.avatar} />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { orange, fontMono, fontSans, lslate } from \"../PageStyles\";\nimport { Link } from \"react-router-dom\";\nimport Toolbar from \"../Toolbar\";\nimport { StyledButton } from '../Common';\n\nconst offsetLeft = 5;\nconst offsetTop = 3;\nconst smallScreen = window.screen.width < 650;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontWeight: \"600\",\n    fontSize: \"4em\",\n    position: \"relative\",\n    left: `${offsetLeft}vw`,\n    width: `${100 - 2 * offsetLeft}vw`,\n    height: `${100 - 2 * offsetTop}vh`,\n    top: `${offsetTop}vh`,\n  },\n  title: {\n    color: orange,\n    paddingBottom: \"3vh\",\n    fontFamily: fontMono,\n  },\n  children: {\n    color: lslate,\n    fontFamily: fontSans,\n    maxWidth: \"100%\",\n    fontSize: (props) => (props.smallScreen ? \"0.35em\" : \"0.5em\"),\n    display: \"block\",\n  },\n  outline: {\n    borderColor: orange,\n  },\n  link: {\n    color: orange,\n  },\n  button: {\n    float: \"none\",\n    marginBottom: \"2em\",\n    fontWeight: \"600\",\n    fontSize: (props) => (props.smallScreen ? \"0.3em\" : \"0.5em\"),\n    marginRight: \"2em\",\n  },\n  linkButton: {\n    float: \"none\",\n    marginLeft: (props) => (props.smallScreen ? `1vw` : \"3vw\"),\n    fontWeight: \"600\",\n    fontSize: (props) => (props.smallScreen ? \"0.2em\" : \"0.4em\"),\n    marginRight: \"1em\",\n  },\n}));\n\nexport default function ProjectTemplate(props) {\n  const classes = useStyles({ smallScreen });\n\n  useEffect(() => {\n    document.title = `${props.title} | Jeremy Kanovsky`;\n    window.scrollTo(0, 0);\n  });\n\n  return (\n    <div>\n      <Toolbar />\n\n      <div className={classes.root}>\n        <div className={classes.title}>\n          {props.title}\n          {props.data && props.data.github && (\n            <StyledButton\n              className={classes.linkButton}\n              classes={{ outlined: classes.outline }}\n              variant=\"outlined\"\n              href={props.data.github}\n              target=\"_blank\"\n            >\n              > View on GitHub\n            </StyledButton>\n          )}\n          {props.data && props.data.pypi && (\n            <StyledButton\n              className={classes.linkButton}\n              classes={{ outlined: classes.outline }}\n              variant=\"outlined\"\n              href={props.data.pypi}\n              target=\"_blank\"\n            >\n              > View on PyPi\n            </StyledButton>\n          )}\n          {props.data && props.data.npm && (\n            <StyledButton\n              className={classes.linkButton}\n              classes={{ outlined: classes.outline }}\n              variant=\"outlined\"\n              color=\"primary\"\n              href={props.data.NPM}\n              target=\"_blank\"\n            >\n              > View on NPM\n            </StyledButton>\n          )}\n        </div>\n        <div className={classes.children}>{props.children}</div>\n\n        <br />\n\n        <Link to=\"/projects\" style={{ textDecoration: \"none\" }}>\n          <StyledButton\n            className={classes.button}\n            classes={{ outlined: classes.outline }}\n            variant=\"outlined\"\n          >\n            &lt; Projects\n          </StyledButton>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","const imagePath = \"/static/projects\";\n\nexport { imagePath };\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst smallScreen = window.screen.width < 650;\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: \"100%\",\n    marginTop: (props) => (props.space ? \"3vh\" : 0),\n  },\n  image: {\n    width: \"100%\",\n  },\n}));\n\nexport default function Images(props) {\n  const images = props.images;\n  const classes = useStyles(props);\n  const imageSpace = 12 / images.length;\n  const gridSize = smallScreen ? 12 : imageSpace;\n\n  return (\n    <div>\n      <Grid container spacing={1} className={classes.grid}>\n        {images.map((image) => {\n          return (\n            <Grid item xs={gridSize} key={image}>\n              <img className={classes.image} src={image} alt=\"\" />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Hexapod Robot\";\nconst path = \"hexapod\";\nconst coverImage = \"hexapod_isometric.JPG\";\nconst description =\n  \"This was the final project for Tufts ME-134 (Advanced Robotics) in Fall 2020. We were tasked with creating a robot that could navigate an obstacle course (containing a tunnel, wall, and rough terrain) autonomously.\";\nconst tags = {\n  software: true,\n  hardware: true,\n};\nconst technology = [\"Raspberry Pi\", \"Python\", \"Solidworks\"];\nconst data = {\n  github: \"https://github.com/0xJeremy/me134/tree/master/final\",\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images\n        images={[\n          `${imagePath}/hexapod/hexapod_isometric.JPG`,\n          `${imagePath}/hexapod/hexapod_2.jpg`,\n          `${imagePath}/hexapod/hexapod_3.jpg`,\n        ]}\n      />\n      This robot was made for the final project of Tufts ME-134 (Advanced\n      Robotics) in the Fall of 2020. The prompt was to create a robot capable of\n      navigating an obstacle course (comprised of a tunnel to go through, a wall\n      to climb over, and a patch of rough terrain) autonomously. This hexapod\n      uses a Raspberry Pi 4 (and camera) to perform the onboard processing and\n      18 high-torque servo motors for actuation. It did pretty well on the wall.\n      <Images\n        space\n        images={[\n          `${imagePath}/hexapod/hexapod_1.jpg`,\n          `${imagePath}/hexapod/hexapod_4.jpg`,\n          `${imagePath}/hexapod/hexapod_5.jpg`,\n        ]}\n      />\n      <Images\n        images={[\n          `${imagePath}/hexapod/hexapod_6.jpg`,\n          `${imagePath}/hexapod/hexapod_7.jpg`,\n          `${imagePath}/hexapod/hexapod_8.jpg`,\n        ]}\n      />\n    </ProjectTemplate>\n  );\n}\n\nexport {\n  Component,\n  title,\n  path,\n  coverImage,\n  description,\n  technology,\n  tags,\n  data,\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\nimport { colorBlue } from \"../PageStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    color: colorBlue,\n  },\n}));\n\nconst title = \"Meteorite Visualizer\";\nconst path = \"meteorites\";\nconst coverImage = \"meteorites.png\";\nconst description =\n  \"This is a meteorite impact visualizer made for COMP-177 (Data Visualization) at Tufts in Spring 2020.\";\nconst tags = {\n  software: true,\n};\nconst technology = [\"React.js\", \"Visualization\", \"Heroku\"];\nconst data = {\n  github: \"https://github.com/0xJeremy/Meteorite-Visualizer/\",\n};\n\nexport default function Component() {\n  const classes = useStyles();\n\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images images={[`${imagePath}/meteorites/meteorites.png`]} />\n      This website was made as the final project in Tufts COMP-177 Data\n      Visualization in the Spring of 2020. The prompt was to create a website to\n      display a dataset in a number of different ways, and to allow the user to\n      explore the dataset. We used a dataset provided by NASA which lists all\n      the known meteorite impacts on Earth dating back to the 1800s. We built\n      the site with React.js and D3.js. It can be viewed live at{\" \"}\n      <a\n        href=\"http://www.lab84.org/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={classes.link}\n      >\n        lab84.org\n      </a>\n      .\n    </ProjectTemplate>\n  );\n}\n\nexport {\n  Component,\n  title,\n  path,\n  coverImage,\n  description,\n  technology,\n  tags,\n  data,\n};\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Daedalus BLDC Motor Controller\";\nconst path = \"daedalus\";\nconst coverImage = \"Daedalus_Brackets_Board.png\";\nconst description =\n  \"This is a custom PCB designed to drive high-speed, high-power brushless motors. It includes current monitoring and positional feedback, turning the brushless motor into a high-torque servo motor.\";\nconst tags = {\n  pcb: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/Daedalus\",\n};\nconst technology = [\"KiCAD\"];\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title}>\n      <Images\n        images={[\n          `${imagePath}/daedalus/Daedalus_Brackets_Board.png`,\n          `${imagePath}/daedalus/Front.jpg`,\n        ]}\n      />\n      This PCB is the Daedalus High-Power BLDC Motor Controller. Using the\n      on-board magnetic encoder it can turn a regular brushless DC motor into a\n      high-power, ultra high-precision servo motor. It uses CAN bus\n      communication, and cable be daisy chained together with other Daedalus\n      controllers. This is one of the first PCBs I have designed, and I expect\n      to iterate on it in the future.\n      <Images space images={[`${imagePath}/daedalus/Board_Layout.png`]} />\n    </ProjectTemplate>\n  );\n}\n\nexport {\n  Component,\n  title,\n  path,\n  coverImage,\n  technology,\n  data,\n  description,\n  tags,\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport {\n  fontMono,\n  fontSans,\n  orange,\n  slate,\n  lslate,\n  llslate,\n  lnavy,\n} from \"./PageStyles\";\nimport { SectionHeader } from \"./Common\";\nimport * as Hexapod from \"./projects/Hexapod\";\nimport * as Meteorites from \"./projects/Meteorites\";\nimport * as Daedalus from \"./projects/Daedalus\";\n\nconst thinScreen = window.screen.width < 950;\n\nconst showcaseInformationStyles = makeStyles((theme) => ({\n  root: {\n    direction: (props) => (props.float === \"left\" ? \"lrt\" : \"rtl\"),\n    zIndex: 1000,\n    color: llslate,\n    \"&:hover\": {\n      color: orange,\n      cursor: \"pointer\",\n    },\n  },\n  featured: {\n    textAlign: (props) => props.float,\n    fontFamily: fontMono,\n    fontSize: \"0.8em\",\n    color: orange,\n  },\n  projectTitle: {\n    textAlign: (props) => props.float,\n    color: \"inherit\",\n    fontWeight: 600,\n    letterSpacing: \"1px\",\n    fontFamily: fontSans,\n    fontSize: \"2em\",\n    paddingTop: \"8px\",\n  },\n  description: {\n    textAlign: (props) => props.float,\n    marginRight: (props) => (props.float === \"left\" ? \"auto\" : 0),\n    marginLeft: (props) => (props.float === \"left\" ? 0 : \"auto\"),\n    width: (props) => (props.thinScreen ? \"80%\" : \"120%\"),\n    background: lnavy,\n    fontFamily: fontSans,\n    color: lslate,\n    borderRadius: \"5px\",\n    padding: \"32px\",\n    fontSize: \"1.2em\",\n    margin: (props) => (props.thinScreen ? \"12px 0 12px 0\" : \"12px 0 24px 0\"),\n    transition: \"0.3s\",\n    top: 0,\n    position: \"relative\",\n    \"&:hover\": {\n      top: \"-8px\",\n    },\n  },\n  technology: {\n    color: slate,\n    fontFamily: fontMono,\n    fontSize: \"0.8em\",\n    float: (props) => props.float,\n    paddingRight: \"16px\",\n  },\n  a: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n  },\n  icons: {\n    color: slate,\n    paddingTop: \"24px\",\n    fontSize: \"1em\",\n    float: (props) => props.float,\n    paddingRight: \"16px\",\n    \"&:hover\": {\n      color: orange,\n    },\n  },\n}));\n\nfunction ShowcaseInformation(props) {\n  const classes = showcaseInformationStyles({ ...props.params, thinScreen });\n  const project = props.project;\n\n  return (\n    <a\n      href={project.data.github}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className={classes.a}\n    >\n      <div className={classes.root}>\n        <div className={classes.featured}>Featured Project</div>\n        <div className={classes.projectTitle}>{project.title}</div>\n        <div className={classes.description}>{project.description}</div>\n        {project.technology.map((key) => (\n          <div className={classes.technology} key={key}>{key}</div>\n        ))}\n        {!thinScreen && <br />}\n        {project.data && project.data.github && !thinScreen && (\n          <div className={classes.icons}>\n{/*            <a\n              href={project.data.github}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className={classes.a}\n            >\n*/}              <GitHubIcon />\n            {/*</a>*/}\n          </div>\n        )}\n      </div>\n    </a>\n  );\n}\n\nconst showcaseStyles = makeStyles((theme) => ({\n  projectContainer: {\n    position: \"relative\",\n    width: (props) => (props.thinScreen ? \"90vw\" : \"auto\"),\n  },\n  image: {\n    width: \"100%\",\n    height: \"auto\",\n    float: (props) => props.imgFloat,\n    position: \"relative\",\n    zIndex: -5,\n    borderRadius: \"5px\",\n  },\n  gridItem: {\n    minWidth: (props) => (props.thinScreen ? \"100%\" : \"auto\"),\n  },\n}));\n\nfunction ShowcaseProject(props) {\n  let params;\n  if (props.right) {\n    params = { float: \"right\", imgFloat: \"left\" };\n  } else {\n    params = { float: \"left\", imgFloat: \"right\" };\n  }\n  const classes = showcaseStyles({ ...params, thinScreen });\n  const project = props.project;\n\n  const text = <ShowcaseInformation project={project} params={params} />;\n  const image = (\n    <img\n      className={classes.image}\n      src={`static/projects/${project.path}/${project.coverImage}`}\n      // TODO: add alt-text\n      alt=\"\"\n    />\n  );\n\n  let left, right;\n  if (props.right) {\n    left = image;\n    right = text;\n  } else {\n    left = text;\n    right = image;\n  }\n\n  return (\n    <div className={classes.projectContainer}>\n      <Grid\n        container\n        spacing={2}\n        className={classes.grid}\n        alignItems=\"center\"\n        justify=\"center\"\n      >\n        <Grid item xs={props.right ? 7 : 5} className={classes.gridItem}>\n          {left}\n        </Grid>\n\n        <Grid item xs={props.right ? 5 : 7} className={classes.gridItem}>\n          {right}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"auto\",\n    marginTop: \"30vh\",\n    width: (props) => (props.thinScreen ? \"100%\" : \"75%\"),\n  },\n  firstProject: {\n    // TODO: De-duplicate this with project\n    marginTop: \"5vh\",\n    marginBottom: \"10vh\",\n  },\n  project: {\n    marginTop: \"10vh\",\n    marginBottom: \"10vh\",\n  },\n}));\n\nexport default function Showcase(props) {\n  const classes = useStyles({ thinScreen });\n\n  return (\n    <div className={classes.root} id=\"projects\">\n      <SectionHeader number=\"2\" text=\"Some Things I've Built\" />\n      <div className={classes.firstProject}>\n        <ShowcaseProject project={Hexapod} />\n      </div>\n      <div className={classes.project}>\n        {!thinScreen && <ShowcaseProject project={Meteorites} right />}\n        {thinScreen && <ShowcaseProject project={Meteorites} />}\n      </div>\n      <div className={classes.project}>\n        <ShowcaseProject project={Daedalus} />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"socket.engine\";\nconst coverImage = \"socketengine.png\";\nconst description =\n  \"socket.engine is the open-source successor to FireEye. It enabled real-time communication between devices that is optimized to be light-weight and very fast.\";\nconst tags = {\n  software: true,\n  oss: true,\n};\nconst technology = [\"Python\", \"Node.js\", \"Unix Sockets\", \"ZMQ\"];\nconst data = {\n  github: \"https://github.com/0xJeremy/socket.engine\",\n  pypi: \"https://pypi.org/project/socket.engine/\",\n  npm: \"https://www.npmjs.com/package/socket.engine\",\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images images={[`${imagePath}/socketengine/socketengine.png`]} />\n      socket.engine is the successor to FireEye. It is a real-time\n      bi-directional UNIX socket communication library built on top of ZMQ\n      sockets. It operates at extremely high speeds and is even capable of\n      streaming full video across the sockets. It was originally designed for\n      use in robots, but provides an interface to stream arbitrary data across\n      arbitrary devices. It was written in Python and Javascript (via Node.js).\n      It also holds the distinction of being my most successful project on\n      GitHub. The source is published on GitHub, and it is available for\n      download on PIP via PyPi, and on NPM.\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, technology, tags, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Helios Pi-Hat Robot Controller\";\nconst coverImage = \"Helios_Board.png\";\nconst description =\n  \"This is a custom PCB Raspberry Pi hat designed to enable CAN bus communication and high-precision servo control. It can also supply power to the Pi.\";\nconst tags = {\n  pcb: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/Helios\",\n};\nconst technology = [\"KiCAD\"];\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title}>\n      <Images\n        images={[\n          `${imagePath}/helios/Helios_Board.png`,\n          `${imagePath}/helios/Board_Layout.png`,\n        ]}\n      />\n      This PCB is the Helios Pi-Hat Robot Controller. It is a companion board to\n      the Daedalus Motor controller. It provides 4x high-speed CAN bus lines\n      (through the 2x on-board STM32 microprocessors), along with a host of\n      other features such as absolute orientation sensing (by providing sockets\n      for a Bosch BNO-055 sensor), breakouts for 12 servo motors (6x\n      high-precision, 6x standard), and by providing up to 3.5 amps to power the\n      Raspberry Pi host. This is one of the first PCBs I've designed, and I\n      expect to iterate on it in the future.\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, technology, tags, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Icarus Power Distribution Board\";\nconst coverImage = \"Icarus_Board.png\";\nconst description =\n  \"This is a custom PCB power distribution board designed for use with the Daedalus BLDC motor controller for driving high-current motors and the Helios Raspberry Pi hat. It has 6 power breakouts.\";\nconst tags = {\n  pcb: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/Icarus\",\n};\nconst technology = [\"KiCAD\"];\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title}>\n      <Images\n        images={[\n          `${imagePath}/icarus/Icarus_Board.png`,\n          `${imagePath}/icarus/icarus_2.JPG`,\n        ]}\n      />\n      This PCB was made as a companion board to the Daedalus motor controller,\n      and provides 6x high-current power breakouts from a single source. Along\n      with providing power, it has a host of other features like power shutoff,\n      current draw monitoring, and temperature sensing. It communicates with the\n      CAN bus protocol and can be daisy-chained with a number of other devices\n      (including the Helios Pi-Hat and the Daedalus Motor Controller). This is\n      one of the first PCBs I've made and I expect to iterate on it in the\n      future.\n      <Images\n        space\n        images={[\n          `${imagePath}/icarus/icarus_1.JPG`,\n          `${imagePath}/icarus/icarus_3.JPG`,\n        ]}\n      />\n      <Images images={[`${imagePath}/icarus/Board_Layout.png`]} />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, technology, tags, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Surge PL\";\nconst coverImage = \"surge.png\";\nconst description =\n  \"Surge is a small, Ruby-esque programming language I've build from scratch in Python.\";\nconst tags = {\n  software: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/surge\",\n};\nconst technology = [\"Python\", \"Lex-Yacc\"];\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images images={[`${imagePath}/surge/surge.png`]} />\n      Surge is a small programming language I built from scratch. It is an\n      interpreted language, written on top of Python with Ruby like syntax. To\n      my knowledge it is turing complete. As part of this project I build a\n      testing framework inside of Surge to test the capabilities of the language\n      and ensure the parser, lexer, and interpreter were working as expected.\n      It's not a large project, but perhaps one of my more interesting. The\n      source code, test cases, and operational semantics can be viewed on the\n      GitHub project page.\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags, technology, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Raspberry Pi Pico Oscilloscope\";\nconst coverImage = \"pico_oscilloscope.png\";\nconst description =\n  \"This is an open-source project to turn the $4 Raspberry Pi Pico into a (reasonable) powerful 4-channel oscilloscope using the onboard analog to digital converters.\";\nconst tags = {\n  software: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/Pico-Oscilloscope\",\n};\nconst technology = [\"C\", \"Node.js\", \"React.js\", \"Plotly.js\"];\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images images={[`${imagePath}/pico_oscilloscope/repo_logo.png`]} />\n      As the final project for Tufts ME-193 MPP (Microcontroller Programming\n      Projects) in the Spring of 2021, I turned the $4 Raspberry Pi Pico into a\n      (reasonably) powerful 4-channel oscilloscope using the onboard analog to\n      digital converters. The Pico streams the ADC readings over a USB to a host\n      device (either a Raspberry Pi or any computer), which displays the data in\n      a webpage. The idea being this project mimics the functionality of\n      OctoPrint (the cloud 3D printer manager software) but for an Oscilloscope.\n      This would make its use ideal in makerspaces or shared electronics labs.\n      The webpage was written in React.js using Plot.js. The code on the Pico\n      uses both cores and was written to run as quickly as possible in C.\n      <Images\n        space\n        images={[`${imagePath}/pico_oscilloscope/pico_oscilloscope.png`]}\n      />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags, technology, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Ballbot\";\nconst coverImage = \"ballbot_isometric.JPG\";\nconst description =\n  \"This robot was build as a homework assignment for Tufts ME-134 (Advanced Robotics) in Fall 2020. The assignment was to create a balancing robot, so we created a robot that balances on a basketball.\";\nconst tags = {\n  software: true,\n  hardware: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/me134/tree/master/hw4/v2\",\n};\nconst technology = [\"Python\", \"Solidworks\", \"Raspberry Pi\"];\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images\n        images={[\n          `${imagePath}/ballbot/ballbot_isometric.JPG`,\n          `${imagePath}/ballbot/ballbot_2.jpg`,\n          `${imagePath}/ballbot/ballbot_3.jpg`,\n        ]}\n      />\n      This robot was made as a homework project for Tufts ME-134 (Advanced\n      Robotics) in the Fall of 2020. The prompt was to create a \"balancing\n      robot\" (with the requirement it must be able to freely rotate at least 180\n      degrees around any one axis). Theorizing that three axes was more\n      impressive than one axis, we built a balancing \"ballbot\" -- a robot that\n      balances on top of a basketball. It uses a sensor fusion algorithm to\n      combine the input of 3 gyroscopic and acceleration sensors (2x MPU-6050s,\n      and 1 Bosch BNO-055 sensor).\n      <Images\n        space\n        images={[\n          `${imagePath}/ballbot/ballbot_1.JPG`,\n          `${imagePath}/ballbot/ballbot_4.jpg`,\n          `${imagePath}/ballbot/ballbot_5.jpg`,\n        ]}\n      />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags, technology, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Drawing Robot\";\nconst coverImage = \"drawing_isometric.JPG\";\nconst description =\n  \"This robot was build as a homework assignment for Tufts ME-134 (Advanced Robotics) in Fall 2020. The assignment was to create a robotic arm capable of writing our initials.\";\nconst tags = {\n  software: true,\n  hardware: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/me134/tree/master/hw3/v2\",\n};\nconst technology = [\"Python\", \"Solidworks\", \"Raspberry Pi\"];\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images\n        images={[\n          `${imagePath}/drawing_robot/drawing_isometric.JPG`,\n          `${imagePath}/drawing_robot/drawing_robot_1.jpg`,\n          `${imagePath}/drawing_robot/drawing_robot_2.jpg`,\n        ]}\n      />\n      This robot was made as a homework project for Tufts ME-134 (Advanced\n      Robotics) in the Fall of 2020. The prompt was to create a robotic arm\n      capable of writing our initials. This robot arm (which is the second\n      iteration, the first being a standard 3-DOF vertical arm) is capable of\n      writing arbitrary shapes and letters. Instead of hard-coding the positions\n      of the arms for each point of our initials, I wrote an SVG parser and\n      pather in Python that dissects any arbitrary SVG file and generates\n      \"g-code\" (really just tuples of position for motors 1 and 2) which the arm\n      them reads through and executes. It was pretty successful.\n      <Images\n        space\n        images={[\n          `${imagePath}/drawing_robot/drawing_robot_3.jpg`,\n          `${imagePath}/drawing_robot/drawing_robot_4.jpg`,\n          `${imagePath}/drawing_robot/drawing_robot_5.jpg`,\n        ]}\n      />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags, technology, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = '\"Banned From Vegas\"';\nconst coverImage = \"vegas.jpeg\";\nconst description =\n  \"This is an automatic card-dealing and sorting robot made at MakeHarvard 2020. It uses computer vision to detect and sort the cards (and a little bit of card-counting to make sure you always win).\";\nconst tags = {\n  hardware: true,\n  software: true,\n  hackathon: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/MakeHarvard2020\",\n};\nconst technology = [\"Python\", \"Computer Vision\", \"Raspberry Pi\"];\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images\n        images={[\n          `${imagePath}/vegas/vegas.jpg`,\n          `${imagePath}/vegas/vegas2.jpeg`,\n        ]}\n      />\n      \"Banned From Vegas\" is an automatic card-dealing and sorting robot made at\n      MakeHarvard 2020. It uses computer vision to detect and sort a deck of\n      cards (and with a little bit of card-counting thrown in can make the\n      operator always win at cards). It was built over the course of 24 hours\n      and was powered by a Raspberry Pi and a large number of servos and motors.\n      The end result worked shockingly well.\n      <Images\n        space\n        images={[\n          `${imagePath}/vegas/vegas3.jpeg`,\n          `${imagePath}/vegas/vegas4.jpeg`,\n        ]}\n      />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags, technology, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Fleet\";\nconst coverImage = \"fleet.png\";\nconst description =\n  \"This project is an open-source hardware platform for developing robotics software. It is intended to be a low-cost, modular swarm robotic system to test swarm algorithms.\";\nconst tags = {\n  software: true,\n  hardware: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/fleet\",\n};\nconst technology = [\"Python\", \"Computer Vision\", \"Solidworks\"];\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images\n        images={[\n          `${imagePath}/fleet/fleet.png`,\n          `${imagePath}/fleet/fleet2.png`,\n          `${imagePath}/fleet/fleet3.jpeg`,\n        ]}\n      />\n      \"Fleet\" is a series of small, modular robots I made as an open-source\n      hardware platform for developing swarm robotics software. It is intended\n      to be a low cost solution for labs, researchers, and hobbiests to\n      experiment with cutting edge swarm algorithms. Each robot is equipped with\n      a Raspberry Pi, 2x DC motors with encoders, Raspberry Pi camera, and\n      batteries to last several hours. Newer versions also have front and back\n      facing time of flight distance sensors.\n      <Images\n        space\n        images={[\n          `${imagePath}/fleet/fleet4.jpeg`,\n          `${imagePath}/fleet/fleet5.JPG`,\n        ]}\n      />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, technology, tags, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = '\"Space Jam\": Space Printer';\nconst coverImage = \"spaceprinter.JPG\";\nconst description =\n  \"This is a 3D printer designed to be used in zero-gravity (such as on the ISS). it was made as a senior design project at Tufts in the Fall of 2020 for Professor Doug Matson.\";\nconst tags = {\n  hardware: true,\n  software: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/senior-design\",\n};\nconst technology = [\"Solidworks\", \"Python\", \"Electronics\"];\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images images={[`${imagePath}/space_printer/spaceprinter.JPG`]} />\n      This is a 3D printer designed to be used in *space* (specifically,\n      zero-gravity environments, such as on the International Space Station). It\n      was built for Professor Douglas Matson for his use in research. We also\n      built the firmware from scratch for this printer given the unique control\n      style and setup of the stepper motors.\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags, technology, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Crawling Robot\";\nconst coverImage = \"crawler_isometric.JPG\";\nconst description =\n  'This robot was build as a homework assignment for Tufts ME-134 (Advanced Robotics) in Fall 2020. The assignment was to create a \"crawling robot\", so we created a modular robot that rolls end over end.';\nconst tags = {\n  software: true,\n  hardware: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/me134/tree/master/hw5\",\n};\nconst technology = [\"Python\", \"Solidworks\", \"Raspberry Pi\"];\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images\n        images={[\n          `${imagePath}/crawler/crawler_isometric.JPG`,\n          `${imagePath}/crawler/crawler_1.JPG`,\n          `${imagePath}/crawler/crawler_3.jpg`,\n        ]}\n      />\n      This robot was made as a homework project for Tufts ME-134 (Advanced\n      Robotics) in the Fall of 2020. The prompt was to create a \"crawling robot\"\n      (defined as: a robot which uses it's entire body to locomote). This robot\n      rolls segments of it's body over one another in series to create a\n      crawling / rolling motion. It is modular with each segment containing a\n      piece of the robot (Raspberry Pi Zero, 2x voltage regulators, 2x servo\n      drivers, 3x LiPo batteries).\n      <Images\n        space\n        images={[\n          `${imagePath}/crawler/crawler_4.jpg`,\n          `${imagePath}/crawler/crawler_5.jpg`,\n          `${imagePath}/crawler/crawler_6.jpg`,\n        ]}\n      />\n      <Images\n        images={[\n          `${imagePath}/crawler/crawler_2.jpg`,\n          `${imagePath}/crawler/crawler_7.jpg`,\n        ]}\n      />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags, technology, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"STM32 Development Board\";\nconst coverImage = \"devboard.JPG\";\nconst description =\n  \"This is a development breakout board for the STM32F405 series microcontroller. I made it to learn about PCB design and embedded microcontroller programming.\";\nconst tags = {\n  software: true,\n  pcb: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/mpp/tree/master/stm32\",\n};\nconst technology = [\"KiCAD\"];\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title}>\n      <Images\n        images={[\n          `${imagePath}/devboard/devboard.JPG`,\n          `${imagePath}/devboard/devboard_5.JPG`,\n        ]}\n      />\n      This PCB is a custom-designed breakout for the STM32F405 series\n      microcontroller. I made it to practice PCB design, and learn about\n      programming embedded microcontrollers from scratch. I designed a custom\n      power-chain for supplying power to the MCU and added breakouts around the\n      side for serial breakouts.\n      <Images\n        space\n        images={[\n          `${imagePath}/devboard/devboard_4.JPG`,\n          `${imagePath}/devboard/devboard_3.JPG`,\n        ]}\n      />\n      <Images\n        images={[\n          `${imagePath}/devboard/devboard_1.JPG`,\n          `${imagePath}/devboard/devboard_2.JPG`,\n        ]}\n      />\n      <Images images={[`${imagePath}/devboard/devboard_layout.JPG`]} />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, technology, tags, data };\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport {\n  fontMono,\n  fontSans,\n  orange,\n  llslate,\n  lslate,\n  slate,\n  lnavy,\n} from \"./PageStyles\";\nimport { StyledButton } from \"./Common\";\nimport * as SocketEngine from \"./projects/SocketEngine\";\nimport * as Helios from \"./projects/Helios\";\nimport * as Icarus from \"./projects/Icarus\";\nimport * as Surge from \"./projects/Surge\";\nimport * as PicoOscilloscope from \"./projects/PicoOscilloscope\";\nimport * as Ballbot from \"./projects/Ballbot\";\nimport * as DrawingRobot from \"./projects/DrawingRobot\";\nimport * as Vegas from \"./projects/Vegas\";\nimport * as Fleet from \"./projects/Fleet\";\nimport * as SpacePrinter from \"./projects/SpacePrinter\";\nimport * as Crawler from \"./projects/Crawler\";\nimport * as DevBoard from \"./projects/DevBoard\";\n\nconst thinScreen = window.screen.width < 750;\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    background: lnavy,\n    padding: \"32px 24px 32px 24px\",\n    borderRadius: \"5px\",\n    transition: \"0.3s\",\n    position: \"relative\",\n    color: llslate,\n    top: \"0px\",\n    \"&:hover\": {\n      top: \"-8px\",\n      cursor: \"pointer\",\n      color: orange,\n    },\n  },\n  mainContent: {\n    height: \"164px\",\n  },\n  title: {\n    fontFamily: fontSans,\n    fontSize: \"1.5em\",\n    fontWeight: \"600\",\n    letterSpacing: \"1px\",\n    marginTop: \"64px\",\n  },\n  description: {\n    color: lslate,\n    fontFamily: fontSans,\n    fontSize: \"1em\",\n    marginTop: \"16px\",\n  },\n  technology: {\n    color: slate,\n    fontSize: \"0.8em\",\n    fontFamily: fontMono,\n    marginTop: \"32px\",\n  },\n  icons: {\n    marginBottom: \"32px\",\n  },\n  folder: {\n    float: \"left\",\n    color: orange,\n  },\n  github: {\n    float: \"right\",\n  },\n  a: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n  },\n}));\n\nfunction ProjectCard(props) {\n  const classes = useStyles({ thinScreen });\n  const project = props.project;\n\n  return (\n    <a\n      href={project.data.github}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className={classes.a}\n    >\n      <div className={classes.card}>\n        <div className={classes.icons}>\n          <div className={classes.folder}>\n            <FolderIcon fontSize=\"large\" />\n          </div>\n          <div className={classes.github}>\n            <GitHubIcon fontSize=\"large\" />\n          </div>\n        </div>\n        <div className={classes.mainContent}>\n          <div className={classes.title}>{project.title}</div>\n          <div className={classes.description}>{project.description}</div>\n        </div>\n        <div className={classes.technology}>\n          {project.technology.join(\"  \")}\n        </div>\n      </div>\n    </a>\n  );\n}\n\nconst showcaseStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"auto\",\n    marginTop: \"25vh\",\n    width: (props) => (props.thinScreen ? \"95%\" : \"75%\"),\n  },\n  sectionTitle: {\n    textAlign: \"center\",\n    fontFamily: fontMono,\n    color: llslate,\n    fontSize: (props) => (props.thinScreen ? \"1em\" : \"1.5em\"),\n    fontWeight: \"600\",\n    letterSpacing: \"1px\",\n  },\n  subtitle: {\n    textAlign: \"center\",\n    fontFamily: fontMono,\n    color: orange,\n    fontSize: (props) => (props.thinScreen ? \"0.8em\" : \"1em\"),\n    marginTop: \"2vh\",\n  },\n  grid: {\n    marginTop: \"4vh\",\n  },\n  gridItem: {\n    minWidth: (props) => (props.thinScreen ? \"90vw\" : \"auto\"),\n  },\n  centerButton: {\n    textAlign: \"center\",\n    marginTop: \"8vh\",\n  },\n  outline: {\n    borderColor: orange,\n  },\n  button: {\n    fontSize: \"1em\",\n    padding: \"12px 20px 12px 20px\",\n  },\n}));\n\nexport default function Showcase(props) {\n  const classes = showcaseStyles({ thinScreen });\n  const projects = [\n    SocketEngine,\n    Helios,\n    Icarus,\n    PicoOscilloscope,\n    Surge,\n    Ballbot,\n  ];\n  const fullProjects = [\n    ...projects,\n    DrawingRobot,\n    Vegas,\n    Fleet,\n    SpacePrinter,\n    Crawler,\n    DevBoard,\n  ];\n  const [toShow, setToShow] = useState(projects);\n  const [more, setMore] = useState(false);\n\n  function toggleShown() {\n    if (more) {\n      setToShow(projects);\n      setMore(false);\n    } else {\n      setToShow(fullProjects);\n      setMore(true);\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.sectionTitle}>Other Noteworthy Projects</div>\n      <Link to=\"/projects\" style={{ textDecoration: \"none\" }}>\n        <div className={classes.subtitle}>view all projects</div>\n      </Link>\n\n      <Grid container spacing={2} className={classes.grid}>\n        {toShow.map((project) => {\n          return (\n            <Grid item xs={4} className={classes.gridItem}>\n              <ProjectCard project={project} />\n            </Grid>\n          );\n        })}\n      </Grid>\n\n      <div className={classes.centerButton}>\n        <StyledButton\n          className={classes.button}\n          classes={{ outlined: classes.outline }}\n          variant=\"outlined\"\n          onClick={toggleShown}\n        >\n          {more ? \"Show Less\" : \"Show More\"}\n        </StyledButton>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fontMono, fontSans, orange, llslate, slate } from \"./PageStyles\";\nimport { StyledButton } from \"./Common\";\n\nconst thinScreen = window.screen.width < 750;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"auto\",\n    marginTop: \"25vh\",\n  },\n  sectionTitle: {\n    textAlign: \"center\",\n    fontFamily: fontMono,\n    color: orange,\n    fontSize: \"0.8em\",\n  },\n  subtitle: {\n    textAlign: \"center\",\n    fontFamily: fontSans,\n    color: llslate,\n    fontSize: \"3em\",\n    fontWeight: 600,\n    marginTop: \"2vh\",\n    letterSpacing: \"1px\",\n  },\n  info: {\n    color: slate,\n    fontSize: (props) => (props.thinScreen ? \"1.1em\" : \"1.5em\"),\n    width: (props) => (props.thinScreen ? \"100%\" : \"60%\"),\n    margin: \"auto\",\n    textAlign: \"center\",\n    fontFamily: fontSans,\n    marginTop: \"2vh\",\n  },\n  centerButton: {\n    textAlign: \"center\",\n    marginTop: (props) => (props.thinScreen ? \"8vh\" : \"4vh\"),\n  },\n  outline: {\n    borderColor: orange,\n  },\n  button: {\n    fontSize: \"1em\",\n    padding: \"12px 20px 12px 20px\",\n  },\n  footer: {\n    textAlign: \"center\",\n    marginTop: \"25vh\",\n    marginBottom: \"3vh\",\n    fontFamily: fontMono,\n    color: slate,\n    fontSize: \"0.8em\",\n    transition: \"0.3s\",\n    \"&:hover\": {\n      color: orange,\n      cursor: \"pointer\",\n    },\n  },\n  a: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function Contact(props) {\n  const classes = useStyles({ thinScreen });\n\n  return (\n    <div className={classes.root} id=\"contact\">\n      <div className={classes.sectionTitle}>03. What's next?</div>\n      <div className={classes.subtitle}>Get In Touch</div>\n      <div className={classes.info}>\n        I'm not currently looking for new job opportunities, but my inbox is\n        always open. Feel free to reach out and say hello! I'm always looking\n        for new projects, and would love to collaborate on something cool.\n      </div>\n\n      <div className={classes.centerButton}>\n        <a\n          href=\"mailto:kanovsky.jeremy@gmail.com\"\n          rel=\"noopener noreferrer\"\n          className={classes.a}\n        >\n          <StyledButton\n            className={classes.button}\n            classes={{ outlined: classes.outline }}\n            variant=\"outlined\"\n          >\n            Say Hello\n          </StyledButton>\n        </a>\n      </div>\n\n      <div className={classes.footer}>\n        <a\n          href=\"https://github.com/0xJeremy/0xJeremy.github.io\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={classes.a}\n        >\n          This site is made by Jeremy Kanovsky with React.js and some small\n          headache.\n        </a>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport { fontMono, orange, slate } from \"./PageStyles\";\n\nconst smallScreen = window.screen.height < 850;\nconst thinScreen = window.screen.width < 950;\nconst sideSpace = thinScreen ? \"20px\" : \"40px\";\n\nconst useSideStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    bottom: \"0\",\n    left: (props) => (props.side === \"left\" ? sideSpace : \"auto\"),\n    right: (props) => (props.side === \"right\" ? sideSpace : \"auto\"),\n    color: orange,\n    fontSize: \"2em\",\n    fontFamily: fontMono,\n    width: \"40px\",\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  socialList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    margin: 0,\n    padding: 0,\n    listStyle: \"none\",\n    \"&::after\": {\n      content: '\"\"',\n      display: \"block\",\n      width: \"1px\",\n      height: \"90px\",\n      margin: \"0 auto\",\n      backgroundColor: orange,\n    },\n  },\n  a: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n  },\n  list: {\n    marginBottom: \"16px\",\n  },\n  listItem: {\n    transition: \"0.3s\",\n    padding: \"4px\",\n    \"&:hover\": {\n      transform: \"translateY(-3px)\",\n      color: slate,\n      cursor: \"pointer\",\n    },\n  },\n  emailBar: {\n    \"&::after\": {\n      content: '\"\"',\n      display: \"block\",\n      width: \"1px\",\n      height: \"90px\",\n      margin: \"0 auto\",\n      backgroundColor: orange,\n    },\n  },\n  email: {\n    writingMode: \"vertical-rl\",\n    fontSize: \"0.45em\",\n    marginBottom: \"24px\",\n    // TODO: fix this spacing, it's disgusting\n    paddingLeft: \"12px\",\n    paddingBottom: \"4px\",\n    verticalAlign: \"text-bottom\",\n    transition: \"0.3s\",\n    \"&:hover\": {\n      transform: \"translateY(-3px)\",\n      color: slate,\n      cursor: \"pointer\",\n    },\n  },\n}));\n\nfunction StickySide(props) {\n  const classes = useSideStyles(props);\n\n  return <div className={classes.root}>{props.children}</div>;\n}\n\nexport default function Sticky(props) {\n  const classes = useStyles({ smallScreen });\n  const showSticky = window.screen.width > 750;\n\n  return (\n    <div>\n      {showSticky && (\n        <StickySide side=\"left\">\n          <ul className={classes.socialList}>\n            <div className={classes.list}>\n              <a\n                href=\"https://github.com/0xJeremy/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className={classes.a}\n              >\n                <li className={classes.listItem}>\n                  <GitHubIcon />\n                </li>\n              </a>\n              <a\n                href=\"https://www.linkedin.com/in/jeremy-kanovsky/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className={classes.a}\n              >\n                <li className={classes.listItem}>\n                  <LinkedInIcon />\n                </li>\n              </a>\n              <a\n                href=\"mailto:kanovsky.jeremy@gmail.com/\"\n                rel=\"noopener noreferrer\"\n                className={classes.a}\n              >\n                <li className={classes.listItem}>\n                  <MailOutlineIcon />\n                </li>\n              </a>\n            </div>\n          </ul>\n        </StickySide>\n      )}\n      {showSticky && (\n        <StickySide side=\"right\">\n          <div className={classes.emailBar}>\n            <a\n              href=\"mailto:kanovsky.jeremy@gmail.com\"\n              rel=\"noopener noreferrer\"\n              className={classes.a}\n            >\n              <div className={classes.email}>kanovsky.jeremy@gmail.com</div>\n            </a>\n          </div>\n        </StickySide>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"../components/Toolbar\";\nimport Hero from \"../components/Hero\";\nimport About from \"../components/About\";\nimport Showcase from \"../components/Showcase\";\nimport OtherProjects from \"../components/OtherProjects\";\nimport Contact from \"../components/Contact\";\nimport Sticky from \"../components/Sticky\";\n\nconst thinScreen = window.screen.width < 750;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: (props) => (props.thinScreen ? \"90%\" : \"75%\"),\n    margin: \"auto\",\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles({ thinScreen });\n\n  return (\n    <div>\n      <Toolbar />\n\n      <div className={classes.root}>\n        <Hero />\n        <About />\n        <Showcase />\n        <OtherProjects />\n        <Contact />\n      </div>\n\n      <Sticky />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Link } from \"react-router-dom\";\nimport {\n  llnavy,\n  colorGreen,\n  orange,\n  colorRed,\n  colorBlue,\n  colorYellow,\n  lslate,\n  llslate,\n} from \"../PageStyles\";\nimport { StyledButton } from \"../Common\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: \"100%\",\n    background: llnavy,\n    color: lslate,\n  },\n  title: {\n    fontSize: \"2em\",\n    fontWeight: \"600\",\n    color: orange,\n  },\n  description: {\n    color: llslate,\n  },\n  media: {\n    height: \"30vh\",\n  },\n  actions: {\n    float: \"right\",\n  },\n  content: {\n    // minHeight: '10vh'\n    // height: '8vh'\n  },\n  hardware: {\n    color: colorRed,\n    borderColor: colorRed,\n  },\n  software: {\n    color: colorBlue,\n    borderColor: colorBlue,\n  },\n  pcb: {\n    color: colorGreen,\n    borderColor: colorGreen,\n  },\n  oss: {\n    color: colorYellow,\n    borderColor: colorYellow,\n  },\n  hackathon: {\n    color: orange,\n    borderColor: orange,\n  },\n  outline: {\n    borderColor: orange,\n  },\n  button: {\n    float: \"none\",\n    // fontSize: (props) => (props.thinScreen ? \"0.8em\" : \"1em\"),\n    // marginRight: \"2em\",\n    // padding: (props) =>\n    //   props.thinScreen ? \"6px 10px 6px 10px\" : \"12px 20px 12px 20px\",\n  },\n});\n\nexport default function ProjectCard(props) {\n  const classes = useStyles();\n  const { name, project } = props;\n\n  return (\n    <Card className={classes.root}>\n      <Link to={`projects/${name}`} style={{ textDecoration: \"none\" }}>\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image={`static/projects/${name}/${project.coverImage}`}\n            title={name}\n          />\n          <CardContent className={classes.content}>\n            <Typography gutterBottom className={classes.title}>\n              {project.title}\n            </Typography>\n            <Typography className={classes.description}>\n              {project.description}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Link>\n\n      <CardActions className={classes.actions}>\n        {project.tags.hardware && (\n          <Chip\n            variant=\"outlined\"\n            size=\"medium\"\n            className={classes.hardware}\n            label=\"Hardware\"\n          />\n        )}\n        {project.tags.software && (\n          <Chip\n            variant=\"outlined\"\n            size=\"medium\"\n            className={classes.software}\n            label=\"Software\"\n          />\n        )}\n        {project.tags.pcb && (\n          <Chip\n            variant=\"outlined\"\n            size=\"medium\"\n            className={classes.pcb}\n            label=\"PCB Design\"\n          />\n        )}\n        {project.tags.oss && (\n          <Chip\n            variant=\"outlined\"\n            size=\"medium\"\n            className={classes.oss}\n            label=\"Open-Source Library\"\n          />\n        )}\n        {project.tags.hackathon && (\n          <Chip\n            variant=\"outlined\"\n            size=\"medium\"\n            className={classes.hackathon}\n            label=\"Hackathon Project\"\n          />\n        )}\n        <Link to={`projects/${name}`} style={{ textDecoration: \"none\" }}>\n          <StyledButton className={classes.button} classes={{ outlined: classes.outline }} size=\"medium\" variant=\"outlined\">\n            View Project\n          </StyledButton>\n        </Link>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Analog Clock\";\nconst coverImage = \"clock_isometric.JPG\";\nconst description =\n  \"This robot was build as a homework assignment for Tufts ME-134 (Advanced Robotics) in Fall 2020. The assignment was to create an analog clock, so we created a (digital) analog clock.\";\nconst tags = {\n  software: true,\n  hardware: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/me134/tree/master/hw2\",\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images\n        images={[\n          `${imagePath}/clock/clock_isometric.JPG`,\n          `${imagePath}/clock/clock_1.jpg`,\n          `${imagePath}/clock/clock_3.jpg`,\n        ]}\n      />\n      This robot was made for a homework project as part of Tufts ME-134\n      (Advanced Robotics) in the Fall of 2020. The prompt was to create an\n      analog clock. Twisting the prompt slightly, I chose to make a \"digital\"\n      analog clock. This clock comprises 28 individual micro-servo motors\n      controlled by 2 servo drivers being controlled by a Raspberry Pi Zero.\n      <Images\n        space\n        images={[\n          `${imagePath}/clock/clock_4.jpg`,\n          `${imagePath}/clock/clock_5.jpg`,\n        ]}\n      />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"LED Display\";\nconst coverImage = \"led_isometric.JPG\";\nconst description =\n  \"This robot was build as a homework assignment for Tufts ME-134 (Advanced Robotics) in Fall 2020. The assignment was to create a human-interface robot, so we made an interactive display.\";\nconst tags = {\n  software: true,\n  hardware: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/me134/tree/master/hw6\",\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images\n        images={[\n          `${imagePath}/led/led_isometric.JPG`,\n          `${imagePath}/led/led_3.jpg`,\n          `${imagePath}/led/led_2.jpg`,\n        ]}\n      />\n      This robot was made for a homework project as part of Tufts ME-134\n      (Advanced Robotics) in the Fall of 2020. The prompt was to create a robot\n      that interacts with a human by using computer vision to take input. The\n      robot must respond to a number of different fundamental cues (such as head\n      position, or hand position). We chose to build a large LED display (human\n      for scale) made up of 300 individually addressible LEDs. It used a camera\n      to enable the user to play PONG by waving their hands in the air, or snake\n      by moving their head relative to the camera. Because the Raspberry Pi\n      (which is driving the display) could not be loaded with the proper\n      libraries to perform hand-detection, I built a real-time image streamer\n      that sent data from my laptop (which could process the images) to the\n      Raspberry Pi.\n      <Images\n        space\n        images={[`${imagePath}/led/led_1.jpg`, `${imagePath}/led/led_4.jpg`]}\n      />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"FireEye\";\nconst coverImage = \"fireeye.png\";\nconst description =\n  \"FireEye is an open-source real-time socket communication library designed for low-latency video streaming from remote sources. It was designed to steam a Raspberry Pi camera to a webpage.\";\nconst tags = {\n  software: true,\n  oss: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/FireEye\",\n  pypi: \"https://pypi.org/project/FireEye/\",\n  npm: \"https://www.npmjs.com/package/fireeye\",\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      FireEye is an open-source cross-language (Python / Javascript via Node.js)\n      UNIX socket communication library. It was originally build and optimized\n      for streaming video from a Raspberry Pi camera to remote devices in\n      real-time, but has since been generalized to work for arbitrary\n      communication. It is extremely easy to use and handles almost all of the\n      setup for the user. It was later replaced with socket.engine (which is\n      newer and better for a number of reasons).\n      <Images space images={[`${imagePath}/fireeye/fireeye.png`]} />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Tufts BCI Team\";\nconst coverImage = \"bci.png\";\nconst description =\n  \"As part of the Tufts BCI (Brain-Computer Interface) team, I created a user-interface for viewing real-time brain activity on a 3D model. Data can be streamed from a remote sensor to the page.\";\nconst tags = {\n  software: true,\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title}>\n      The Tufts BCI Team (Brain-Computer Interface Team) is a cross-major team\n      working on new interfaces for computers, devices, and robots. It uses\n      hardware from OpenBCI and some custom software we've written. I was\n      responsible for creating a user-interface for streaming, in real-time,\n      data from remote sensors to an interface which would display the brain\n      activity onto a 3D model of the brain. This interface I originally wrote\n      in vanilla HTML/CSS/Javascript, but later I re-wrote it in React.js. I\n      also made the team logo (below) which I an unreasonably proud of.\n      <Images space images={[`${imagePath}/bci/bci.png`]} />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"MLE (My Little Eye)\";\nconst coverImage = \"mle.png\";\nconst description =\n  \"MLE (My Little Eye) was part of a hackathon project at HackMIT where we created a fleet of semi-autonomous robots that track down lost objects for people with vision and mobility impairments.\";\nconst tags = {\n  software: true,\n  hardware: true,\n  hackathon: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/MLE\",\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images\n        images={[`${imagePath}/mle/mle.png`, `${imagePath}/mle/mle3.png`]}\n      />\n      MLE (My Little Eye) was a hackathon project for HackMIT in 2019. The goal\n      of this project was to create a tool to help the vision and mobility\n      impaired by helping to find lost objects, or just finds objects in the\n      environment. It did this by deploying a small fleet of autonomous robots\n      (based on the \"Fleet\" swarm robot design) armed with cameras and the\n      vision APIs from Microsoft Azure. The user-interface allowed users to say\n      the name of an object and using Google speech recognition would command\n      the robots to begin hunting for the object. The camera feed would\n      live-stream to the user (along with robot controls), and once an object is\n      found would report it's position to the user, along with the path the\n      robot took to get there. We didn't win, but we got some great sweatshirts.\n      <Images space images={[`${imagePath}/mle/mle2.png`]} />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"viz.engine\";\nconst coverImage = \"vizengine.png\";\nconst description =\n  \"viz.engine is an open-source library and framework for robot user-interfaces. It is designed to give real-time feedback about the state of the robot and provide a control interface.\";\nconst tags = {\n  software: true,\n  oss: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/viz.engine\",\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images images={[`${imagePath}/vizengine/vizengine.png`]} />\n      viz.engine is an open-source React.js powered interface for controlling\n      robots. It was originally designed to help operators handle large swarms\n      of robots simultaneously by streaming real-time information about the\n      state of each system, and providing a unified and straight-forward method\n      of operating all the bots. It uses the socket.engine library for\n      communication between the robots and the server (which allows for standard\n      data to be streamed, as well as real-time video feeds from each robot).\n      <Images space images={[`${imagePath}/vizengine/dashboard.png`]} />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"ctrl.engine\";\nconst coverImage = \"ctrlengine.png\";\nconst description =\n  \"ctrl.engine is an open-source robotics library. It provides various tools in Python to make writing software for robotics easier and faster. It gives boilerplate multi-threaded code to multiple APIs and image processing tools.\";\nconst tags = {\n  software: true,\n  oss: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/ctrl.engine\",\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images images={[`${imagePath}/ctrlengine/ctrlengine.png`]} />\n      ctrl.engine is an open-source robotics library written in Python. It was\n      designed to provide a common set of tools to quickly prototype robots\n      (specifically those running on a Raspberry Pi, but in theory is\n      multiplatform). It provides boilerplate multi-threaded code for a number\n      of web-APIs, as well as numerous computer vision examples. It also\n      supports a number of input devices like xbox controllers, and provides\n      standard implementations of common algorithms (like PID controllers and\n      signal filters).\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Drivable Couch\";\nconst coverImage = \"couch.png\";\nconst description =\n  \"This is a project done as part of the Tufts Robotics club in which we built a drivable, remote-controlled couch. It's pretty much exactly what it sounds like.\";\nconst tags = {\n  software: true,\n  hardware: true,\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title}>\n      <Images\n        images={[\n          `${imagePath}/couch/couch.png`,\n          `${imagePath}/couch/couch2.jpeg`,\n        ]}\n      />\n      This is a robotic couch. It is remote-controlled via an xbox controller.\n      It can carry three people. It's exactly what it sounds like, and is a ton\n      of fun. This project was made with the Tufts Robotics Club, and was one of\n      my first large-scale robotics projects. It was built using FIRST robotics\n      hardware, and programmed in C++. At one point we had an actual couch on\n      it, but due to storage problems it had to be thrown out.\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Autodrive\";\nconst coverImage = \"autodrive.jpeg\";\nconst description =\n  \"This is a project done for ME-84 (Intro. Robotics & Mechatronics) in Fall 2018. This robot drives autonomously using image processing with markers on the ground.\";\nconst tags = {\n  software: true,\n  hardware: true,\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title}>\n      <Images\n        images={[\n          `${imagePath}/autodrive/autodrive.jpeg`,\n          `${imagePath}/autodrive/autodrive_1.JPG`,\n        ]}\n      />\n      This project was made as a homework assigmnet for Tufts ME-84 (Intro.\n      Robotics & Mechatronics) in Fall of 2018. The assignment was to use image\n      processing to make a line following robot. We did this by pointing an\n      OpenMV camera facing downwards and using canny edge-detection to find the\n      lines on the table. We also used a PyBoard v2 to control the servo motors\n      attached to the car (acting as drive motors).\n      <Images\n        space\n        images={[\n          `${imagePath}/autodrive/autodrive_2.JPG`,\n          `${imagePath}/autodrive/autodrive_3.JPG`,\n        ]}\n      />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Dum-E IoT Arms\";\nconst coverImage = \"dume_arms.jpeg\";\nconst description =\n  \"These internet-enabled robotic arm swarm was made at the MakeHarvard hackathon in 2019. They were made to be an educational tool for teaching introductory robotics for universities.\";\nconst tags = {\n  software: true,\n  hardware: true,\n  hackathon: true,\n};\nconst data = {\n  github: \"https://github.com/0xJeremy/Dum-E-IOT\",\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title} data={data}>\n      <Images\n        images={[\n          `${imagePath}/dume_arms/dume_arms.jpeg`,\n          `${imagePath}/dume_arms/dume_arms_1.JPG`,\n        ]}\n      />\n      The Dum-E IoT Arms (Dum-E being the name of the robotic arm Tony Stark\n      keeps in his workshop, of course) is a project made at the MakeHarvard\n      hackathon in 2019. We made them to be an educational teaching tool for\n      univresity students to learn about the basics of IoT, robotics, and\n      fabrication. We used them briefly in our university robotics club to teach\n      some of these topics after we had made the prototypes. The arms can be\n      controlled by a single centralized web-server and use ESP8266s to stream\n      instructions from the internet.\n      <Images\n        space\n        images={[\n          `${imagePath}/dume_arms/dume_arms_2.JPG`,\n          `${imagePath}/dume_arms/dume_arms_3.JPG`,\n        ]}\n      />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags, data };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"LEGO Robots\";\nconst coverImage = \"lego.jpeg\";\nconst description =\n  \"These are a series of LEGO robots made for ME-84 (Intro. Robotics & Mechatronics) in Fall 2018 at Tufts University.\";\nconst tags = {\n  software: true,\n  hardware: true,\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title}>\n      <Images\n        images={[\n          `${imagePath}/lego/lego.jpeg`,\n          `${imagePath}/lego/iot_arms_1.JPG`,\n          `${imagePath}/lego/iot_arms_2.JPG`,\n          `${imagePath}/lego/iot_arms_4.JPG`,\n        ]}\n      />\n      These are a series of robots made for Tufts ME-84 (Intro. Robotics &\n      Mechatronics) in the Fall of 2018. Each one was a homework assignment, and\n      all the robots were programmed in LabVIEW. The assignments include making\n      a kinetic art sculpture, an wirelessly-communicating clock, a childrens\n      toy, and a remote-control robotic arm. All these robots used the LEGO EV3\n      platform.\n      <Images\n        space\n        images={[\n          `${imagePath}/lego/clock_1.JPG`,\n          `${imagePath}/lego/clock_3.JPG`,\n        ]}\n      />\n      <Images\n        images={[\n          `${imagePath}/lego/towers_1.JPG`,\n          `${imagePath}/lego/towers_2.JPG`,\n        ]}\n      />\n      <Images\n        images={[\n          `${imagePath}/lego/gear_1.JPG`,\n          `${imagePath}/lego/gear_2.JPG`,\n        ]}\n      />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"QBot\";\nconst coverImage = \"qbot.jpeg\";\nconst description =\n  \"QBot was a robot made as part of ME-84 (Intro. Robotics & Mechatronics) in Fall 2018. It uses image recognition to respond to commands from QR codes.\";\nconst tags = {\n  software: true,\n  hardware: true,\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title}>\n      <Images\n        images={[`${imagePath}/qbot/qbot.jpeg`, `${imagePath}/qbot/bot_1.JPG`]}\n      />\n      This robot was a homework project from Tufts ME-84 (Intro. Robotics &\n      Mechatronics). The assignment was to create a robot that takes its cues\n      for movement from a camera (computer vision). We created a driving robot\n      that uses an OpenMV camera to recognize QR tags representing \"move\n      forward\", \"move backward\", \"turn left\", \"turn right\", \"stop\", etc. The\n      OpenMV camera commanded a PyBoard v2 which in turn sent commands to the\n      two servo motors (here being used as drive motors).\n      <Images\n        space\n        images={[`${imagePath}/qbot/bot_2.JPG`, `${imagePath}/qbot/bot_3.JPG`]}\n      />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"µJumbo\";\nconst coverImage = \"ujumbo.jpeg\";\nconst description =\n  'µJumbo was an entry to the Trinity International Robotic Firefighting competition in the \"small robot\" category.';\nconst tags = {\n  software: true,\n  hardware: true,\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title}>\n      <Images\n        images={[\n          `${imagePath}/ujumbo/ujumbo.jpeg`,\n          `${imagePath}/ujumbo/jumbo_3.JPG`,\n        ]}\n      />\n      µJumbo was an entry to the Trinity International Robotic Firefighting\n      competition in the \"smallest robot\" category. Unfortunately, that year it\n      was only the second smallest robot (losing by a matter of several cubic\n      centimeters). This robot was to navigate a maze autonomously and\n      extinguish a fire (a candle). It was also required to recognize a tone\n      played as the starting signal (thus the microphone and filtering circuit\n      on the top of the robot). We equipped this robot with an Arduino Nano,\n      wheels encoders, and multiple time-of-flight distance sensors placed\n      around the robot.\n      <Images\n        space\n        images={[\n          `${imagePath}/ujumbo/jumbo_2.JPG`,\n          `${imagePath}/ujumbo/jumbo_4.JPG`,\n        ]}\n      />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Firefighting Robot\";\nconst coverImage = \"firefighting.jpeg\";\nconst description =\n  \"This robot was our entry into the Trinity International Robotic Firefighting Competition.\";\nconst tags = {\n  software: true,\n  hardware: true,\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title}>\n      <Images\n        images={[\n          `${imagePath}/firefighting/firefighting.jpeg`,\n          `${imagePath}/firefighting/firefighting_1.JPG`,\n        ]}\n      />\n      This robot is one of the first I've made from scratch, and was made for\n      the Trinity International Robotic Firefighting Competition in the Spring\n      of 2018. It's task was to listen for a tone, and when signaled would begin\n      to autonomously navigate a maze and extinguish a fire. It was powered by a\n      Raspberry Pi Zero and was surrounded by ultrasonic distance sensors to\n      detect the walls of the maze.\n      <Images space images={[`${imagePath}/firefighting/firefighting_2.JPG`]} />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Expo Digitizer\";\nconst coverImage = \"expo_digitizer.jpeg\";\nconst description =\n  \"This is an attachment for an Expo marker to turn it into an active digitizer.\";\nconst tags = {\n  software: true,\n  hardware: true,\n  hackathon: true,\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title}>\n      <Images\n        images={[\n          `${imagePath}/expo_digitizer/expo_digitizer.jpeg`,\n          `${imagePath}/expo_digitizer/expo_digitizer_2.jpeg`,\n        ]}\n      />\n      This project was made as part of Tufts Polyhack in Fall 2017. It is an\n      attachment for an Expo marker to turn it into an active digitizer. Using\n      an accelerometer mounted to the marker, and a button to detect when it\n      makes contact with the board, this marker could generate a PDF of the\n      hardwriting of the user.\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"HobbesBot\";\nconst coverImage = \"hobbesbot.jpeg\";\nconst description =\n  'This is a robotic puppet with 7 degrees of freedom called \"HobbesBot\" after the tiger in Calvin and Hobbes. It was the final project from ME-84 (Intro. Robotics & Mechatronics) in Fall 2018 at Tufts.';\nconst tags = {\n  software: true,\n  hardware: true,\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title}>\n      <Images\n        images={[\n          `${imagePath}/hobbesbot/hobbesbot.jpeg`,\n          `${imagePath}/hobbesbot/hobbes_2.JPG`,\n        ]}\n      />\n      HobbesBot is the final project from Tufts ME-84 (Intro. Robotics &\n      Mechatronics). The assignment was to build an animatronic puppet that\n      takes cues from a human, and can interact with them. We created Hobbes,\n      the tiger from Calvin & Hobbes, as a 7 degrees-of-freedom robot equipped\n      with computer vision. Using a Raspberry Pi and a camera (along with half\n      of Google Cloud Platforms vision APIs), Hobbes determines the users mood\n      and reacts accordingly. As a cherry on top, we made two IoT enabled LED\n      cubes to light up when Hobbes detects the user is happy.\n      <Images\n        space\n        images={[\n          `${imagePath}/hobbesbot/hobbes_1.JPG`,\n          `${imagePath}/hobbesbot/hobbes_3.JPG`,\n        ]}\n      />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Quadcopter UAV\";\nconst coverImage = \"quadcopter.jpeg\";\nconst description =\n  \"This is a quadcopter UAV made with the Tufts MAKE club. It was originally designed to be semi-autonomous.\";\nconst tags = {\n  software: true,\n  hardware: true,\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title}>\n      <Images\n        images={[\n          `${imagePath}/quadcopter/quadcopter.jpeg`,\n          `${imagePath}/quadcopter/quadcopter_2.jpeg`,\n        ]}\n      />\n      This quadcopter was built with the Tufts MAKE club. The project was to\n      build a quadcopter from scratch, and program it to fly semi-autonomously\n      using computer vision. Unfortunately, due to semester time constraints, we\n      were unable to finish the autonomous portion of the build, but it flew\n      pretty well.\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Electric Longboard\";\nconst coverImage = \"longboard.jpeg\";\nconst description =\n  \"This is an electric longboard made with the Tufts MAKE club.\";\nconst tags = {\n  hardware: true,\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title}>\n      <Images\n        images={[\n          `${imagePath}/longboard/longboard.jpeg`,\n          `${imagePath}/longboard/longboard_1.jpeg`,\n        ]}\n      />\n      This was a project with the Tufts MAKE club in which we built an electric\n      longboard. It was a pretty straight forward project, and the end result\n      worked suprisingly well.\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags };\n","import React from \"react\";\nimport ProjectTemplate from \"./ProjectTemplate\";\nimport { imagePath } from \"./ProjectCommon\";\nimport Images from \"./Images\";\n\nconst title = \"Raspberry Pi Pico Servo Driver\";\nconst coverImage = \"pico_pca.JPG\";\nconst description =\n  \"This is a PCB daughterboard for the Raspberry Pi Pico that carries a PCB9685 16 channel servo-driver.\";\nconst tags = {\n  software: true,\n  pcb: true,\n};\n\nexport default function Component() {\n  return (\n    <ProjectTemplate title={title}>\n      <Images\n        images={[\n          `${imagePath}/pico_pca/pico_pca.JPG`,\n          `${imagePath}/pico_pca/pico_pca_1.JPG`,\n          `${imagePath}/pico_pca/pico_pca_2.JPG`,\n        ]}\n      />\n      This PCB is a breakout board for the Raspberry Pi Pico. It carries a\n      PCA9685 16-channel PWM driver chip, and provides breakouts for 16 servos.\n      It also includes breakouts for Stemma QWIIC connectors on the side of the\n      board.\n      <Images\n        space\n        images={[\n          `${imagePath}/pico_pca/pico_pca_3.JPG`,\n          `${imagePath}/pico_pca/pico_pca_4.JPG`,\n        ]}\n      />\n    </ProjectTemplate>\n  );\n}\n\nexport { Component, title, coverImage, description, tags };\n","import * as Hexapod from \"./Hexapod\";\nimport * as Crawler from \"./Crawler\";\nimport * as Ballbot from \"./Ballbot\";\nimport * as DrawingRobot from \"./DrawingRobot\";\nimport * as Clock from \"./Clock\";\nimport * as LED from \"./LED\";\nimport * as Daedalus from \"./Daedalus\";\nimport * as Helios from \"./Helios\";\nimport * as Icarus from \"./Icarus\";\nimport * as Fireeye from \"./Fireeye\";\nimport * as BCI from \"./BCI\";\nimport * as MLE from \"./MLE\";\nimport * as SocketEngine from \"./SocketEngine\";\nimport * as VizEngine from \"./VizEngine\";\nimport * as CtrlEngine from \"./CtrlEngine\";\nimport * as Meteorites from \"./Meteorites\";\nimport * as PicoOscilloscope from \"./PicoOscilloscope\";\nimport * as Couch from \"./Couch\";\nimport * as Autodrive from \"./Autodrive\";\nimport * as Fleet from \"./Fleet\";\nimport * as DumEArms from \"./DumEArms\";\nimport * as Lego from \"./Lego\";\nimport * as QBot from \"./QBot\";\nimport * as UJumbo from \"./UJumbo\";\nimport * as Firefighting from \"./FirefightingRobot\";\nimport * as ExpoDigitizer from \"./ExpoDigitizer\";\nimport * as HobbesBot from \"./HobbesBot\";\nimport * as Quadcopter from \"./Quadcopter\";\nimport * as Longboard from \"./Longboard\";\nimport * as Vegas from \"./Vegas\";\nimport * as SpacePrinter from \"./SpacePrinter\";\nimport * as DevBoard from \"./DevBoard\";\nimport * as PicoPCA from \"./PicoPCA\";\nimport * as Surge from \"./Surge\";\n\nexport default {\n  hexapod: Hexapod,\n  crawler: Crawler,\n  ballbot: Ballbot,\n  drawing_robot: DrawingRobot,\n  clock: Clock,\n  led: LED,\n  daedalus: Daedalus,\n  helios: Helios,\n  icarus: Icarus,\n  fireeye: Fireeye,\n  bci: BCI,\n  mle: MLE,\n  socketengine: SocketEngine,\n  vizengine: VizEngine,\n  ctrlengine: CtrlEngine,\n  meteorites: Meteorites,\n  pico_oscilloscope: PicoOscilloscope,\n  couch: Couch,\n  autodrive: Autodrive,\n  fleet: Fleet,\n  dume_arms: DumEArms,\n  lego: Lego,\n  qbot: QBot,\n  ujumbo: UJumbo,\n  firefighting: Firefighting,\n  expo_digitizer: ExpoDigitizer,\n  hobbesbot: HobbesBot,\n  quadcopter: Quadcopter,\n  longboard: Longboard,\n  vegas: Vegas,\n  space_printer: SpacePrinter,\n  devboard: DevBoard,\n  pico_pca: PicoPCA,\n  surge: Surge,\n};\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  orange,\n  navy,\n  colorBlue,\n  colorGreen,\n  colorYellow,\n  colorRed,\n  fontMono,\n} from \"../PageStyles\";\nimport ProjectCard from \"./ProjectCard\";\nimport Toolbar from \"../Toolbar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport projectPages from \"../projects\";\n\nconst tableMargin = 1;\nconst disabledColor = \"#888888\";\nconst smallScreen = window.screen.width < 650;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: navy,\n  },\n  title: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    color: orange,\n    fontWeight: \"600\",\n    fontSize: \"8vh\",\n    paddingBottom: \"3vh\",\n    paddingTop: \"3vh\",\n    marginLeft: \"1vw\",\n    fontFamily: fontMono,\n  },\n  icon: {\n    fontSize: \"1em\",\n  },\n  paper: {\n    height: \"5vh\",\n  },\n  grid: {\n    marginLeft: `${tableMargin}vw`,\n    marginRight: `${tableMargin}vw`,\n    width: `${100 - 2 * tableMargin}vw`,\n  },\n  gridItem: {\n    // top: 0,\n    // position: 'relative',\n    // transition: '0.3s',\n    // \"&:hover\": {\n    //   top: '-8px',\n    // }\n  },\n  hardware: {\n    color: (props) => (props.filter.hardware ? colorRed : disabledColor),\n    borderColor: (props) => (props.filter.hardware ? colorRed : disabledColor),\n    marginLeft: \"5vw\",\n    marginTop: (props) => (props.smallScreen ? \"2vh\" : 0),\n  },\n  software: {\n    color: (props) => (props.filter.software ? colorBlue : disabledColor),\n    borderColor: (props) => (props.filter.software ? colorBlue : disabledColor),\n    marginLeft: \"1.5vw\",\n    marginTop: (props) => (props.smallScreen ? \"2vh\" : 0),\n  },\n  pcb: {\n    color: (props) => (props.filter.pcb ? colorGreen : disabledColor),\n    borderColor: (props) => (props.filter.pcb ? colorGreen : disabledColor),\n    marginLeft: \"1.5vw\",\n    marginTop: (props) => (props.smallScreen ? \"2vh\" : 0),\n  },\n  oss: {\n    color: (props) => (props.filter.oss ? colorYellow : disabledColor),\n    borderColor: (props) => (props.filter.oss ? colorYellow : disabledColor),\n    marginLeft: \"1.5vw\",\n    marginTop: (props) => (props.smallScreen ? \"2vh\" : 0),\n  },\n  hackathon: {\n    color: (props) => (props.filter.hackathon ? orange : disabledColor),\n    borderColor: (props) =>\n      props.filter.hackathon ? orange : disabledColor,\n    marginLeft: \"1.5vw\",\n    marginTop: (props) => (props.smallScreen ? \"2vh\" : 0),\n  },\n}));\n\nexport default function Projects() {\n  const [filter, setFilter] = React.useState({\n    software: true,\n    hardware: true,\n    pcb: true,\n    oss: true,\n    hackathon: true,\n  });\n  const classes = useStyles({ filter, smallScreen });\n  const gridSize = smallScreen ? 12 : 4;\n\n  useEffect(() => {\n    document.title = \"Projects | Jeremy Kanovsky\";\n    window.scrollTo(0, 0);\n  });\n\n  const handleClick = (tag) => {\n    setFilter({ ...filter, [tag]: !filter[tag] });\n  };\n\n  const showProject = (project) => {\n    for (const [key] of Object.entries(project.tags)) {\n      if (!filter[key]) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  return (\n    <div>\n      <Toolbar />\n\n      <div className={classes.root}>\n        <div className={classes.title}>\n          > Projects\n          <Chip\n            variant=\"outlined\"\n            label=\"Hardware\"\n            className={classes.hardware}\n            onClick={() => handleClick(\"hardware\")}\n          />\n          <Chip\n            variant=\"outlined\"\n            label=\"Software\"\n            className={classes.software}\n            onClick={() => handleClick(\"software\")}\n          />\n          <Chip\n            variant=\"outlined\"\n            label=\"PCB Design\"\n            className={classes.pcb}\n            onClick={() => handleClick(\"pcb\")}\n          />\n          <Chip\n            variant=\"outlined\"\n            label=\"Open-Source Library\"\n            className={classes.oss}\n            onClick={() => handleClick(\"oss\")}\n          />\n          <Chip\n            variant=\"outlined\"\n            label=\"Hackathon Project\"\n            className={classes.hackathon}\n            onClick={() => handleClick(\"hackathon\")}\n          />\n        </div>\n\n        <Grid container spacing={2} className={classes.grid}>\n          {Object.entries(projectPages).map(([name, project]) => {\n            if (showProject(project)) {\n              return (\n                <Grid className={classes.gridItem} item xs={gridSize} key={name}>\n                  <ProjectCard name={name} project={project} key={name} />\n                </Grid>\n              );\n            }\n            return <div />;\n          })}\n        </Grid>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { colorGreen, colorOrange } from \"../PageStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport Toolbar from \"../Toolbar\";\n\nconst offsetLeft = 5;\nconst offsetTop = 15;\nconst textPadding = 2;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontWeight: \"600\",\n    fontSize: \"min(6vh, 6vw)\",\n    position: \"relative\",\n    left: `${offsetLeft}vw`,\n    width: `${100 - offsetLeft}vw`,\n    height: `${100 - offsetTop - 10}vh`,\n    top: `${offsetTop}vh`,\n  },\n  email: {\n    color: \"white\",\n  },\n  website: {\n    color: \"white\",\n    paddingTop: `${textPadding}vh`,\n  },\n  github: {\n    color: \"white\",\n    paddingTop: `${textPadding}vh`,\n  },\n  linkedin: {\n    color: \"white\",\n    paddingTop: `${textPadding}vh`,\n  },\n  outline: {\n    borderColor: colorOrange,\n  },\n  link: {\n    color: colorGreen,\n  },\n  button: {\n    float: \"none\",\n    fontWeight: \"600\",\n    fontSize: \"0.7em\",\n    color: colorOrange,\n    \"&:hover\": {\n      borderColor: colorGreen,\n      color: colorGreen,\n    },\n  },\n}));\n\nexport default function Contact() {\n  const classes = useStyles();\n\n  useEffect(() => {\n    document.title = \"Contact | Jeremy Kanovsky\";\n  });\n\n  return (\n    <div>\n      <Toolbar />\n\n      <div className={classes.root}>\n        <div className={classes.email}>\n          email:{\" \"}\n          <a\n            href=\"mailto:kanovsky.jeremy@gmail.com\"\n            rel=\"noopener noreferrer\"\n            className={classes.link}\n          >\n            kanovsky.jeremy@gmail.com\n          </a>\n        </div>\n        <div className={classes.website}>website: you're here.</div>\n        <div className={classes.github}>\n          github:{\" \"}\n          <a\n            href=\"https://github.com/0xJeremy\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className={classes.link}\n          >\n            github.com/0xJeremy\n          </a>\n        </div>\n        <div className={classes.linkedin}>\n          linkedin:{\" \"}\n          <a\n            href=\"https://www.linkedin.com/in/jeremy-kanovsky/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className={classes.link}\n          >\n            linkedin.com/in/jeremy-kanovsky\n          </a>\n        </div>\n\n        <br />\n        <br />\n\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Button\n            className={classes.button}\n            classes={{ outlined: classes.outline }}\n            variant=\"outlined\"\n            color=\"primary\"\n          >\n            Home\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { colorGreen, colorOrange } from \"../PageStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport Toolbar from \"../Toolbar\";\n\nconst offsetLeft = 5;\nconst offsetTop = 15;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontWeight: \"600\",\n    fontSize: \"4em\",\n    position: \"relative\",\n    left: `${offsetLeft}vw`,\n    width: `${100 - offsetLeft}vw`,\n    height: `${100 - offsetTop - 10}vh`,\n    top: `${offsetTop}vh`,\n  },\n  text: {\n    color: \"white\",\n  },\n  outline: {\n    borderColor: colorOrange,\n  },\n  link: {\n    color: colorGreen,\n  },\n  button: {\n    float: \"none\",\n    fontWeight: \"600\",\n    fontSize: \"0.7em\",\n    marginRight: \"2em\",\n    color: colorOrange,\n    \"&:hover\": {\n      borderColor: colorGreen,\n      color: colorGreen,\n    },\n  },\n}));\n\nexport default function Research() {\n  const classes = useStyles();\n\n  useEffect(() => {\n    document.title = \"Research | Jeremy Kanovsky\";\n  });\n\n  return (\n    <div>\n      <Toolbar />\n\n      <div className={classes.root}>\n        <div className={classes.text}>\n          there will be some stuff here eventually. for now, see{\" \"}\n          <a\n            href=\"static/ME94%20Poster%20Final.pdf\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className={classes.link}\n          >\n            here\n          </a>\n          .\n        </div>\n\n        <br />\n        <br />\n\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Button\n            className={classes.button}\n            classes={{ outlined: classes.outline }}\n            variant=\"outlined\"\n            color=\"primary\"\n          >\n            Home\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Projects from \"./components/old/Projects\";\nimport Contact from \"./components/old/Contact\";\nimport Research from \"./components/old/Research\";\nimport projectPages from \"./components/projects\";\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/contact\" component={Contact} />\n      <Route exact path=\"/projects\" component={Projects} />\n      <Route exact path=\"/research\" component={Research} />\n      {Object.entries(projectPages).map(([name, project]) => (\n        <Route\n          exact\n          path={`/projects/${name}`}\n          key={name}\n          component={project.Component}\n        />\n      ))}\n      <Route path=\"/\" component={Home} />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}