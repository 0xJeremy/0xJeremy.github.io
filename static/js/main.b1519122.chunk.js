(this.webpackJsonppwv3=this.webpackJsonppwv3||[]).push([[0],{43:function(e,t,a){e.exports=a(53)},53:function(e,t,a){"use strict";a.r(t);var o={};a.r(o),a.d(o,"default",(function(){return Ce})),a.d(o,"Component",(function(){return Ce})),a.d(o,"title",(function(){return je})),a.d(o,"coverImage",(function(){return Te})),a.d(o,"description",(function(){return Pe})),a.d(o,"tags",(function(){return Ie})),a.d(o,"data",(function(){return _e}));var r={};a.r(r),a.d(r,"default",(function(){return Ne})),a.d(r,"Component",(function(){return Ne})),a.d(r,"title",(function(){return xe})),a.d(r,"coverImage",(function(){return Je})),a.d(r,"description",(function(){return Fe})),a.d(r,"tags",(function(){return Me})),a.d(r,"data",(function(){return Re}));var n={};a.r(n),a.d(n,"default",(function(){return De})),a.d(n,"Component",(function(){return De})),a.d(n,"title",(function(){return Be})),a.d(n,"coverImage",(function(){return Ge})),a.d(n,"description",(function(){return Se})),a.d(n,"tags",(function(){return Ae})),a.d(n,"data",(function(){return ze}));var i={};a.r(i),a.d(i,"default",(function(){return Ve})),a.d(i,"Component",(function(){return Ve})),a.d(i,"title",(function(){return Oe})),a.d(i,"coverImage",(function(){return He})),a.d(i,"description",(function(){return Le})),a.d(i,"tags",(function(){return We})),a.d(i,"data",(function(){return qe}));var c={};a.r(c),a.d(c,"default",(function(){return $e})),a.d(c,"Component",(function(){return $e})),a.d(c,"title",(function(){return Ue})),a.d(c,"coverImage",(function(){return Ke})),a.d(c,"description",(function(){return Qe})),a.d(c,"tags",(function(){return Ze})),a.d(c,"data",(function(){return Xe}));var s={};a.r(s),a.d(s,"default",(function(){return rt})),a.d(s,"Component",(function(){return rt})),a.d(s,"title",(function(){return Ye})),a.d(s,"coverImage",(function(){return et})),a.d(s,"description",(function(){return tt})),a.d(s,"tags",(function(){return at})),a.d(s,"data",(function(){return ot}));var l={};a.r(l),a.d(l,"default",(function(){return lt})),a.d(l,"Component",(function(){return lt})),a.d(l,"title",(function(){return nt})),a.d(l,"coverImage",(function(){return it})),a.d(l,"description",(function(){return ct})),a.d(l,"tags",(function(){return st}));var u={};a.r(u),a.d(u,"default",(function(){return ft})),a.d(u,"Component",(function(){return ft})),a.d(u,"title",(function(){return ut})),a.d(u,"coverImage",(function(){return dt})),a.d(u,"description",(function(){return mt})),a.d(u,"tags",(function(){return ht}));var d={};a.r(d),a.d(d,"default",(function(){return vt})),a.d(d,"Component",(function(){return vt})),a.d(d,"title",(function(){return gt})),a.d(d,"coverImage",(function(){return pt})),a.d(d,"description",(function(){return bt})),a.d(d,"tags",(function(){return wt}));var m={};a.r(m),a.d(m,"default",(function(){return Pt})),a.d(m,"Component",(function(){return Pt})),a.d(m,"title",(function(){return Et})),a.d(m,"coverImage",(function(){return yt})),a.d(m,"description",(function(){return kt})),a.d(m,"tags",(function(){return jt})),a.d(m,"data",(function(){return Tt}));var h={};a.r(h),a.d(h,"default",(function(){return Jt})),a.d(h,"Component",(function(){return Jt})),a.d(h,"title",(function(){return It})),a.d(h,"coverImage",(function(){return _t})),a.d(h,"description",(function(){return Ct})),a.d(h,"tags",(function(){return xt}));var f={};a.r(f),a.d(f,"default",(function(){return Gt})),a.d(f,"Component",(function(){return Gt})),a.d(f,"title",(function(){return Ft})),a.d(f,"coverImage",(function(){return Mt})),a.d(f,"description",(function(){return Rt})),a.d(f,"tags",(function(){return Nt})),a.d(f,"data",(function(){return Bt}));var g={};a.r(g),a.d(g,"default",(function(){return Ht})),a.d(g,"Component",(function(){return Ht})),a.d(g,"title",(function(){return St})),a.d(g,"coverImage",(function(){return At})),a.d(g,"description",(function(){return zt})),a.d(g,"tags",(function(){return Dt})),a.d(g,"data",(function(){return Ot}));var p={};a.r(p),a.d(p,"default",(function(){return Kt})),a.d(p,"Component",(function(){return Kt})),a.d(p,"title",(function(){return Lt})),a.d(p,"coverImage",(function(){return Wt})),a.d(p,"description",(function(){return qt})),a.d(p,"tags",(function(){return Vt})),a.d(p,"data",(function(){return Ut}));var b={};a.r(b),a.d(b,"default",(function(){return ea})),a.d(b,"Component",(function(){return ea})),a.d(b,"title",(function(){return Qt})),a.d(b,"coverImage",(function(){return Zt})),a.d(b,"description",(function(){return Xt})),a.d(b,"tags",(function(){return $t})),a.d(b,"data",(function(){return Yt}));var w={};a.r(w),a.d(w,"default",(function(){return ca})),a.d(w,"Component",(function(){return ca})),a.d(w,"title",(function(){return aa})),a.d(w,"coverImage",(function(){return oa})),a.d(w,"description",(function(){return ra})),a.d(w,"tags",(function(){return na})),a.d(w,"data",(function(){return ia}));var v={};a.r(v),a.d(v,"default",(function(){return ha})),a.d(v,"Component",(function(){return ha})),a.d(v,"title",(function(){return sa})),a.d(v,"coverImage",(function(){return la})),a.d(v,"description",(function(){return ua})),a.d(v,"tags",(function(){return da})),a.d(v,"data",(function(){return ma}));var E={};a.r(E),a.d(E,"default",(function(){return wa})),a.d(E,"Component",(function(){return wa})),a.d(E,"title",(function(){return fa})),a.d(E,"coverImage",(function(){return ga})),a.d(E,"description",(function(){return pa})),a.d(E,"tags",(function(){return ba}));var y={};a.r(y),a.d(y,"default",(function(){return ja})),a.d(y,"Component",(function(){return ja})),a.d(y,"title",(function(){return va})),a.d(y,"coverImage",(function(){return Ea})),a.d(y,"description",(function(){return ya})),a.d(y,"tags",(function(){return ka}));var k={};a.r(k),a.d(k,"default",(function(){return xa})),a.d(k,"Component",(function(){return xa})),a.d(k,"title",(function(){return Ta})),a.d(k,"coverImage",(function(){return Pa})),a.d(k,"description",(function(){return Ia})),a.d(k,"tags",(function(){return _a}));var j={};a.r(j),a.d(j,"default",(function(){return Ba})),a.d(j,"Component",(function(){return Ba})),a.d(j,"title",(function(){return Ja})),a.d(j,"coverImage",(function(){return Fa})),a.d(j,"description",(function(){return Ma})),a.d(j,"tags",(function(){return Ra})),a.d(j,"data",(function(){return Na}));var T={};a.r(T),a.d(T,"default",(function(){return Da})),a.d(T,"Component",(function(){return Da})),a.d(T,"title",(function(){return Ga})),a.d(T,"coverImage",(function(){return Sa})),a.d(T,"description",(function(){return Aa})),a.d(T,"tags",(function(){return za}));var P={};a.r(P),a.d(P,"default",(function(){return qa})),a.d(P,"Component",(function(){return qa})),a.d(P,"title",(function(){return Oa})),a.d(P,"coverImage",(function(){return Ha})),a.d(P,"description",(function(){return La})),a.d(P,"tags",(function(){return Wa}));var I={};a.r(I),a.d(I,"default",(function(){return Za})),a.d(I,"Component",(function(){return Za})),a.d(I,"title",(function(){return Va})),a.d(I,"coverImage",(function(){return Ua})),a.d(I,"description",(function(){return Ka})),a.d(I,"tags",(function(){return Qa}));var _={};a.r(_),a.d(_,"default",(function(){return to})),a.d(_,"Component",(function(){return to})),a.d(_,"title",(function(){return Xa})),a.d(_,"coverImage",(function(){return $a})),a.d(_,"description",(function(){return Ya})),a.d(_,"tags",(function(){return eo}));var C={};a.r(C),a.d(C,"default",(function(){return io})),a.d(C,"Component",(function(){return io})),a.d(C,"title",(function(){return ao})),a.d(C,"coverImage",(function(){return oo})),a.d(C,"description",(function(){return ro})),a.d(C,"tags",(function(){return no}));var x={};a.r(x),a.d(x,"default",(function(){return mo})),a.d(x,"Component",(function(){return mo})),a.d(x,"title",(function(){return co})),a.d(x,"coverImage",(function(){return so})),a.d(x,"description",(function(){return lo})),a.d(x,"tags",(function(){return uo}));var J={};a.r(J),a.d(J,"default",(function(){return bo})),a.d(J,"Component",(function(){return bo})),a.d(J,"title",(function(){return ho})),a.d(J,"coverImage",(function(){return fo})),a.d(J,"description",(function(){return go})),a.d(J,"tags",(function(){return po}));var F={};a.r(F),a.d(F,"default",(function(){return ko})),a.d(F,"Component",(function(){return ko})),a.d(F,"title",(function(){return wo})),a.d(F,"coverImage",(function(){return vo})),a.d(F,"description",(function(){return Eo})),a.d(F,"tags",(function(){return yo}));var M={};a.r(M),a.d(M,"default",(function(){return Co})),a.d(M,"Component",(function(){return Co})),a.d(M,"title",(function(){return jo})),a.d(M,"coverImage",(function(){return To})),a.d(M,"description",(function(){return Po})),a.d(M,"tags",(function(){return Io})),a.d(M,"data",(function(){return _o}));var R={};a.r(R),a.d(R,"default",(function(){return No})),a.d(R,"Component",(function(){return No})),a.d(R,"title",(function(){return xo})),a.d(R,"coverImage",(function(){return Jo})),a.d(R,"description",(function(){return Fo})),a.d(R,"tags",(function(){return Mo})),a.d(R,"data",(function(){return Ro}));var N={};a.r(N),a.d(N,"default",(function(){return zo})),a.d(N,"Component",(function(){return zo})),a.d(N,"title",(function(){return Bo})),a.d(N,"coverImage",(function(){return Go})),a.d(N,"description",(function(){return So})),a.d(N,"tags",(function(){return Ao}));var B={};a.r(B),a.d(B,"default",(function(){return Wo})),a.d(B,"Component",(function(){return Wo})),a.d(B,"title",(function(){return Do})),a.d(B,"coverImage",(function(){return Oo})),a.d(B,"description",(function(){return Ho})),a.d(B,"tags",(function(){return Lo}));var G={};a.r(G),a.d(G,"default",(function(){return Zo})),a.d(G,"Component",(function(){return Zo})),a.d(G,"title",(function(){return qo})),a.d(G,"coverImage",(function(){return Vo})),a.d(G,"description",(function(){return Uo})),a.d(G,"tags",(function(){return Ko})),a.d(G,"data",(function(){return Qo}));var S=a(20),A=a(0),z=a.n(A),D=a(18),O=a.n(D),H=a(9),L=a(7),W=a(76),q=a(78),V=a(79),U=window.screen.width<650,K=Object(W.a)((function(e){return{root:{background:"transparent",color:"#F7931E",marginTop:"1vh"},logo:{height:"2.5em",paddingRight:"24px",verticalAlign:"center"},name:{marginLeft:"-10px",fontSize:"2.2em"},button:{fontWeight:"600",color:"#F7931E",marginLeft:"1vw",marginRight:"1vw",fontSize:"1.2em","&:hover":{borderColor:"#38A700",color:"#38A700"},marginTop:function(e){return e.smallScreen?"2vh":0}},outline:{borderColor:"#F7931E",height:"100%"},rightToolbar:{marginLeft:"auto"}}}));var Q=function(e){var t=K({smallScreen:U});return Object(A.useEffect)((function(){window.scrollTo(0,0)})),z.a.createElement(q.a,{className:t.root},z.a.createElement("section",{className:t.rightToolbar},z.a.createElement(H.b,{to:"/",style:{textDecoration:"none"}},z.a.createElement(V.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary"},"Home")),z.a.createElement(H.b,{to:"/contact",style:{textDecoration:"none"}},z.a.createElement(V.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary"},"Contact Me")),z.a.createElement(V.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary",href:"/static/JCK%20Resume.pdf",target:"_blank"},"Resume"),z.a.createElement(H.b,{to:"/research",style:{textDecoration:"none"}},z.a.createElement(V.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary"},"Research")),z.a.createElement(H.b,{to:"/projects",style:{textDecoration:"none"}},z.a.createElement(V.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary"},"Projects")),z.a.createElement(V.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary",href:"https://github.com/0xJeremy/",target:"_blank"},"Github")))},Z=a(36),X=a.n(Z),$=window.screen.height<850,Y=Object(W.a)((function(e){return{root:{fontWeight:"600",fontSize:function(e){return e.smallScreen?"8vh":"10vh"},position:"relative",left:"".concat(5,"vw"),width:"".concat(95,"vw"),height:"".concat(75,"vh"),top:function(e){return e.smallScreen?"".concat(5,"vh"):"".concat(15,"vh")}},hello:{color:"white"},name:{color:"#F7931E",paddingTop:"".concat(2,"vh")},build:{color:"#38A700",float:"left",paddingTop:"".concat(2,"vh")},typewriter:{color:"#38A700",float:"left",paddingTop:"".concat(2,"vh")},outline:{borderColor:"#F7931E"},button:{float:"none",fontWeight:"600",fontSize:"0.4em",marginRight:"2em",color:"#F7931E","&:hover":{borderColor:"#38A700",color:"#38A700"}}}}));function ee(e){var t=Y({smallScreen:$});return Object(A.useEffect)((function(){document.title="Home | Jeremy Kanovsky"})),z.a.createElement("div",{className:t.root},z.a.createElement("div",{className:t.hello},z.a.createElement("span",{role:"img","aria-label":""},"\ud83d\udc4b")," ","Hello."),z.a.createElement("div",{className:t.name},"I'm Jeremy."),z.a.createElement("div",{className:t.build},"I build\xa0"),z.a.createElement("div",{className:t.typewriter},z.a.createElement(X.a,{options:{strings:["robots.","software.","electronics.","mechanisms.","open source.","hardware."],autoStart:!0,loop:!0,cursor:"_"}})),z.a.createElement("br",null),z.a.createElement("br",null),z.a.createElement(H.b,{to:"/contact",style:{textDecoration:"none"}},z.a.createElement(V.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary"},"Contact Me")),z.a.createElement(H.b,{to:"/projects",style:{textDecoration:"none"}},z.a.createElement(V.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary"},"Projects")))}function te(){return z.a.createElement("div",null,z.a.createElement(Q,null),z.a.createElement(ee,null))}var ae=a(28),oe=a(32),re=a(85),ne=a(4),ie=a(87),ce=a(80),se=a(84),le=a(82),ue=a(81),de=a(83),me=a(86),he=Object(ne.a)({root:{backgroundColor:"#F7931E",borderColor:"#F7931E",color:"white",fontFamily:[].join(","),"&:hover":{backgroundColor:"#F78200",borderColor:"#F7931E",boxShadow:"none"}}})(V.a),fe=Object(W.a)({root:{maxWidth:"100%",background:"#303030",color:"#F7931E"},title:{fontSize:"2em",fontWeight:"600",color:"#F7931E"},description:{color:"white"},media:{height:"30vh"},actions:{float:"right"},content:{},hardware:{color:"#FF1B1C",borderColor:"#FF1B1C"},software:{color:"#4fbbd6",borderColor:"#4fbbd6"},pcb:{color:"#38A700",borderColor:"#38A700"},oss:{color:"#F7CB15",borderColor:"#F7CB15"},hackathon:{color:"#F7931E",borderColor:"#F7931E"}});function ge(e){var t=fe(),a=e.name,o=e.project;return z.a.createElement(ie.a,{className:t.root},z.a.createElement(H.b,{to:"projects/".concat(a),style:{textDecoration:"none"}},z.a.createElement(ce.a,null,z.a.createElement(ue.a,{className:t.media,image:"static/projects/".concat(a,"/").concat(o.coverImage),title:a}),z.a.createElement(le.a,{className:t.content},z.a.createElement(de.a,{gutterBottom:!0,className:t.title},o.title),z.a.createElement(de.a,{className:t.description},o.description)))),z.a.createElement(se.a,{className:t.actions},o.tags.hardware&&z.a.createElement(me.a,{variant:"outlined",size:"medium",className:t.hardware,label:"Hardware"}),o.tags.software&&z.a.createElement(me.a,{variant:"outlined",size:"medium",className:t.software,label:"Software"}),o.tags.pcb&&z.a.createElement(me.a,{variant:"outlined",size:"medium",className:t.pcb,label:"PCB Design"}),o.tags.oss&&z.a.createElement(me.a,{variant:"outlined",size:"medium",className:t.oss,label:"Open-Source Library"}),o.tags.hackathon&&z.a.createElement(me.a,{variant:"outlined",size:"medium",className:t.hackathon,label:"Hackathon Project"}),z.a.createElement(H.b,{to:"projects/".concat(a),style:{textDecoration:"none"}},z.a.createElement(he,{size:"medium",color:"primary",variant:"outlined"},"View Project"))))}var pe=window.screen.width<650,be=Object(W.a)((function(e){return{root:{fontWeight:"600",fontSize:"4em",position:"relative",left:"".concat(5,"vw"),width:"".concat(90,"vw"),height:"".concat(94,"vh"),top:"".concat(3,"vh")},title:{color:"#F7931E",paddingBottom:"3vh"},children:{color:"white",maxWidth:"100%",fontSize:function(e){return e.smallScreen?"0.35em":"0.5em"},display:"block"},outline:{borderColor:"#F7931E"},link:{color:"#38A700"},button:{float:"none",marginBottom:"2em",fontWeight:"600",fontSize:function(e){return e.smallScreen?"0.3em":"0.5em"},marginRight:"2em",color:"#F7931E","&:hover":{borderColor:"#38A700",color:"#38A700"}},linkButton:{float:"none",marginLeft:function(e){return e.smallScreen?"1vw":"5vw"},fontWeight:"600",fontSize:function(e){return e.smallScreen?"0.2em":"0.4em"},marginRight:"2em",color:"#38A700",borderColor:"#38A700","&:hover":{borderColor:"#F7931E",color:"#F7931E"}}}}));function we(e){var t=be({smallScreen:pe});return Object(A.useEffect)((function(){document.title="".concat(e.title," | Jeremy Kanovsky")})),z.a.createElement("div",null,z.a.createElement(Q,null),z.a.createElement("div",{className:t.root},z.a.createElement("div",{className:t.title},e.title,e.data&&e.data.github&&z.a.createElement(V.a,{className:t.linkButton,classes:{outlined:t.outline},variant:"outlined",color:"primary",href:e.data.github,target:"_blank"},"> View on GitHub"),e.data&&e.data.pypi&&z.a.createElement(V.a,{className:t.linkButton,classes:{outlined:t.outline},variant:"outlined",color:"primary",href:e.data.pypi,target:"_blank"},"> View on PyPi"),e.data&&e.data.npm&&z.a.createElement(V.a,{className:t.linkButton,classes:{outlined:t.outline},variant:"outlined",color:"primary",href:e.data.NPM,target:"_blank"},"> View on NPM")),z.a.createElement("div",{className:t.children},e.children),z.a.createElement("br",null),z.a.createElement(H.b,{to:"/projects",style:{textDecoration:"none"}},z.a.createElement(V.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary"},"< Projects"))))}var ve="/static/projects",Ee=window.screen.width<650,ye=Object(W.a)((function(e){return{grid:{width:"100%",marginTop:function(e){return e.space?"3vh":0}},image:{width:"100%"}}}));function ke(e){var t=e.images,a=ye(e),o=12/t.length,r=Ee?12:o;return z.a.createElement("div",null,z.a.createElement(re.a,{container:!0,spacing:1,className:a.grid},t.map((function(e){return z.a.createElement(re.a,{item:!0,xs:r,key:e},z.a.createElement("img",{className:a.image,src:e,alt:""}))}))))}var je="Hexapod",Te="hexapod_isometric.JPG",Pe="This was the final project for Tufts ME-134 (Advanced Robotics) in Fall 2020. We were tasked with creating a robot that could navigate an obstacle course (containing a tunnel, wall, and rough terrain) autonomously.",Ie={software:!0,hardware:!0},_e={github:"https://github.com/0xJeremy/me134/tree/master/final"};function Ce(){return z.a.createElement(we,{title:je,data:_e},z.a.createElement(ke,{images:["".concat(ve,"/hexapod/hexapod_isometric.JPG"),"".concat(ve,"/hexapod/hexapod_2.jpg"),"".concat(ve,"/hexapod/hexapod_3.jpg")]}),"This robot was made for the final project of Tufts ME-134 (Advanced Robotics) in the Fall of 2020. The prompt was to create a robot capable of navigating an obstacle course (comprised of a tunnel to go through, a wall to climb over, and a patch of rough terrain) autonomously. This hexapod uses a Raspberry Pi 4 (and camera) to perform the onboard processing and 18 high-torque servo motors for actuation. It did pretty well on the wall.",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/hexapod/hexapod_1.jpg"),"".concat(ve,"/hexapod/hexapod_4.jpg"),"".concat(ve,"/hexapod/hexapod_5.jpg")]}),z.a.createElement(ke,{images:["".concat(ve,"/hexapod/hexapod_6.jpg"),"".concat(ve,"/hexapod/hexapod_7.jpg"),"".concat(ve,"/hexapod/hexapod_8.jpg")]}))}var xe="Crawling Robot",Je="crawler_isometric.JPG",Fe='This robot was build as a homework assignment for Tufts ME-134 (Advanced Robotics) in Fall 2020. The assignment was to create a "crawling robot", so we created a modular robot that rolls end over end.',Me={software:!0,hardware:!0},Re={github:"https://github.com/0xJeremy/me134/tree/master/hw5"};function Ne(){return z.a.createElement(we,{title:xe,data:Re},z.a.createElement(ke,{images:["".concat(ve,"/crawler/crawler_isometric.JPG"),"".concat(ve,"/crawler/crawler_1.JPG"),"".concat(ve,"/crawler/crawler_3.jpg")]}),"This robot was made as a homework project for Tufts ME-134 (Advanced Robotics) in the Fall of 2020. The prompt was to create a \"crawling robot\" (defined as: a robot which uses it's entire body to locomote). This robot rolls segments of it's body over one another in series to create a crawling / rolling motion. It is modular with each segment containing a piece of the robot (Raspberry Pi Zero, 2x voltage regulators, 2x servo drivers, 3x LiPo batteries).",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/crawler/crawler_4.jpg"),"".concat(ve,"/crawler/crawler_5.jpg"),"".concat(ve,"/crawler/crawler_6.jpg")]}),z.a.createElement(ke,{images:["".concat(ve,"/crawler/crawler_2.jpg"),"".concat(ve,"/crawler/crawler_7.jpg")]}))}var Be="Ballbot",Ge="ballbot_isometric.JPG",Se="This robot was build as a homework assignment for Tufts ME-134 (Advanced Robotics) in Fall 2020. The assignment was to create a balancing robot, so we created a robot that balances on a basketball.",Ae={software:!0,hardware:!0},ze={github:"https://github.com/0xJeremy/me134/tree/master/hw4/v2"};function De(){return z.a.createElement(we,{title:Be,data:ze},z.a.createElement(ke,{images:["".concat(ve,"/ballbot/ballbot_isometric.JPG"),"".concat(ve,"/ballbot/ballbot_2.jpg"),"".concat(ve,"/ballbot/ballbot_3.jpg")]}),'This robot was made as a homework project for Tufts ME-134 (Advanced Robotics) in the Fall of 2020. The prompt was to create a "balancing robot" (with the requirement it must be able to freely rotate at least 180 degrees around any one axis). Theorizing that three axes was more impressive than one axis, we built a balancing "ballbot" -- a robot that balances on top of a basketball. It uses a sensor fusion algorithm to combine the input of 3 gyroscopic and acceleration sensors (2x MPU-6050s, and 1 Bosch BNO-055 sensor).',z.a.createElement(ke,{space:!0,images:["".concat(ve,"/ballbot/ballbot_1.JPG"),"".concat(ve,"/ballbot/ballbot_4.jpg"),"".concat(ve,"/ballbot/ballbot_5.jpg")]}))}var Oe="Drawing Robot",He="drawing_isometric.JPG",Le="This robot was build as a homework assignment for Tufts ME-134 (Advanced Robotics) in Fall 2020. The assignment was to create a robotic arm capable of writing our initials.",We={software:!0,hardware:!0},qe={github:"https://github.com/0xJeremy/me134/tree/master/hw3/v2"};function Ve(){return z.a.createElement(we,{title:Oe,data:qe},z.a.createElement(ke,{images:["".concat(ve,"/drawing_robot/drawing_isometric.JPG"),"".concat(ve,"/drawing_robot/drawing_robot_1.jpg"),"".concat(ve,"/drawing_robot/drawing_robot_2.jpg")]}),'This robot was made as a homework project for Tufts ME-134 (Advanced Robotics) in the Fall of 2020. The prompt was to create a robotic arm capable of writing our initials. This robot arm (which is the second iteration, the first being a standard 3-DOF vertical arm) is capable of writing arbitrary shapes and letters. Instead of hard-coding the positions of the arms for each point of our initials, I wrote an SVG parser and pather in Python that dissects any arbitrary SVG file and generates "g-code" (really just tuples of position for motors 1 and 2) which the arm them reads through and executes. It was pretty successful.',z.a.createElement(ke,{space:!0,images:["".concat(ve,"/drawing_robot/drawing_robot_3.jpg"),"".concat(ve,"/drawing_robot/drawing_robot_4.jpg"),"".concat(ve,"/drawing_robot/drawing_robot_5.jpg")]}))}var Ue="Analog Clock",Ke="clock_isometric.JPG",Qe="This robot was build as a homework assignment for Tufts ME-134 (Advanced Robotics) in Fall 2020. The assignment was to create an analog clock, so we created a (digital) analog clock.",Ze={software:!0,hardware:!0},Xe={github:"https://github.com/0xJeremy/me134/tree/master/hw2"};function $e(){return z.a.createElement(we,{title:Ue,data:Xe},z.a.createElement(ke,{images:["".concat(ve,"/clock/clock_isometric.JPG"),"".concat(ve,"/clock/clock_1.jpg"),"".concat(ve,"/clock/clock_3.jpg")]}),'This robot was made for a homework project as part of Tufts ME-134 (Advanced Robotics) in the Fall of 2020. The prompt was to create an analog clock. Twisting the prompt slightly, I chose to make a "digital" analog clock. This clock comprises 28 individual micro-servo motors controlled by 2 servo drivers being controlled by a Raspberry Pi Zero.',z.a.createElement(ke,{space:!0,images:["".concat(ve,"/clock/clock_4.jpg"),"".concat(ve,"/clock/clock_5.jpg")]}))}var Ye="LED Display",et="led_isometric.JPG",tt="This robot was build as a homework assignment for Tufts ME-134 (Advanced Robotics) in Fall 2020. The assignment was to create a human-interface robot, so we made an interactive display.",at={software:!0,hardware:!0},ot={github:"https://github.com/0xJeremy/me134/tree/master/hw6"};function rt(){return z.a.createElement(we,{title:Ye,data:ot},z.a.createElement(ke,{images:["".concat(ve,"/led/led_isometric.JPG"),"".concat(ve,"/led/led_3.jpg"),"".concat(ve,"/led/led_2.jpg")]}),"This robot was made for a homework project as part of Tufts ME-134 (Advanced Robotics) in the Fall of 2020. The prompt was to create a robot that interacts with a human by using computer vision to take input. The robot must respond to a number of different fundamental cues (such as head position, or hand position). We chose to build a large LED display (human for scale) made up of 300 individually addressible LEDs. It used a camera to enable the user to play PONG by waving their hands in the air, or snake by moving their head relative to the camera. Because the Raspberry Pi (which is driving the display) could not be loaded with the proper libraries to perform hand-detection, I built a real-time image streamer that sent data from my laptop (which could process the images) to the Raspberry Pi.",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/led/led_1.jpg"),"".concat(ve,"/led/led_4.jpg")]}))}var nt="Daedalus BLDC Motor Controller",it="Daedalus_Brackets_Board.png",ct="This is a custom PCB designed to drive high-speed, high-power brushless motors. It includes current monitoring and positional feedback, turning the brushless motor into a high-torque servo motor.",st={pcb:!0};function lt(){return z.a.createElement(we,{title:nt},z.a.createElement(ke,{images:["".concat(ve,"/daedalus/Daedalus_Brackets_Board.png"),"".concat(ve,"/daedalus/Front.jpg")]}),"This PCB is the Daedalus High-Power BLDC Motor Controller. Using the on-board magnetic encoder it can turn a regular brushless DC motor into a high-power, ultra high-precision servo motor. It uses CAN bus communication, and cable be daisy chained together with other Daedalus controllers. This is one of the first PCBs I have designed, and I expect to iterate on it in the future.",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/daedalus/Board_Layout.png")]}))}var ut="Helios Pi-Hat Robot Controller",dt="Helios_Board.png",mt="This is a custom PCB Raspberry Pi hat designed to enable CAN bus communication and high-precision servo control. It can also supply power to the Pi.",ht={pcb:!0};function ft(){return z.a.createElement(we,{title:ut},z.a.createElement(ke,{images:["".concat(ve,"/helios/Helios_Board.png"),"".concat(ve,"/helios/Board_Layout.png")]}),"This PCB is the Helios Pi-Hat Robot Controller. It is a companion board to the Daedalus Motor controller. It provides 4x high-speed CAN bus lines (through the 2x on-board STM32 microprocessors), along with a host of other features such as absolute orientation sensing (by providing sockets for a Bosch BNO-055 sensor), breakouts for 12 servo motors (6x high-precision, 6x standard), and by providing up to 3.5 amps to power the Raspberry Pi host. This is one of the first PCBs I've designed, and I expect to iterate on it in the future.")}var gt="Icarus Power Distribution Board",pt="Icarus_Board.png",bt="This is a custom PCB power distribution board designed for use with the Daedalus BLDC motor controller for driving high-current motors and the Helios Raspberry Pi hat. It has 6 power breakouts.",wt={pcb:!0};function vt(){return z.a.createElement(we,{title:gt},z.a.createElement(ke,{images:["".concat(ve,"/icarus/Icarus_Board.png"),"".concat(ve,"/icarus/Front.jpg")]}),"This PCB was made as a companion board to the Daedalus motor controller, and provides 6x high-current power breakouts from a single source. Along with providing power, it has a host of other features like power shutoff, current draw monitoring, and temperature sensing. It communicates with the CAN bus protocol and can be daisy-chained with a number of other devices (including the Helios Pi-Hat and the Daedalus Motor Controller). This is one of the first PCBs I've made and I expect to iterate on it in the future.",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/icarus/Board_Layout.png")]}))}var Et="FireEye",yt="fireeye.png",kt="FireEye is an open-source real-time socket communication library designed for low-latency video streaming from remote sources. It was designed to steam a Raspberry Pi camera to a webpage.",jt={software:!0,oss:!0},Tt={github:"https://github.com/0xJeremy/FireEye",pypi:"https://pypi.org/project/FireEye/",npm:"https://www.npmjs.com/package/fireeye"};function Pt(){return z.a.createElement(we,{title:Et,data:Tt},"FireEye is an open-source cross-language (Python / Javascript via Node.js) UNIX socket communication library. It was originally build and optimized for streaming video from a Raspberry Pi camera to remote devices in real-time, but has since been generalized to work for arbitrary communication. It is extremely easy to use and handles almost all of the setup for the user. It was later replaced with socket.engine (which is newer and better for a number of reasons).",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/fireeye/fireeye.png")]}))}var It="Tufts BCI Team",_t="bci.png",Ct="As part of the Tufts BCI (Brain-Computer Interface) team, I created a user-interface for viewing real-time brain activity on a 3D model. Data can be streamed from a remote sensor to the page.",xt={software:!0};function Jt(){return z.a.createElement(we,{title:It},"The Tufts BCI Team (Brain-Computer Interface Team) is a cross-major team working on new interfaces for computers, devices, and robots. It uses hardware from OpenBCI and some custom software we've written. I was responsible for creating a user-interface for streaming, in real-time, data from remote sensors to an interface which would display the brain activity onto a 3D model of the brain. This interface I originally wrote in vanilla HTML/CSS/Javascript, but later I re-wrote it in React.js. I also made the team logo (below) which I an unreasonably proud of.",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/bci/bci.png")]}))}var Ft="MLE (My Little Eye)",Mt="mle.png",Rt="MLE (My Little Eye) was part of a hackathon project at HackMIT where we created a fleet of semi-autonomous robots that track down lost objects for people with vision and mobility impairments.",Nt={software:!0,hardware:!0,hackathon:!0},Bt={github:"https://github.com/0xJeremy/MLE"};function Gt(){return z.a.createElement(we,{title:Ft,data:Bt},z.a.createElement(ke,{images:["".concat(ve,"/mle/mle.png"),"".concat(ve,"/mle/mle3.png")]}),"MLE (My Little Eye) was a hackathon project for HackMIT in 2019. The goal of this project was to create a tool to help the vision and mobility impaired by helping to find lost objects, or just finds objects in the environment. It did this by deploying a small fleet of autonomous robots (based on the \"Fleet\" swarm robot design) armed with cameras and the vision APIs from Microsoft Azure. The user-interface allowed users to say the name of an object and using Google speech recognition would command the robots to begin hunting for the object. The camera feed would live-stream to the user (along with robot controls), and once an object is found would report it's position to the user, along with the path the robot took to get there. We didn't win, but we got some great sweatshirts.",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/mle/mle2.png")]}))}var St="socket.engine",At="socketengine.png",zt="socket.engine is the open-source successor to FireEye. It enabled real-time communication between devices that is optimized to be light-weight and very fast.",Dt={software:!0,oss:!0},Ot={github:"https://github.com/0xJeremy/socket.engine",pypi:"https://pypi.org/project/socket.engine/",npm:"https://www.npmjs.com/package/socket.engine"};function Ht(){return z.a.createElement(we,{title:St,data:Ot},z.a.createElement(ke,{images:["".concat(ve,"/socketengine/socketengine.png")]}),"socket.engine is the successor to FireEye. It is a real-time bi-directional UNIX socket communication library built on top of ZMQ sockets. It operates at extremely high speeds and is even capable of streaming full video across the sockets. It was originally designed for use in robots, but provides an interface to stream arbitrary data across arbitrary devices. It was written in Python and Javascript (via Node.js). It also holds the distinction of being my most successful project on GitHub. The source is published on GitHub, and it is available for download on PIP via PyPi, and on NPM.")}var Lt="viz.engine",Wt="vizengine.png",qt="viz.engine is an open-source library and framework for robot user-interfaces. It is designed to give real-time feedback about the state of the robot and provide a control interface.",Vt={software:!0,oss:!0},Ut={github:"https://github.com/0xJeremy/viz.engine"};function Kt(){return z.a.createElement(we,{title:Lt,data:Ut},z.a.createElement(ke,{images:["".concat(ve,"/vizengine/vizengine.png")]}),"viz.engine is an open-source React.js powered interface for controlling robots. It was originally designed to help operators handle large swarms of robots simultaneously by streaming real-time information about the state of each system, and providing a unified and straight-forward method of operating all the bots. It uses the socket.engine library for communication between the robots and the server (which allows for standard data to be streamed, as well as real-time video feeds from each robot).",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/vizengine/dashboard.png")]}))}var Qt="ctrl.engine",Zt="ctrlengine.png",Xt="ctrl.engine is an open-source robotics library. It provides various tools in Python to make writing software for robotics easier and faster. It gives boilerplate multi-threaded code to multiple APIs and image processing tools.",$t={software:!0,oss:!0},Yt={github:"https://github.com/0xJeremy/ctrl.engine"};function ea(){return z.a.createElement(we,{title:Qt,data:Yt},z.a.createElement(ke,{images:["".concat(ve,"/ctrlengine/ctrlengine.png")]}),"ctrl.engine is an open-source robotics library written in Python. It was designed to provide a common set of tools to quickly prototype robots (specifically those running on a Raspberry Pi, but in theory is multiplatform). It provides boilerplate multi-threaded code for a number of web-APIs, as well as numerous computer vision examples. It also supports a number of input devices like xbox controllers, and provides standard implementations of common algorithms (like PID controllers and signal filters).")}var ta=Object(W.a)((function(e){return{link:{color:"#4fbbd6"}}})),aa="Meteorite Visualizer",oa="meteorites.png",ra="This is a meteorite impact visualizer made for COMP-177 (Data Visualization) at Tufts in Spring 2020.",na={software:!0},ia={github:"https://github.com/0xJeremy/Meteorite-Visualizer/"};function ca(){var e=ta();return z.a.createElement(we,{title:aa,data:ia},z.a.createElement(ke,{images:["".concat(ve,"/meteorites/meteorites.png")]}),"This website was made as the final project in Tufts COMP-177 Data Visualization in the Spring of 2020. The prompt was to create a website to display a dataset in a number of different ways, and to allow the user to explore the dataset. We used a dataset provided by NASA which lists all the known meteorite impacts on Earth dating back to the 1800s. We built the site with React.js and D3.js. It can be viewed live at"," ",z.a.createElement("a",{href:"http://www.lab84.org/",target:"_blank",rel:"noopener noreferrer",className:e.link},"lab84.org"),".")}var sa="Raspberry Pi Pico Oscilloscope",la="pico_oscilloscope.png",ua="This is an open-source project to turn the $4 Raspberry Pi Pico into a (reasonable) powerful 4-channel oscilloscope using the onboard analog to digital converters.",da={software:!0},ma={github:"https://github.com/0xJeremy/Pico-Oscilloscope"};function ha(){return z.a.createElement(we,{title:sa,data:ma},z.a.createElement(ke,{images:["".concat(ve,"/pico_oscilloscope/repo_logo.png")]}),"As the final project for Tufts ME-193 MPP (Microcontroller Programming Projects) in the Spring of 2021, I turned the $4 Raspberry Pi Pico into a (reasonably) powerful 4-channel oscilloscope using the onboard analog to digital converters. The Pico streams the ADC readings over a USB to a host device (either a Raspberry Pi or any computer), which displays the data in a webpage. The idea being this project mimics the functionality of OctoPrint (the cloud 3D printer manager software) but for an Oscilloscope. This would make its use ideal in makerspaces or shared electronics labs. The webpage was written in React.js using Plot.js. The code on the Pico uses both cores and was written to run as quickly as possible in C.",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/pico_oscilloscope/pico_oscilloscope.png")]}))}var fa="Drivable Couch",ga="couch.png",pa="This is a project done as part of the Tufts Robotics club in which we built a drivable, remote-controlled couch. It's pretty much exactly what it sounds like.",ba={software:!0,hardware:!0};function wa(){return z.a.createElement(we,{title:fa},z.a.createElement(ke,{images:["".concat(ve,"/couch/couch.png"),"".concat(ve,"/couch/couch2.jpeg")]}),"This is a robotic couch. It is remote-controlled via an xbox controller. It can carry three people. It's exactly what it sounds like, and is a ton of fun. This project was made with the Tufts Robotics Club, and was one of my first large-scale robotics projects. It was built using FIRST robotics hardware, and programmed in C++. At one point we had an actual couch on it, but due to storage problems it had to be thrown out.")}var va="Autodrive",Ea="autodrive.jpeg",ya="This is a project done for ME-84 (Intro. Robotics & Mechatronics) in Fall 2018. This robot drives autonomously using image processing with markers on the ground.",ka={software:!0,hardware:!0};function ja(){return z.a.createElement(we,{title:va},z.a.createElement(ke,{images:["".concat(ve,"/autodrive/autodrive.jpeg"),"".concat(ve,"/autodrive/autodrive_1.JPG")]}),"This project was made as a homework assigmnet for Tufts ME-84 (Intro. Robotics & Mechatronics) in Fall of 2018. The assignment was to use image processing to make a line following robot. We did this by pointing an OpenMV camera facing downwards and using canny edge-detection to find the lines on the table. We also used a PyBoard v2 to control the servo motors attached to the car (acting as drive motors).",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/autodrive/autodrive_2.JPG"),"".concat(ve,"/autodrive/autodrive_3.JPG")]}))}var Ta="Fleet",Pa="fleet.png",Ia="This project is an open-source hardware platform for developing robotics software. It is intended to be a low-cost, modular swarm robotic system to test swarm algorithms.",_a={software:!0,hardware:!0},Ca={github:"https://github.com/0xJeremy/fleet"};function xa(){return z.a.createElement(we,{title:Ta,data:Ca},z.a.createElement(ke,{images:["".concat(ve,"/fleet/fleet.png"),"".concat(ve,"/fleet/fleet2.png"),"".concat(ve,"/fleet/fleet3.jpeg")]}),'"Fleet" is a series of small, modular robots I made as an open-source hardware platform for developing swarm robotics software. It is intended to be a low cost solution for labs, researchers, and hobbiests to experiment with cutting edge swarm algorithms. Each robot is equipped with a Raspberry Pi, 2x DC motors with encoders, Raspberry Pi camera, and batteries to last several hours. Newer versions also have front and back facing time of flight distance sensors.',z.a.createElement(ke,{space:!0,images:["".concat(ve,"/fleet/fleet4.jpeg"),"".concat(ve,"/fleet/fleet5.JPG")]}))}var Ja="Dum-E IoT Arms",Fa="dume_arms.jpeg",Ma="These internet-enabled robotic arm swarm was made at the MakeHarvard hackathon in 2019. They were made to be an educational tool for teaching introductory robotics for universities.",Ra={software:!0,hardware:!0,hackathon:!0},Na={github:"https://github.com/0xJeremy/Dum-E-IOT"};function Ba(){return z.a.createElement(we,{title:Ja,data:Na},z.a.createElement(ke,{images:["".concat(ve,"/dume_arms/dume_arms.jpeg"),"".concat(ve,"/dume_arms/dume_arms_1.JPG")]}),"The Dum-E IoT Arms (Dum-E being the name of the robotic arm Tony Stark keeps in his workshop, of course) is a project made at the MakeHarvard hackathon in 2019. We made them to be an educational teaching tool for univresity students to learn about the basics of IoT, robotics, and fabrication. We used them briefly in our university robotics club to teach some of these topics after we had made the prototypes. The arms can be controlled by a single centralized web-server and use ESP8266s to stream instructions from the internet.",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/dume_arms/dume_arms_2.JPG"),"".concat(ve,"/dume_arms/dume_arms_3.JPG")]}))}var Ga="LEGO Robots",Sa="lego.jpeg",Aa="These are a series of LEGO robots made for ME-84 (Intro. Robotics & Mechatronics) in Fall 2018 at Tufts University.",za={software:!0,hardware:!0};function Da(){return z.a.createElement(we,{title:Ga},z.a.createElement(ke,{images:["".concat(ve,"/lego/lego.jpeg"),"".concat(ve,"/lego/iot_arms_1.JPG"),"".concat(ve,"/lego/iot_arms_2.JPG"),"".concat(ve,"/lego/iot_arms_4.JPG")]}),"These are a series of robots made for Tufts ME-84 (Intro. Robotics & Mechatronics) in the Fall of 2018. Each one was a homework assignment, and all the robots were programmed in LabVIEW. The assignments include making a kinetic art sculpture, an wirelessly-communicating clock, a childrens toy, and a remote-control robotic arm. All these robots used the LEGO EV3 platform.",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/lego/clock_1.JPG"),"".concat(ve,"/lego/clock_3.JPG")]}),z.a.createElement(ke,{images:["".concat(ve,"/lego/towers_1.JPG"),"".concat(ve,"/lego/towers_2.JPG")]}),z.a.createElement(ke,{images:["".concat(ve,"/lego/gear_1.JPG"),"".concat(ve,"/lego/gear_2.JPG")]}))}var Oa="QBot",Ha="qbot.jpeg",La="QBot was a robot made as part of ME-84 (Intro. Robotics & Mechatronics) in Fall 2018. It uses image recognition to respond to commands from QR codes.",Wa={software:!0,hardware:!0};function qa(){return z.a.createElement(we,{title:Oa},z.a.createElement(ke,{images:["".concat(ve,"/qbot/qbot.jpeg"),"".concat(ve,"/qbot/bot_1.JPG")]}),'This robot was a homework project from Tufts ME-84 (Intro. Robotics & Mechatronics). The assignment was to create a robot that takes its cues for movement from a camera (computer vision). We created a driving robot that uses an OpenMV camera to recognize QR tags representing "move forward", "move backward", "turn left", "turn right", "stop", etc. The OpenMV camera commanded a PyBoard v2 which in turn sent commands to the two servo motors (here being used as drive motors).',z.a.createElement(ke,{space:!0,images:["".concat(ve,"/qbot/bot_2.JPG"),"".concat(ve,"/qbot/bot_3.JPG")]}))}var Va="\xb5Jumbo",Ua="ujumbo.jpeg",Ka='\xb5Jumbo was an entry to the Trinity International Robotic Firefighting competition in the "small robot" category.',Qa={software:!0,hardware:!0};function Za(){return z.a.createElement(we,{title:Va},z.a.createElement(ke,{images:["".concat(ve,"/ujumbo/ujumbo.jpeg"),"".concat(ve,"/ujumbo/jumbo_3.JPG")]}),'\xb5Jumbo was an entry to the Trinity International Robotic Firefighting competition in the "smallest robot" category. Unfortunately, that year it was only the second smallest robot (losing by a matter of several cubic centimeters). This robot was to navigate a maze autonomously and extinguish a fire (a candle). It was also required to recognize a tone played as the starting signal (thus the microphone and filtering circuit on the top of the robot). We equipped this robot with an Arduino Nano, wheels encoders, and multiple time-of-flight distance sensors placed around the robot.',z.a.createElement(ke,{space:!0,images:["".concat(ve,"/ujumbo/jumbo_2.JPG"),"".concat(ve,"/ujumbo/jumbo_4.JPG")]}))}var Xa="Firefighting Robot",$a="firefighting.jpeg",Ya="This robot was our entry into the Trinity International Robotic Firefighting Competition.",eo={software:!0,hardware:!0};function to(){return z.a.createElement(we,{title:Xa},z.a.createElement(ke,{images:["".concat(ve,"/firefighting/firefighting.jpeg"),"".concat(ve,"/firefighting/firefighting_1.JPG")]}),"This robot is one of the first I've made from scratch, and was made for the Trinity International Robotic Firefighting Competition in the Spring of 2018. It's task was to listen for a tone, and when signaled would begin to autonomously navigate a maze and extinguish a fire. It was powered by a Raspberry Pi Zero and was surrounded by ultrasonic distance sensors to detect the walls of the maze.",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/firefighting/firefighting_2.JPG")]}))}var ao="Expo Digitizer",oo="expo_digitizer.jpeg",ro="This is an attachment for an Expo marker to turn it into an active digitizer.",no={software:!0,hardware:!0,hackathon:!0};function io(){return z.a.createElement(we,{title:ao},z.a.createElement(ke,{images:["".concat(ve,"/expo_digitizer/expo_digitizer.jpeg"),"".concat(ve,"/expo_digitizer/expo_digitizer_2.jpeg")]}),"This project was made as part of Tufts Polyhack in Fall 2017. It is an attachment for an Expo marker to turn it into an active digitizer. Using an accelerometer mounted to the marker, and a button to detect when it makes contact with the board, this marker could generate a PDF of the hardwriting of the user.")}var co="HobbesBot",so="hobbesbot.jpeg",lo='This is a robotic puppet with 7 degrees of freedom called "HobbesBot" after the tiger in Calvin and Hobbes. It was the final project from ME-84 (Intro. Robotics & Mechatronics) in Fall 2018 at Tufts.',uo={software:!0,hardware:!0};function mo(){return z.a.createElement(we,{title:co},z.a.createElement(ke,{images:["".concat(ve,"/hobbesbot/hobbesbot.jpeg"),"".concat(ve,"/hobbesbot/hobbes_2.JPG")]}),"HobbesBot is the final project from Tufts ME-84 (Intro. Robotics & Mechatronics). The assignment was to build an animatronic puppet that takes cues from a human, and can interact with them. We created Hobbes, the tiger from Calvin & Hobbes, as a 7 degrees-of-freedom robot equipped with computer vision. Using a Raspberry Pi and a camera (along with half of Google Cloud Platforms vision APIs), Hobbes determines the users mood and reacts accordingly. As a cherry on top, we made two IoT enabled LED cubes to light up when Hobbes detects the user is happy.",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/hobbesbot/hobbes_1.JPG"),"".concat(ve,"/hobbesbot/hobbes_3.JPG")]}))}var ho="Quadcopter UAV",fo="quadcopter.jpeg",go="This is a quadcopter UAV made with the Tufts MAKE club. It was originally designed to be semi-autonomous.",po={software:!0,hardware:!0};function bo(){return z.a.createElement(we,{title:ho},z.a.createElement(ke,{images:["".concat(ve,"/quadcopter/quadcopter.jpeg"),"".concat(ve,"/quadcopter/quadcopter_2.jpeg")]}),"This quadcopter was built with the Tufts MAKE club. The project was to build a quadcopter from scratch, and program it to fly semi-autonomously using computer vision. Unfortunately, due to semester time constraints, we were unable to finish the autonomous portion of the build, but it flew pretty well.")}var wo="Electric Longboard",vo="longboard.jpeg",Eo="This is an electric longboard made with the Tufts MAKE club.",yo={hardware:!0};function ko(){return z.a.createElement(we,{title:wo},z.a.createElement(ke,{images:["".concat(ve,"/longboard/longboard.jpeg"),"".concat(ve,"/longboard/longboard_1.jpeg")]}),"This was a project with the Tufts MAKE club in which we built an electric longboard. It was a pretty straight forward project, and the end result worked suprisingly well.")}var jo='"Banned From Vegas"',To="vegas.jpeg",Po="This is an automatic card-dealing and sorting robot made at MakeHarvard 2020. It uses computer vision to detect and sort the cards (and a little bit of card-counting to make sure you always win).",Io={hardware:!0,software:!0,hackathon:!0},_o={github:"https://github.com/0xJeremy/MakeHarvard2020"};function Co(){return z.a.createElement(we,{title:jo,data:_o},z.a.createElement(ke,{images:["".concat(ve,"/vegas/vegas.jpg"),"".concat(ve,"/vegas/vegas2.jpeg")]}),'"Banned From Vegas" is an automatic card-dealing and sorting robot made at MakeHarvard 2020. It uses computer vision to detect and sort a deck of cards (and with a little bit of card-counting thrown in can make the operator always win at cards). It was built over the course of 24 hours and was powered by a Raspberry Pi and a large number of servos and motors. The end result worked shockingly well.',z.a.createElement(ke,{space:!0,images:["".concat(ve,"/vegas/vegas3.jpeg"),"".concat(ve,"/vegas/vegas4.jpeg")]}))}var xo='"Space Jam": Space Printer',Jo="spaceprinter.JPG",Fo="This is a 3D printer designed to be used in zero-gravity (such as on the ISS). it was made as a senior design project at Tufts in the Fall of 2020 for Professor Doug Matson.",Mo={hardware:!0,software:!0},Ro={github:"https://github.com/0xJeremy/senior-design"};function No(){return z.a.createElement(we,{title:xo,data:Ro},z.a.createElement(ke,{images:["".concat(ve,"/space_printer/spaceprinter.JPG")]}),"This is a 3D printer designed to be used in *space* (specifically, zero-gravity environments, such as on the International Space Station). It was built for Professor Douglas Matson for his use in research. We also built the firmware from scratch for this printer given the unique control style and setup of the stepper motors.")}var Bo="STM32 Development Board",Go="devboard.JPG",So="This is a development breakout board for the STM32F405 series microcontroller. I made it to learn about PCB design and embedded microcontroller programming.",Ao={software:!0,pcb:!0};function zo(){return z.a.createElement(we,{title:Bo},z.a.createElement(ke,{images:["".concat(ve,"/devboard/devboard.JPG"),"".concat(ve,"/devboard/devboard_5.JPG")]}),"This PCB is a custom-designed breakout for the STM32F405 series microcontroller. I made it to practice PCB design, and learn about programming embedded microcontrollers from scratch. I designed a custom power-chain for supplying power to the MCU and added breakouts around the side for serial breakouts.",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/devboard/devboard_4.JPG"),"".concat(ve,"/devboard/devboard_3.JPG")]}),z.a.createElement(ke,{images:["".concat(ve,"/devboard/devboard_1.JPG"),"".concat(ve,"/devboard/devboard_2.JPG")]}),z.a.createElement(ke,{images:["".concat(ve,"/devboard/devboard_layout.JPG")]}))}var Do="Raspberry Pi Pico Servo Driver",Oo="pico_pca.JPG",Ho="This is a PCB daughterboard for the Raspberry Pi Pico that carries a PCB9685 16 channel servo-driver.",Lo={software:!0,pcb:!0};function Wo(){return z.a.createElement(we,{title:Do},z.a.createElement(ke,{images:["".concat(ve,"/pico_pca/pico_pca.JPG"),"".concat(ve,"/pico_pca/pico_pca_1.JPG"),"".concat(ve,"/pico_pca/pico_pca_2.JPG")]}),"This PCB is a breakout board for the Raspberry Pi Pico. It carries a PCA9685 16-channel PWM driver chip, and provides breakouts for 16 servos. It also includes breakouts for Stemma QWIIC connectors on the side of the board.",z.a.createElement(ke,{space:!0,images:["".concat(ve,"/pico_pca/pico_pca_3.JPG"),"".concat(ve,"/pico_pca/pico_pca_4.JPG")]}))}var qo="Surge PL",Vo="surge.png",Uo="Surge is a small, Ruby-esque programming language I've build from scratch in Python.",Ko={software:!0},Qo={github:"https://github.com/0xJeremy/surge"};function Zo(){return z.a.createElement(we,{title:qo,data:Qo},z.a.createElement(ke,{images:["".concat(ve,"/surge/surge.png")]}),"Surge is a small programming language I built from scratch. It is an interpreted language, written on top of Python with Ruby like syntax. To my knowledge it is turing complete. As part of this project I build a testing framework inside of Surge to test the capabilities of the language and ensure the parser, lexer, and interpreter were working as expected. It's not a large project, but perhaps one of my more interesting. The source code, test cases, and operational semantics can be viewed on the GitHub project page.")}var Xo={hexapod:o,crawler:r,ballbot:n,drawing_robot:i,clock:c,led:s,daedalus:l,helios:u,icarus:d,fireeye:m,bci:h,mle:f,socketengine:g,vizengine:p,ctrlengine:b,meteorites:w,pico_oscilloscope:v,couch:E,autodrive:y,fleet:k,dume_arms:j,lego:T,qbot:P,ujumbo:I,firefighting:_,expo_digitizer:C,hobbesbot:x,quadcopter:J,longboard:F,vegas:M,space_printer:R,devboard:N,pico_pca:B,surge:G},$o=window.screen.width<650,Yo=Object(W.a)((function(e){return{root:{background:"#202020"},title:{display:"flex",alignItems:"center",flexWrap:"wrap",color:"#F7931E",fontWeight:"600",fontSize:"8vh",paddingBottom:"3vh",paddingTop:"3vh",marginLeft:"1vw"},icon:{fontSize:"1em"},paper:{height:"5vh"},grid:{marginLeft:"".concat(1,"vw"),marginRight:"".concat(1,"vw"),width:"".concat(98,"vw")},hardware:{color:function(e){return e.filter.hardware?"#FF1B1C":"#888888"},borderColor:function(e){return e.filter.hardware?"#FF1B1C":"#888888"},marginLeft:"5vw",marginTop:function(e){return e.smallScreen?"2vh":0}},software:{color:function(e){return e.filter.software?"#4fbbd6":"#888888"},borderColor:function(e){return e.filter.software?"#4fbbd6":"#888888"},marginLeft:"1.5vw",marginTop:function(e){return e.smallScreen?"2vh":0}},pcb:{color:function(e){return e.filter.pcb?"#38A700":"#888888"},borderColor:function(e){return e.filter.pcb?"#38A700":"#888888"},marginLeft:"1.5vw",marginTop:function(e){return e.smallScreen?"2vh":0}},oss:{color:function(e){return e.filter.oss?"#F7CB15":"#888888"},borderColor:function(e){return e.filter.oss?"#F7CB15":"#888888"},marginLeft:"1.5vw",marginTop:function(e){return e.smallScreen?"2vh":0}},hackathon:{color:function(e){return e.filter.hackathon?"#F7931E":"#888888"},borderColor:function(e){return e.filter.hackathon?"#F7931E":"#888888"},marginLeft:"1.5vw",marginTop:function(e){return e.smallScreen?"2vh":0}}}}));var er=Object(W.a)((function(e){return{root:{fontWeight:"600",fontSize:"4em",position:"relative",left:"".concat(5,"vw"),width:"".concat(95,"vw"),height:"".concat(75,"vh"),top:"".concat(15,"vh")},email:{color:"white"},website:{color:"white",paddingTop:"".concat(2,"vh")},github:{color:"white",paddingTop:"".concat(2,"vh")},linkedin:{color:"white",paddingTop:"".concat(2,"vh")},outline:{borderColor:"#F7931E"},link:{color:"#38A700"},button:{float:"none",fontWeight:"600",fontSize:"0.7em",color:"#F7931E","&:hover":{borderColor:"#38A700",color:"#38A700"}}}}));var tr=Object(W.a)((function(e){return{root:{fontWeight:"600",fontSize:"4em",position:"relative",left:"".concat(5,"vw"),width:"".concat(95,"vw"),height:"".concat(75,"vh"),top:"".concat(15,"vh")},text:{color:"white"},outline:{borderColor:"#F7931E"},link:{color:"#38A700"},button:{float:"none",fontWeight:"600",fontSize:"0.7em",marginRight:"2em",color:"#F7931E","&:hover":{borderColor:"#38A700",color:"#38A700"}}}}));O.a.render(z.a.createElement(H.a,null,z.a.createElement(L.c,null,z.a.createElement(L.a,{exact:!0,path:"/",component:te}),z.a.createElement(L.a,{exact:!0,path:"/contact",component:function(){var e=er();return Object(A.useEffect)((function(){document.title="Contact | Jeremy Kanovsky"})),z.a.createElement("div",null,z.a.createElement(Q,null),z.a.createElement("div",{className:e.root},z.a.createElement("div",{className:e.email},"email:"," ",z.a.createElement("a",{href:"mailto:kanovsky.jeremy@gmail.com",rel:"noopener noreferrer",className:e.link},"kanovsky.jeremy@gmail.com")),z.a.createElement("div",{className:e.website},"website: you're here."),z.a.createElement("div",{className:e.github},"github:"," ",z.a.createElement("a",{href:"https://github.com/0xJeremy",target:"_blank",rel:"noopener noreferrer",className:e.link},"github.com/0xJeremy")),z.a.createElement("div",{className:e.linkedin},"linkedin:"," ",z.a.createElement("a",{href:"https://www.linkedin.com/in/jeremy-kanovsky/",target:"_blank",rel:"noopener noreferrer",className:e.link},"linkedin.com/in/jeremy-kanovsky")),z.a.createElement("br",null),z.a.createElement("br",null),z.a.createElement(H.b,{to:"/",style:{textDecoration:"none"}},z.a.createElement(V.a,{className:e.button,classes:{outlined:e.outline},variant:"outlined",color:"primary"},"Home"))))}}),z.a.createElement(L.a,{exact:!0,path:"/projects",component:function(){var e=z.a.useState({software:!0,hardware:!0,pcb:!0,oss:!0,hackathon:!0}),t=Object(S.a)(e,2),a=t[0],o=t[1],r=Yo({filter:a,smallScreen:$o}),n=$o?12:4;Object(A.useEffect)((function(){document.title="Projects | Jeremy Kanovsky"}));var i=function(e){o(Object(oe.a)(Object(oe.a)({},a),{},Object(ae.a)({},e,!a[e])))};return z.a.createElement("div",null,z.a.createElement(Q,null),z.a.createElement("div",{className:r.root},z.a.createElement("div",{className:r.title},"> PROJECTS",z.a.createElement(me.a,{variant:"outlined",label:"Hardware",className:r.hardware,onClick:function(){return i("hardware")}}),z.a.createElement(me.a,{variant:"outlined",label:"Software",className:r.software,onClick:function(){return i("software")}}),z.a.createElement(me.a,{variant:"outlined",label:"PCB Design",className:r.pcb,onClick:function(){return i("pcb")}}),z.a.createElement(me.a,{variant:"outlined",label:"Open-Source Library",className:r.oss,onClick:function(){return i("oss")}}),z.a.createElement(me.a,{variant:"outlined",label:"Hackathon Project",className:r.hackathon,onClick:function(){return i("hackathon")}})),z.a.createElement(re.a,{container:!0,spacing:2,className:r.grid},Object.entries(Xo).map((function(e){var t=Object(S.a)(e,2),o=t[0],r=t[1];return function(e){for(var t=0,o=Object.entries(e.tags);t<o.length;t++){var r=Object(S.a)(o[t],1)[0];if(!a[r])return!1}return!0}(r)?z.a.createElement(re.a,{item:!0,xs:n,key:o},z.a.createElement(ge,{name:o,project:r,key:o})):z.a.createElement("div",null)})))))}}),z.a.createElement(L.a,{exact:!0,path:"/research",component:function(){var e=tr();return Object(A.useEffect)((function(){document.title="Research | Jeremy Kanovsky"})),z.a.createElement("div",null,z.a.createElement(Q,null),z.a.createElement("div",{className:e.root},z.a.createElement("div",{className:e.text},"there will be some stuff here eventually. for now, see"," ",z.a.createElement("a",{href:"static/ME94%20Poster%20Final.pdf",target:"_blank",rel:"noopener noreferrer",className:e.link},"here"),"."),z.a.createElement("br",null),z.a.createElement("br",null),z.a.createElement(H.b,{to:"/",style:{textDecoration:"none"}},z.a.createElement(V.a,{className:e.button,classes:{outlined:e.outline},variant:"outlined",color:"primary"},"Home"))))}}),Object.entries(Xo).map((function(e){var t=Object(S.a)(e,2),a=t[0],o=t[1];return z.a.createElement(L.a,{exact:!0,path:"/projects/".concat(a),key:a,component:o.Component})})),z.a.createElement(L.a,{path:"/",component:te}))),document.getElementById("root"))}},[[43,1,2]]]);
//# sourceMappingURL=main.b1519122.chunk.js.map