(this.webpackJsonppwv3=this.webpackJsonppwv3||[]).push([[0],{43:function(e,t,o){e.exports=o(53)},53:function(e,t,o){"use strict";o.r(t);var a={};o.r(a),o.d(a,"default",(function(){return _e})),o.d(a,"Component",(function(){return _e})),o.d(a,"title",(function(){return ke})),o.d(a,"coverImage",(function(){return je})),o.d(a,"description",(function(){return Te})),o.d(a,"tags",(function(){return Pe})),o.d(a,"data",(function(){return Ie}));var r={};o.r(r),o.d(r,"default",(function(){return Ne})),o.d(r,"Component",(function(){return Ne})),o.d(r,"title",(function(){return Ce})),o.d(r,"coverImage",(function(){return xe})),o.d(r,"description",(function(){return Je})),o.d(r,"tags",(function(){return Fe})),o.d(r,"data",(function(){return Me}));var n={};o.r(n),o.d(n,"default",(function(){return ze})),o.d(n,"Component",(function(){return ze})),o.d(n,"title",(function(){return Re})),o.d(n,"coverImage",(function(){return Be})),o.d(n,"description",(function(){return Ge})),o.d(n,"tags",(function(){return Ae})),o.d(n,"data",(function(){return Se}));var i={};o.r(i),o.d(i,"default",(function(){return qe})),o.d(i,"Component",(function(){return qe})),o.d(i,"title",(function(){return De})),o.d(i,"coverImage",(function(){return Oe})),o.d(i,"description",(function(){return He})),o.d(i,"tags",(function(){return Le})),o.d(i,"data",(function(){return We}));var c={};o.r(c),o.d(c,"default",(function(){return Xe})),o.d(c,"Component",(function(){return Xe})),o.d(c,"title",(function(){return Ve})),o.d(c,"coverImage",(function(){return Ue})),o.d(c,"description",(function(){return Ke})),o.d(c,"tags",(function(){return Qe})),o.d(c,"data",(function(){return Ze}));var s={};o.r(s),o.d(s,"default",(function(){return at})),o.d(s,"Component",(function(){return at})),o.d(s,"title",(function(){return $e})),o.d(s,"coverImage",(function(){return Ye})),o.d(s,"description",(function(){return et})),o.d(s,"tags",(function(){return tt})),o.d(s,"data",(function(){return ot}));var l={};o.r(l),o.d(l,"default",(function(){return st})),o.d(l,"Component",(function(){return st})),o.d(l,"title",(function(){return rt})),o.d(l,"coverImage",(function(){return nt})),o.d(l,"description",(function(){return it})),o.d(l,"tags",(function(){return ct}));var u={};o.r(u),o.d(u,"default",(function(){return ht})),o.d(u,"Component",(function(){return ht})),o.d(u,"title",(function(){return lt})),o.d(u,"coverImage",(function(){return ut})),o.d(u,"description",(function(){return dt})),o.d(u,"tags",(function(){return mt}));var d={};o.r(d),o.d(d,"default",(function(){return wt})),o.d(d,"Component",(function(){return wt})),o.d(d,"title",(function(){return ft})),o.d(d,"coverImage",(function(){return gt})),o.d(d,"description",(function(){return pt})),o.d(d,"tags",(function(){return bt}));var m={};o.r(m),o.d(m,"default",(function(){return Tt})),o.d(m,"Component",(function(){return Tt})),o.d(m,"title",(function(){return vt})),o.d(m,"coverImage",(function(){return Et})),o.d(m,"description",(function(){return yt})),o.d(m,"tags",(function(){return kt})),o.d(m,"data",(function(){return jt}));var h={};o.r(h),o.d(h,"default",(function(){return xt})),o.d(h,"Component",(function(){return xt})),o.d(h,"title",(function(){return Pt})),o.d(h,"coverImage",(function(){return It})),o.d(h,"description",(function(){return _t})),o.d(h,"tags",(function(){return Ct}));var f={};o.r(f),o.d(f,"default",(function(){return Bt})),o.d(f,"Component",(function(){return Bt})),o.d(f,"title",(function(){return Jt})),o.d(f,"coverImage",(function(){return Ft})),o.d(f,"description",(function(){return Mt})),o.d(f,"tags",(function(){return Nt})),o.d(f,"data",(function(){return Rt}));var g={};o.r(g),o.d(g,"default",(function(){return Ot})),o.d(g,"Component",(function(){return Ot})),o.d(g,"title",(function(){return Gt})),o.d(g,"coverImage",(function(){return At})),o.d(g,"description",(function(){return St})),o.d(g,"tags",(function(){return zt})),o.d(g,"data",(function(){return Dt}));var p={};o.r(p),o.d(p,"default",(function(){return Ut})),o.d(p,"Component",(function(){return Ut})),o.d(p,"title",(function(){return Ht})),o.d(p,"coverImage",(function(){return Lt})),o.d(p,"description",(function(){return Wt})),o.d(p,"tags",(function(){return qt})),o.d(p,"data",(function(){return Vt}));var b={};o.r(b),o.d(b,"default",(function(){return Yt})),o.d(b,"Component",(function(){return Yt})),o.d(b,"title",(function(){return Kt})),o.d(b,"coverImage",(function(){return Qt})),o.d(b,"description",(function(){return Zt})),o.d(b,"tags",(function(){return Xt})),o.d(b,"data",(function(){return $t}));var w={};o.r(w),o.d(w,"default",(function(){return io})),o.d(w,"Component",(function(){return io})),o.d(w,"title",(function(){return to})),o.d(w,"coverImage",(function(){return oo})),o.d(w,"description",(function(){return ao})),o.d(w,"tags",(function(){return ro})),o.d(w,"data",(function(){return no}));var v={};o.r(v),o.d(v,"default",(function(){return ho})),o.d(v,"Component",(function(){return ho})),o.d(v,"title",(function(){return co})),o.d(v,"coverImage",(function(){return so})),o.d(v,"description",(function(){return lo})),o.d(v,"tags",(function(){return uo})),o.d(v,"data",(function(){return mo}));var E={};o.r(E),o.d(E,"default",(function(){return wo})),o.d(E,"Component",(function(){return wo})),o.d(E,"title",(function(){return fo})),o.d(E,"coverImage",(function(){return go})),o.d(E,"description",(function(){return po})),o.d(E,"tags",(function(){return bo}));var y={};o.r(y),o.d(y,"default",(function(){return jo})),o.d(y,"Component",(function(){return jo})),o.d(y,"title",(function(){return vo})),o.d(y,"coverImage",(function(){return Eo})),o.d(y,"description",(function(){return yo})),o.d(y,"tags",(function(){return ko}));var k={};o.r(k),o.d(k,"default",(function(){return xo})),o.d(k,"Component",(function(){return xo})),o.d(k,"title",(function(){return To})),o.d(k,"coverImage",(function(){return Po})),o.d(k,"description",(function(){return Io})),o.d(k,"tags",(function(){return _o}));var j={};o.r(j),o.d(j,"default",(function(){return Bo})),o.d(j,"Component",(function(){return Bo})),o.d(j,"title",(function(){return Jo})),o.d(j,"coverImage",(function(){return Fo})),o.d(j,"description",(function(){return Mo})),o.d(j,"tags",(function(){return No})),o.d(j,"data",(function(){return Ro}));var T={};o.r(T),o.d(T,"default",(function(){return Do})),o.d(T,"Component",(function(){return Do})),o.d(T,"title",(function(){return Go})),o.d(T,"coverImage",(function(){return Ao})),o.d(T,"description",(function(){return So})),o.d(T,"tags",(function(){return zo}));var P={};o.r(P),o.d(P,"default",(function(){return qo})),o.d(P,"Component",(function(){return qo})),o.d(P,"title",(function(){return Oo})),o.d(P,"coverImage",(function(){return Ho})),o.d(P,"description",(function(){return Lo})),o.d(P,"tags",(function(){return Wo}));var I={};o.r(I),o.d(I,"default",(function(){return Zo})),o.d(I,"Component",(function(){return Zo})),o.d(I,"title",(function(){return Vo})),o.d(I,"coverImage",(function(){return Uo})),o.d(I,"description",(function(){return Ko})),o.d(I,"tags",(function(){return Qo}));var _={};o.r(_),o.d(_,"default",(function(){return ta})),o.d(_,"Component",(function(){return ta})),o.d(_,"title",(function(){return Xo})),o.d(_,"coverImage",(function(){return $o})),o.d(_,"description",(function(){return Yo})),o.d(_,"tags",(function(){return ea}));var C={};o.r(C),o.d(C,"default",(function(){return ia})),o.d(C,"Component",(function(){return ia})),o.d(C,"title",(function(){return oa})),o.d(C,"coverImage",(function(){return aa})),o.d(C,"description",(function(){return ra})),o.d(C,"tags",(function(){return na}));var x={};o.r(x),o.d(x,"default",(function(){return da})),o.d(x,"Component",(function(){return da})),o.d(x,"title",(function(){return ca})),o.d(x,"coverImage",(function(){return sa})),o.d(x,"description",(function(){return la})),o.d(x,"tags",(function(){return ua}));var J={};o.r(J),o.d(J,"default",(function(){return pa})),o.d(J,"Component",(function(){return pa})),o.d(J,"title",(function(){return ma})),o.d(J,"coverImage",(function(){return ha})),o.d(J,"description",(function(){return fa})),o.d(J,"tags",(function(){return ga}));var F={};o.r(F),o.d(F,"default",(function(){return ya})),o.d(F,"Component",(function(){return ya})),o.d(F,"title",(function(){return ba})),o.d(F,"coverImage",(function(){return wa})),o.d(F,"description",(function(){return va})),o.d(F,"tags",(function(){return Ea}));var M={};o.r(M),o.d(M,"default",(function(){return _a})),o.d(M,"Component",(function(){return _a})),o.d(M,"title",(function(){return ka})),o.d(M,"coverImage",(function(){return ja})),o.d(M,"description",(function(){return Ta})),o.d(M,"tags",(function(){return Pa})),o.d(M,"data",(function(){return Ia}));var N={};o.r(N),o.d(N,"default",(function(){return Na})),o.d(N,"Component",(function(){return Na})),o.d(N,"title",(function(){return Ca})),o.d(N,"coverImage",(function(){return xa})),o.d(N,"description",(function(){return Ja})),o.d(N,"tags",(function(){return Fa})),o.d(N,"data",(function(){return Ma}));var R={};o.r(R),o.d(R,"default",(function(){return Sa})),o.d(R,"Component",(function(){return Sa})),o.d(R,"title",(function(){return Ra})),o.d(R,"coverImage",(function(){return Ba})),o.d(R,"description",(function(){return Ga})),o.d(R,"tags",(function(){return Aa}));var B={};o.r(B),o.d(B,"default",(function(){return La})),o.d(B,"Component",(function(){return La})),o.d(B,"title",(function(){return za})),o.d(B,"coverImage",(function(){return Da})),o.d(B,"description",(function(){return Oa})),o.d(B,"tags",(function(){return Ha}));var G=o(20),A=o(0),S=o.n(A),z=o(18),D=o.n(z),O=o(9),H=o(7),L=o(76),W=o(78),q=o(79),V=window.screen.width<650,U=Object(L.a)((function(e){return{root:{background:"transparent",color:"#F7931E",marginTop:"1vh"},logo:{height:"2.5em",paddingRight:"24px",verticalAlign:"center"},name:{marginLeft:"-10px",fontSize:"2.2em"},button:{fontWeight:"600",color:"#F7931E",marginLeft:"1vw",marginRight:"1vw",fontSize:"1.2em","&:hover":{borderColor:"#38A700",color:"#38A700"},marginTop:function(e){return e.smallScreen?"2vh":0}},outline:{borderColor:"#F7931E",height:"100%"},rightToolbar:{marginLeft:"auto"}}}));var K=function(e){var t=U({smallScreen:V});return Object(A.useEffect)((function(){window.scrollTo(0,0)})),S.a.createElement(W.a,{className:t.root},S.a.createElement("section",{className:t.rightToolbar},S.a.createElement(O.b,{to:"/",style:{textDecoration:"none"}},S.a.createElement(q.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary"},"Home")),S.a.createElement(O.b,{to:"/contact",style:{textDecoration:"none"}},S.a.createElement(q.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary"},"Contact Me")),S.a.createElement(q.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary",href:"/static/JCK%20Resume.pdf",target:"_blank"},"Resume"),S.a.createElement(O.b,{to:"/research",style:{textDecoration:"none"}},S.a.createElement(q.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary"},"Research")),S.a.createElement(O.b,{to:"/projects",style:{textDecoration:"none"}},S.a.createElement(q.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary"},"Projects")),S.a.createElement(q.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary",href:"https://github.com/0xJeremy/",target:"_blank"},"Github")))},Q=o(36),Z=o.n(Q),X=window.screen.height<850,$=Object(L.a)((function(e){return{root:{fontWeight:"600",fontSize:function(e){return e.smallScreen?"8vh":"10vh"},position:"relative",left:"".concat(5,"vw"),width:"".concat(95,"vw"),height:"".concat(75,"vh"),top:function(e){return e.smallScreen?"".concat(5,"vh"):"".concat(15,"vh")}},hello:{color:"white"},name:{color:"#F7931E",paddingTop:"".concat(2,"vh")},build:{color:"#38A700",float:"left",paddingTop:"".concat(2,"vh")},typewriter:{color:"#38A700",float:"left",paddingTop:"".concat(2,"vh")},outline:{borderColor:"#F7931E"},button:{float:"none",fontWeight:"600",fontSize:"0.4em",marginRight:"2em",color:"#F7931E","&:hover":{borderColor:"#38A700",color:"#38A700"}}}}));function Y(e){var t=$({smallScreen:X});return Object(A.useEffect)((function(){document.title="Home | Jeremy Kanovsky"})),S.a.createElement("div",{className:t.root},S.a.createElement("div",{className:t.hello},S.a.createElement("span",{role:"img","aria-label":""},"\ud83d\udc4b")," ","Hello."),S.a.createElement("div",{className:t.name},"I'm Jeremy."),S.a.createElement("div",{className:t.build},"I build\xa0"),S.a.createElement("div",{className:t.typewriter},S.a.createElement(Z.a,{options:{strings:["robots.","software.","electronics.","mechanisms.","open source.","hardware."],autoStart:!0,loop:!0,cursor:"_"}})),S.a.createElement("br",null),S.a.createElement("br",null),S.a.createElement(O.b,{to:"/contact",style:{textDecoration:"none"}},S.a.createElement(q.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary"},"Contact Me")),S.a.createElement(O.b,{to:"/projects",style:{textDecoration:"none"}},S.a.createElement(q.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary"},"Projects")))}function ee(){return S.a.createElement("div",null,S.a.createElement(K,null),S.a.createElement(Y,null))}var te=o(28),oe=o(32),ae=o(85),re=o(4),ne=o(87),ie=o(80),ce=o(84),se=o(82),le=o(81),ue=o(83),de=o(86),me=Object(re.a)({root:{backgroundColor:"#F7931E",borderColor:"#F7931E",color:"white",fontFamily:[].join(","),"&:hover":{backgroundColor:"#F78200",borderColor:"#F7931E",boxShadow:"none"}}})(q.a),he=Object(L.a)({root:{maxWidth:"100%",background:"#303030",color:"#F7931E"},title:{fontSize:"2em",fontWeight:"600",color:"#F7931E"},description:{color:"white"},media:{height:"30vh"},actions:{float:"right"},content:{},hardware:{color:"#FF1B1C",borderColor:"#FF1B1C"},software:{color:"#4fbbd6",borderColor:"#4fbbd6"},pcb:{color:"#38A700",borderColor:"#38A700"},oss:{color:"#F7CB15",borderColor:"#F7CB15"},hackathon:{color:"#F7931E",borderColor:"#F7931E"}});function fe(e){var t=he(),o=e.name,a=e.project;return S.a.createElement(ne.a,{className:t.root},S.a.createElement(O.b,{to:"projects/".concat(o),style:{textDecoration:"none"}},S.a.createElement(ie.a,null,S.a.createElement(le.a,{className:t.media,image:"static/projects/".concat(o,"/").concat(a.coverImage),title:o}),S.a.createElement(se.a,{className:t.content},S.a.createElement(ue.a,{gutterBottom:!0,className:t.title},a.title),S.a.createElement(ue.a,{className:t.description},a.description)))),S.a.createElement(ce.a,{className:t.actions},a.tags.hardware&&S.a.createElement(de.a,{variant:"outlined",size:"medium",className:t.hardware,label:"Hardware"}),a.tags.software&&S.a.createElement(de.a,{variant:"outlined",size:"medium",className:t.software,label:"Software"}),a.tags.pcb&&S.a.createElement(de.a,{variant:"outlined",size:"medium",className:t.pcb,label:"PCB Design"}),a.tags.oss&&S.a.createElement(de.a,{variant:"outlined",size:"medium",className:t.oss,label:"Open-Source Library"}),a.tags.hackathon&&S.a.createElement(de.a,{variant:"outlined",size:"medium",className:t.hackathon,label:"Hackathon Project"}),S.a.createElement(O.b,{to:"projects/".concat(o),style:{textDecoration:"none"}},S.a.createElement(me,{size:"medium",color:"primary",variant:"outlined"},"View Project"))))}var ge=window.screen.width<650,pe=Object(L.a)((function(e){return{root:{fontWeight:"600",fontSize:"4em",position:"relative",left:"".concat(5,"vw"),width:"".concat(90,"vw"),height:"".concat(94,"vh"),top:"".concat(3,"vh")},title:{color:"#F7931E",paddingBottom:"3vh"},children:{color:"white",maxWidth:"100%",fontSize:function(e){return e.smallScreen?"0.35em":"0.5em"},display:"block"},outline:{borderColor:"#F7931E"},link:{color:"#38A700"},button:{float:"none",marginBottom:"2em",fontWeight:"600",fontSize:function(e){return e.smallScreen?"0.3em":"0.5em"},marginRight:"2em",color:"#F7931E","&:hover":{borderColor:"#38A700",color:"#38A700"}},linkButton:{float:"none",marginLeft:function(e){return e.smallScreen?"1vw":"5vw"},fontWeight:"600",fontSize:function(e){return e.smallScreen?"0.2em":"0.4em"},marginRight:"2em",color:"#38A700",borderColor:"#38A700","&:hover":{borderColor:"#F7931E",color:"#F7931E"}}}}));function be(e){var t=pe({smallScreen:ge});return Object(A.useEffect)((function(){document.title="".concat(e.title," | Jeremy Kanovsky")})),S.a.createElement("div",null,S.a.createElement(K,null),S.a.createElement("div",{className:t.root},S.a.createElement("div",{className:t.title},e.title,e.data&&e.data.github&&S.a.createElement(q.a,{className:t.linkButton,classes:{outlined:t.outline},variant:"outlined",color:"primary",href:e.data.github,target:"_blank"},"> View on GitHub"),e.data&&e.data.pypi&&S.a.createElement(q.a,{className:t.linkButton,classes:{outlined:t.outline},variant:"outlined",color:"primary",href:e.data.pypi,target:"_blank"},"> View on PyPi"),e.data&&e.data.npm&&S.a.createElement(q.a,{className:t.linkButton,classes:{outlined:t.outline},variant:"outlined",color:"primary",href:e.data.NPM,target:"_blank"},"> View on NPM")),S.a.createElement("div",{className:t.children},e.children),S.a.createElement("br",null),S.a.createElement(O.b,{to:"/projects",style:{textDecoration:"none"}},S.a.createElement(q.a,{className:t.button,classes:{outlined:t.outline},variant:"outlined",color:"primary"},"< Projects"))))}var we="/static/projects",ve=window.screen.width<650,Ee=Object(L.a)((function(e){return{grid:{width:"100%",marginTop:function(e){return e.space?"3vh":0}},image:{width:"100%"}}}));function ye(e){var t=e.images,o=Ee(e),a=12/t.length,r=ve?12:a;return S.a.createElement("div",null,S.a.createElement(ae.a,{container:!0,spacing:1,className:o.grid},t.map((function(e){return S.a.createElement(ae.a,{item:!0,xs:r,key:e},S.a.createElement("img",{className:o.image,src:e,alt:""}))}))))}var ke="Hexapod",je="hexapod_isometric.JPG",Te="This was the final project for Tufts ME-134 (Advanced Robotics) in Fall 2020. We were tasked with creating a robot that could navigate an obstacle course (containing a tunnel, wall, and rough terrain) autonomously.",Pe={software:!0,hardware:!0},Ie={github:"https://github.com/0xJeremy/me134/tree/master/final"};function _e(){return S.a.createElement(be,{title:ke,data:Ie},S.a.createElement(ye,{images:["".concat(we,"/hexapod/hexapod_isometric.JPG"),"".concat(we,"/hexapod/hexapod_2.jpg"),"".concat(we,"/hexapod/hexapod_3.jpg")]}),"This robot was made for the final project of Tufts ME-134 (Advanced Robotics) in the Fall of 2020. The prompt was to create a robot capable of navigating an obstacle course (comprised of a tunnel to go through, a wall to climb over, and a patch of rough terrain) autonomously. This hexapod uses a Raspberry Pi 4 (and camera) to perform the onboard processing and 18 high-torque servo motors for actuation. It did pretty well on the wall.",S.a.createElement(ye,{space:!0,images:["".concat(we,"/hexapod/hexapod_1.jpg"),"".concat(we,"/hexapod/hexapod_4.jpg"),"".concat(we,"/hexapod/hexapod_5.jpg")]}),S.a.createElement(ye,{images:["".concat(we,"/hexapod/hexapod_6.jpg"),"".concat(we,"/hexapod/hexapod_7.jpg"),"".concat(we,"/hexapod/hexapod_8.jpg")]}))}var Ce="Crawling Robot",xe="crawler_isometric.JPG",Je='This robot was build as a homework assignment for Tufts ME-134 (Advanced Robotics) in Fall 2020. The assignment was to create a "crawling robot", so we created a modular robot that rolls end over end.',Fe={software:!0,hardware:!0},Me={github:"https://github.com/0xJeremy/me134/tree/master/hw5"};function Ne(){return S.a.createElement(be,{title:Ce,data:Me},S.a.createElement(ye,{images:["".concat(we,"/crawler/crawler_isometric.JPG"),"".concat(we,"/crawler/crawler_1.JPG"),"".concat(we,"/crawler/crawler_3.jpg")]}),"This robot was made as a homework project for Tufts ME-134 (Advanced Robotics) in the Fall of 2020. The prompt was to create a \"crawling robot\" (defined as: a robot which uses it's entire body to locomote). This robot rolls segments of it's body over one another in series to create a crawling / rolling motion. It is modular with each segment containing a piece of the robot (Raspberry Pi Zero, 2x voltage regulators, 2x servo drivers, 3x LiPo batteries).",S.a.createElement(ye,{space:!0,images:["".concat(we,"/crawler/crawler_4.jpg"),"".concat(we,"/crawler/crawler_5.jpg"),"".concat(we,"/crawler/crawler_6.jpg")]}),S.a.createElement(ye,{images:["".concat(we,"/crawler/crawler_2.jpg"),"".concat(we,"/crawler/crawler_7.jpg")]}))}var Re="Ballbot",Be="ballbot_isometric.JPG",Ge="This robot was build as a homework assignment for Tufts ME-134 (Advanced Robotics) in Fall 2020. The assignment was to create a balancing robot, so we created a robot that balances on a basketball.",Ae={software:!0,hardware:!0},Se={github:"https://github.com/0xJeremy/me134/tree/master/hw4/v2"};function ze(){return S.a.createElement(be,{title:Re,data:Se},S.a.createElement(ye,{images:["".concat(we,"/ballbot/ballbot_isometric.JPG"),"".concat(we,"/ballbot/ballbot_2.jpg"),"".concat(we,"/ballbot/ballbot_3.jpg")]}),'This robot was made as a homework project for Tufts ME-134 (Advanced Robotics) in the Fall of 2020. The prompt was to create a "balancing robot" (with the requirement it must be able to freely rotate at least 180 degrees around any one axis). Theorizing that three axes was more impressive than one axis, we built a balancing "ballbot" -- a robot that balances on top of a basketball. It uses a sensor fusion algorithm to combine the input of 3 gyroscopic and acceleration sensors (2x MPU-6050s, and 1 Bosch BNO-055 sensor).',S.a.createElement(ye,{space:!0,images:["".concat(we,"/ballbot/ballbot_1.JPG"),"".concat(we,"/ballbot/ballbot_4.jpg"),"".concat(we,"/ballbot/ballbot_5.jpg")]}))}var De="Drawing Robot",Oe="drawing_isometric.JPG",He="This robot was build as a homework assignment for Tufts ME-134 (Advanced Robotics) in Fall 2020. The assignment was to create a robotic arm capable of writing our initials.",Le={software:!0,hardware:!0},We={github:"https://github.com/0xJeremy/me134/tree/master/hw3/v2"};function qe(){return S.a.createElement(be,{title:De,data:We},S.a.createElement(ye,{images:["".concat(we,"/drawing_robot/drawing_isometric.JPG"),"".concat(we,"/drawing_robot/drawing_robot_1.jpg"),"".concat(we,"/drawing_robot/drawing_robot_2.jpg")]}),'This robot was made as a homework project for Tufts ME-134 (Advanced Robotics) in the Fall of 2020. The prompt was to create a robotic arm capable of writing our initials. This robot arm (which is the second iteration, the first being a standard 3-DOF vertical arm) is capable of writing arbitrary shapes and letters. Instead of hard-coding the positions of the arms for each point of our initials, I wrote an SVG parser and pather in Python that dissects any arbitrary SVG file and generates "g-code" (really just tuples of position for motors 1 and 2) which the arm them reads through and executes. It was pretty successful.',S.a.createElement(ye,{space:!0,images:["".concat(we,"/drawing_robot/drawing_robot_3.jpg"),"".concat(we,"/drawing_robot/drawing_robot_4.jpg"),"".concat(we,"/drawing_robot/drawing_robot_5.jpg")]}))}var Ve="Analog Clock",Ue="clock_isometric.JPG",Ke="This robot was build as a homework assignment for Tufts ME-134 (Advanced Robotics) in Fall 2020. The assignment was to create an analog clock, so we created a (digital) analog clock.",Qe={software:!0,hardware:!0},Ze={github:"https://github.com/0xJeremy/me134/tree/master/hw2"};function Xe(){return S.a.createElement(be,{title:Ve,data:Ze},S.a.createElement(ye,{images:["".concat(we,"/clock/clock_isometric.JPG"),"".concat(we,"/clock/clock_1.jpg"),"".concat(we,"/clock/clock_3.jpg")]}),'This robot was made for a homework project as part of Tufts ME-134 (Advanced Robotics) in the Fall of 2020. The prompt was to create an analog clock. Twisting the prompt slightly, I chose to make a "digital" analog clock. This clock comprises 28 individual micro-servo motors controlled by 2 servo drivers being controlled by a Raspberry Pi Zero.',S.a.createElement(ye,{space:!0,images:["".concat(we,"/clock/clock_4.jpg"),"".concat(we,"/clock/clock_5.jpg")]}))}var $e="LED Display",Ye="led_isometric.JPG",et="This robot was build as a homework assignment for Tufts ME-134 (Advanced Robotics) in Fall 2020. The assignment was to create a human-interface robot, so we made an interactive display.",tt={software:!0,hardware:!0},ot={github:"https://github.com/0xJeremy/me134/tree/master/hw6"};function at(){return S.a.createElement(be,{title:$e,data:ot},S.a.createElement(ye,{images:["".concat(we,"/led/led_isometric.JPG"),"".concat(we,"/led/led_3.jpg"),"".concat(we,"/led/led_2.jpg")]}),"This robot was made for a homework project as part of Tufts ME-134 (Advanced Robotics) in the Fall of 2020. The prompt was to create a robot that interacts with a human by using computer vision to take input. The robot must respond to a number of different fundamental cues (such as head position, or hand position). We chose to build a large LED display (human for scale) made up of 300 individually addressible LEDs. It used a camera to enable the user to play PONG by waving their hands in the air, or snake by moving their head relative to the camera. Because the Raspberry Pi (which is driving the display) could not be loaded with the proper libraries to perform hand-detection, I built a real-time image streamer that sent data from my laptop (which could process the images) to the Raspberry Pi.",S.a.createElement(ye,{space:!0,images:["".concat(we,"/led/led_1.jpg"),"".concat(we,"/led/led_4.jpg")]}))}var rt="Daedalus BLDC Motor Controller",nt="Daedalus_Brackets_Board.png",it="This is a custom PCB designed to drive high-speed, high-power brushless motors. It includes current monitoring and positional feedback, turning the brushless motor into a high-torque servo motor.",ct={pcb:!0};function st(){return S.a.createElement(be,{title:rt},S.a.createElement(ye,{images:["".concat(we,"/daedalus/Daedalus_Brackets_Board.png"),"".concat(we,"/daedalus/Front.jpg")]}),"This PCB is the Daedalus High-Power BLDC Motor Controller. Using the on-board magnetic encoder it can turn a regular brushless DC motor into a high-power, ultra high-precision servo motor. It uses CAN bus communication, and cable be daisy chained together with other Daedalus controllers. This is one of the first PCBs I have designed, and I expect to iterate on it in the future.",S.a.createElement(ye,{space:!0,images:["".concat(we,"/daedalus/Board_Layout.png")]}))}var lt="Helios Pi-Hat Robot Controller",ut="Helios_Board.png",dt="This is a custom PCB Raspberry Pi hat designed to enable CAN bus communication and high-precision servo control. It can also supply power to the Pi.",mt={pcb:!0};function ht(){return S.a.createElement(be,{title:lt},S.a.createElement(ye,{images:["".concat(we,"/helios/Helios_Board.png"),"".concat(we,"/helios/Board_Layout.png")]}),"This PCB is the Helios Pi-Hat Robot Controller. It is a companion board to the Daedalus Motor controller. It provides 4x high-speed CAN bus lines (through the 2x on-board STM32 microprocessors), along with a host of other features such as absolute orientation sensing (by providing sockets for a Bosch BNO-055 sensor), breakouts for 12 servo motors (6x high-precision, 6x standard), and by providing up to 3.5 amps to power the Raspberry Pi host. This is one of the first PCBs I've designed, and I expect to iterate on it in the future.")}var ft="Icarus Power Distribution Board",gt="Icarus_Board.png",pt="This is a custom PCB power distribution board designed for use with the Daedalus BLDC motor controller for driving high-current motors and the Helios Raspberry Pi hat. It has 6 power breakouts.",bt={pcb:!0};function wt(){return S.a.createElement(be,{title:ft},S.a.createElement(ye,{images:["".concat(we,"/icarus/Icarus_Board.png"),"".concat(we,"/icarus/Front.jpg")]}),"This PCB was made as a companion board to the Daedalus motor controller, and provides 6x high-current power breakouts from a single source. Along with providing power, it has a host of other features like power shutoff, current draw monitoring, and temperature sensing. It communicates with the CAN bus protocol and can be daisy-chained with a number of other devices (including the Helios Pi-Hat and the Daedalus Motor Controller). This is one of the first PCBs I've made and I expect to iterate on it in the future.",S.a.createElement(ye,{space:!0,images:["".concat(we,"/icarus/Board_Layout.png")]}))}var vt="FireEye",Et="fireeye.png",yt="FireEye is an open-source real-time socket communication library designed for low-latency video streaming from remote sources. It was designed to steam a Raspberry Pi camera to a webpage.",kt={software:!0,oss:!0},jt={github:"https://github.com/0xJeremy/FireEye",pypi:"https://pypi.org/project/FireEye/",npm:"https://www.npmjs.com/package/fireeye"};function Tt(){return S.a.createElement(be,{title:vt,data:jt},"FireEye is an open-source cross-language (Python / Javascript via Node.js) UNIX socket communication library. It was originally build and optimized for streaming video from a Raspberry Pi camera to remote devices in real-time, but has since been generalized to work for arbitrary communication. It is extremely easy to use and handles almost all of the setup for the user. It was later replaced with socket.engine (which is newer and better for a number of reasons).",S.a.createElement(ye,{space:!0,images:["".concat(we,"/fireeye/fireeye.png")]}))}var Pt="Tufts BCI Team",It="bci.png",_t="As part of the Tufts BCI (Brain-Computer Interface) team, I created a user-interface for viewing real-time brain activity on a 3D model. Data can be streamed from a remote sensor to the page.",Ct={software:!0};function xt(){return S.a.createElement(be,{title:Pt},"The Tufts BCI Team (Brain-Computer Interface Team) is a cross-major team working on new interfaces for computers, devices, and robots. It uses hardware from OpenBCI and some custom software we've written. I was responsible for creating a user-interface for streaming, in real-time, data from remote sensors to an interface which would display the brain activity onto a 3D model of the brain. This interface I originally wrote in vanilla HTML/CSS/Javascript, but later I re-wrote it in React.js. I also made the team logo (below) which I an unreasonably proud of.",S.a.createElement(ye,{space:!0,images:["".concat(we,"/bci/bci.png")]}))}var Jt="MLE (My Little Eye)",Ft="mle.png",Mt="MLE (My Little Eye) was part of a hackathon project at HackMIT where we created a fleet of semi-autonomous robots that track down lost objects for people with vision and mobility impairments.",Nt={software:!0,hardware:!0,hackathon:!0},Rt={github:"https://github.com/0xJeremy/MLE"};function Bt(){return S.a.createElement(be,{title:Jt,data:Rt},S.a.createElement(ye,{images:["".concat(we,"/mle/mle.png"),"".concat(we,"/mle/mle3.png")]}),"MLE (My Little Eye) was a hackathon project for HackMIT in 2019. The goal of this project was to create a tool to help the vision and mobility impaired by helping to find lost objects, or just finds objects in the environment. It did this by deploying a small fleet of autonomous robots (based on the \"Fleet\" swarm robot design) armed with cameras and the vision APIs from Microsoft Azure. The user-interface allowed users to say the name of an object and using Google speech recognition would command the robots to begin hunting for the object. The camera feed would live-stream to the user (along with robot controls), and once an object is found would report it's position to the user, along with the path the robot took to get there. We didn't win, but we got some great sweatshirts.",S.a.createElement(ye,{space:!0,images:["".concat(we,"/mle/mle2.png")]}))}var Gt="socket.engine",At="socketengine.png",St="socket.engine is the open-source successor to FireEye. It enabled real-time communication between devices that is optimized to be light-weight and very fast.",zt={software:!0,oss:!0},Dt={github:"https://github.com/0xJeremy/socket.engine",pypi:"https://pypi.org/project/socket.engine/",npm:"https://www.npmjs.com/package/socket.engine"};function Ot(){return S.a.createElement(be,{title:Gt,data:Dt},S.a.createElement(ye,{images:["".concat(we,"/socketengine/socketengine.png")]}),"socket.engine is the successor to FireEye. It is a real-time bi-directional UNIX socket communication library built on top of ZMQ sockets. It operates at extremely high speeds and is even capable of streaming full video across the sockets. It was originally designed for use in robots, but provides an interface to stream arbitrary data across arbitrary devices. It was written in Python and Javascript (via Node.js). It also holds the distinction of being my most successful project on GitHub. The source is published on GitHub, and it is available for download on PIP via PyPi, and on NPM.")}var Ht="viz.engine",Lt="vizengine.png",Wt="viz.engine is an open-source library and framework for robot user-interfaces. It is designed to give real-time feedback about the state of the robot and provide a control interface.",qt={software:!0,oss:!0},Vt={github:"https://github.com/0xJeremy/viz.engine"};function Ut(){return S.a.createElement(be,{title:Ht,data:Vt},S.a.createElement(ye,{images:["".concat(we,"/vizengine/vizengine.png")]}),"viz.engine is an open-source React.js powered interface for controlling robots. It was originally designed to help operators handle large swarms of robots simultaneously by streaming real-time information about the state of each system, and providing a unified and straight-forward method of operating all the bots. It uses the socket.engine library for communication between the robots and the server (which allows for standard data to be streamed, as well as real-time video feeds from each robot).",S.a.createElement(ye,{space:!0,images:["".concat(we,"/vizengine/dashboard.png")]}))}var Kt="ctrl.engine",Qt="ctrlengine.png",Zt="ctrl.engine is an open-source robotics library. It provides various tools in Python to make writing software for robotics easier and faster. It gives boilerplate multi-threaded code to multiple APIs and image processing tools.",Xt={software:!0,oss:!0},$t={github:"https://github.com/0xJeremy/ctrl.engine"};function Yt(){return S.a.createElement(be,{title:Kt,data:$t},S.a.createElement(ye,{images:["".concat(we,"/ctrlengine/ctrlengine.png")]}),"ctrl.engine is an open-source robotics library written in Python. It was designed to provide a common set of tools to quickly prototype robots (specifically those running on a Raspberry Pi, but in theory is multiplatform). It provides boilerplate multi-threaded code for a number of web-APIs, as well as numerous computer vision examples. It also supports a number of input devices like xbox controllers, and provides standard implementations of common algorithms (like PID controllers and signal filters).")}var eo=Object(L.a)((function(e){return{link:{color:"#4fbbd6"}}})),to="Meteorite Visualizer",oo="meteorites.png",ao="This is a meteorite impact visualizer made for COMP-177 (Data Visualization) at Tufts in Spring 2020.",ro={software:!0},no={github:"https://github.com/0xJeremy/Meteorite-Visualizer/"};function io(){var e=eo();return S.a.createElement(be,{title:to,data:no},S.a.createElement(ye,{images:["".concat(we,"/meteorites/meteorites.png")]}),"This website was made as the final project in Tufts COMP-177 Data Visualization in the Spring of 2020. The prompt was to create a website to display a dataset in a number of different ways, and to allow the user to explore the dataset. We used a dataset provided by NASA which lists all the known meteorite impacts on Earth dating back to the 1800s. We built the site with React.js and D3.js. It can be viewed live at"," ",S.a.createElement("a",{href:"http://www.lab84.org/",target:"_blank",rel:"noopener noreferrer",className:e.link},"lab84.org"),".")}var co="Raspberry Pi Pico Oscilloscope",so="pico_oscilloscope.png",lo="This is an open-source project to turn the $4 Raspberry Pi Pico into a (reasonable) powerful 4-channel oscilloscope using the onboard analog to digital converters.",uo={software:!0},mo={github:"https://github.com/0xJeremy/Pico-Oscilloscope"};function ho(){return S.a.createElement(be,{title:co,data:mo},S.a.createElement(ye,{images:["".concat(we,"/pico_oscilloscope/repo_logo.png")]}),"As the final project for Tufts ME-193 MPP (Microcontroller Programming Projects) in the Spring of 2021, I turned the $4 Raspberry Pi Pico into a (reasonably) powerful 4-channel oscilloscope using the onboard analog to digital converters. The Pico streams the ADC readings over a USB to a host device (either a Raspberry Pi or any computer), which displays the data in a webpage. The idea being this project mimics the functionality of OctoPrint (the cloud 3D printer manager software) but for an Oscilloscope. This would make its use ideal in makerspaces or shared electronics labs. The webpage was written in React.js using Plot.js. The code on the Pico uses both cores and was written to run as quickly as possible in C.",S.a.createElement(ye,{space:!0,images:["".concat(we,"/pico_oscilloscope/pico_oscilloscope.png")]}))}var fo="Drivable Couch",go="couch.png",po="This is a project done as part of the Tufts Robotics club in which we built a drivable, remote-controlled couch. It's pretty much exactly what it sounds like.",bo={software:!0,hardware:!0};function wo(){return S.a.createElement(be,{title:fo},S.a.createElement(ye,{images:["".concat(we,"/couch/couch.png"),"".concat(we,"/couch/couch2.jpeg")]}),"This is a robotic couch. It is remote-controlled via an xbox controller. It can carry three people. It's exactly what it sounds like, and is a ton of fun. This project was made with the Tufts Robotics Club, and was one of my first large-scale robotics projects. It was built using FIRST robotics hardware, and programmed in C++. At one point we had an actual couch on it, but due to storage problems it had to be thrown out.")}var vo="Autodrive",Eo="autodrive.jpeg",yo="This is a project done for ME-84 (Intro. Robotics & Mechatronics) in Fall 2018. This robot drives autonomously using image processing with markers on the ground.",ko={software:!0,hardware:!0};function jo(){return S.a.createElement(be,{title:vo},S.a.createElement(ye,{images:["".concat(we,"/autodrive/autodrive.jpeg"),"".concat(we,"/autodrive/autodrive_1.JPG")]}),"This project was made as a homework assigmnet for Tufts ME-84 (Intro. Robotics & Mechatronics) in Fall of 2018. The assignment was to use image processing to make a line following robot. We did this by pointing an OpenMV camera facing downwards and using canny edge-detection to find the lines on the table. We also used a PyBoard v2 to control the servo motors attached to the car (acting as drive motors).",S.a.createElement(ye,{space:!0,images:["".concat(we,"/autodrive/autodrive_2.JPG"),"".concat(we,"/autodrive/autodrive_3.JPG")]}))}var To="Fleet",Po="fleet.png",Io="This project is an open-source hardware platform for developing robotics software. It is intended to be a low-cost, modular swarm robotic system to test swarm algorithms.",_o={software:!0,hardware:!0},Co={github:"https://github.com/0xJeremy/fleet"};function xo(){return S.a.createElement(be,{title:To,data:Co},S.a.createElement(ye,{images:["".concat(we,"/fleet/fleet.png"),"".concat(we,"/fleet/fleet2.png"),"".concat(we,"/fleet/fleet3.jpeg")]}),'"Fleet" is a series of small, modular robots I made as an open-source hardware platform for developing swarm robotics software. It is intended to be a low cost solution for labs, researchers, and hobbiests to experiment with cutting edge swarm algorithms. Each robot is equipped with a Raspberry Pi, 2x DC motors with encoders, Raspberry Pi camera, and batteries to last several hours. Newer versions also have front and back facing time of flight distance sensors.',S.a.createElement(ye,{space:!0,images:["".concat(we,"/fleet/fleet4.jpeg"),"".concat(we,"/fleet/fleet5.JPG")]}))}var Jo="Dum-E IoT Arms",Fo="dume_arms.jpeg",Mo="These internet-enabled robotic arm swarm was made at the MakeHarvard hackathon in 2019. They were made to be an educational tool for teaching introductory robotics for universities.",No={software:!0,hardware:!0,hackathon:!0},Ro={github:"https://github.com/0xJeremy/Dum-E-IOT"};function Bo(){return S.a.createElement(be,{title:Jo,data:Ro},S.a.createElement(ye,{images:["".concat(we,"/dume_arms/dume_arms.jpeg"),"".concat(we,"/dume_arms/dume_arms_1.JPG")]}),"The Dum-E IoT Arms (Dum-E being the name of the robotic arm Tony Stark keeps in his workshop, of course) is a project made at the MakeHarvard hackathon in 2019. We made them to be an educational teaching tool for univresity students to learn about the basics of IoT, robotics, and fabrication. We used them briefly in our university robotics club to teach some of these topics after we had made the prototypes. The arms can be controlled by a single centralized web-server and use ESP8266s to stream instructions from the internet.",S.a.createElement(ye,{space:!0,images:["".concat(we,"/dume_arms/dume_arms_2.JPG"),"".concat(we,"/dume_arms/dume_arms_3.JPG")]}))}var Go="LEGO Robots",Ao="lego.jpeg",So="These are a series of LEGO robots made for ME-84 (Intro. Robotics & Mechatronics) in Fall 2018 at Tufts University.",zo={software:!0,hardware:!0};function Do(){return S.a.createElement(be,{title:Go},S.a.createElement(ye,{images:["".concat(we,"/lego/lego.jpeg"),"".concat(we,"/lego/iot_arms_1.JPG"),"".concat(we,"/lego/iot_arms_2.JPG"),"".concat(we,"/lego/iot_arms_4.JPG")]}),"These are a series of robots made for Tufts ME-84 (Intro. Robotics & Mechatronics) in the Fall of 2018. Each one was a homework assignment, and all the robots were programmed in LabVIEW. The assignments include making a kinetic art sculpture, an wirelessly-communicating clock, a childrens toy, and a remote-control robotic arm. All these robots used the LEGO EV3 platform.",S.a.createElement(ye,{space:!0,images:["".concat(we,"/lego/clock_1.JPG"),"".concat(we,"/lego/clock_3.JPG")]}),S.a.createElement(ye,{images:["".concat(we,"/lego/towers_1.JPG"),"".concat(we,"/lego/towers_2.JPG")]}),S.a.createElement(ye,{images:["".concat(we,"/lego/gear_1.JPG"),"".concat(we,"/lego/gear_2.JPG")]}))}var Oo="QBot",Ho="qbot.jpeg",Lo="QBot was a robot made as part of ME-84 (Intro. Robotics & Mechatronics) in Fall 2018. It uses image recognition to respond to commands from QR codes.",Wo={software:!0,hardware:!0};function qo(){return S.a.createElement(be,{title:Oo},S.a.createElement(ye,{images:["".concat(we,"/qbot/qbot.jpeg"),"".concat(we,"/qbot/bot_1.JPG")]}),'This robot was a homework project from Tufts ME-84 (Intro. Robotics & Mechatronics). The assignment was to create a robot that takes its cues for movement from a camera (computer vision). We created a driving robot that uses an OpenMV camera to recognize QR tags representing "move forward", "move backward", "turn left", "turn right", "stop", etc. The OpenMV camera commanded a PyBoard v2 which in turn sent commands to the two servo motors (here being used as drive motors).',S.a.createElement(ye,{space:!0,images:["".concat(we,"/qbot/bot_2.JPG"),"".concat(we,"/qbot/bot_3.JPG")]}))}var Vo="\xb5Jumbo",Uo="ujumbo.jpeg",Ko='\xb5Jumbo was an entry to the Trinity International Robotic Firefighting competition in the "small robot" category.',Qo={software:!0,hardware:!0};function Zo(){return S.a.createElement(be,{title:Vo},S.a.createElement(ye,{images:["".concat(we,"/ujumbo/ujumbo.jpeg"),"".concat(we,"/ujumbo/jumbo_3.JPG")]}),'\xb5Jumbo was an entry to the Trinity International Robotic Firefighting competition in the "smallest robot" category. Unfortunately, that year it was only the second smallest robot (losing by a matter of several cubic centimeters). This robot was to navigate a maze autonomously and extinguish a fire (a candle). It was also required to recognize a tone played as the starting signal (thus the microphone and filtering circuit on the top of the robot). We equipped this robot with an Arduino Nano, wheels encoders, and multiple time-of-flight distance sensors placed around the robot.',S.a.createElement(ye,{space:!0,images:["".concat(we,"/ujumbo/jumbo_2.JPG"),"".concat(we,"/ujumbo/jumbo_4.JPG")]}))}var Xo="Firefighting Robot",$o="firefighting.jpeg",Yo="This robot was our entry into the Trinity International Robotic Firefighting Competition.",ea={software:!0,hardware:!0};function ta(){return S.a.createElement(be,{title:Xo},S.a.createElement(ye,{images:["".concat(we,"/firefighting/firefighting.jpeg"),"".concat(we,"/firefighting/firefighting_1.JPG")]}),"This robot is one of the first I've made from scratch, and was made for the Trinity International Robotic Firefighting Competition in the Spring of 2018. It's task was to listen for a tone, and when signaled would begin to autonomously navigate a maze and extinguish a fire. It was powered by a Raspberry Pi Zero and was surrounded by ultrasonic distance sensors to detect the walls of the maze.",S.a.createElement(ye,{space:!0,images:["".concat(we,"/firefighting/firefighting_2.JPG")]}))}var oa="Expo Digitizer",aa="expo_digitizer.jpeg",ra="This is an attachment for an Expo marker to turn it into an active digitizer.",na={software:!0,hardware:!0,hackathon:!0};function ia(){return S.a.createElement(be,{title:oa},S.a.createElement(ye,{images:["".concat(we,"/expo_digitizer/expo_digitizer.jpeg"),"".concat(we,"/expo_digitizer/expo_digitizer_2.jpeg")]}),"This project was made as part of Tufts Polyhack in Fall 2017. It is an attachment for an Expo marker to turn it into an active digitizer. Using an accelerometer mounted to the marker, and a button to detect when it makes contact with the board, this marker could generate a PDF of the hardwriting of the user.")}var ca="HobbesBot",sa="hobbesbot.jpeg",la='This is a robotic puppet with 7 degrees of freedom called "HobbesBot" after the tiger in Calvin and Hobbes. It was the final project from ME-84 (Intro. Robotics & Mechatronics) in Fall 2018 at Tufts.',ua={software:!0,hardware:!0};function da(){return S.a.createElement(be,{title:ca},S.a.createElement(ye,{images:["".concat(we,"/hobbesbot/hobbesbot.jpeg"),"".concat(we,"/hobbesbot/hobbes_2.JPG")]}),"HobbesBot is the final project from Tufts ME-84 (Intro. Robotics & Mechatronics). The assignment was to build an animatronic puppet that takes cues from a human, and can interact with them. We created Hobbes, the tiger from Calvin & Hobbes, as a 7 degrees-of-freedom robot equipped with computer vision. Using a Raspberry Pi and a camera (along with half of Google Cloud Platforms vision APIs), Hobbes determines the users mood and reacts accordingly. As a cherry on top, we made two IoT enabled LED cubes to light up when Hobbes detects the user is happy.",S.a.createElement(ye,{space:!0,images:["".concat(we,"/hobbesbot/hobbes_1.JPG"),"".concat(we,"/hobbesbot/hobbes_3.JPG")]}))}var ma="Quadcopter UAV",ha="quadcopter.jpeg",fa="This is a quadcopter UAV made with the Tufts MAKE club. It was originally designed to be semi-autonomous.",ga={software:!0,hardware:!0};function pa(){return S.a.createElement(be,{title:ma},S.a.createElement(ye,{images:["".concat(we,"/quadcopter/quadcopter.jpeg"),"".concat(we,"/quadcopter/quadcopter_2.jpeg")]}),"This quadcopter was built with the Tufts MAKE club. The project was to build a quadcopter from scratch, and program it to fly semi-autonomously using computer vision. Unfortunately, due to semester time constraints, we were unable to finish the autonomous portion of the build, but it flew pretty well.")}var ba="Electric Longboard",wa="longboard.jpeg",va="This is an electric longboard made with the Tufts MAKE club.",Ea={hardware:!0};function ya(){return S.a.createElement(be,{title:ba},S.a.createElement(ye,{images:["".concat(we,"/longboard/longboard.jpeg"),"".concat(we,"/longboard/longboard_1.jpeg")]}),"This was a project with the Tufts MAKE club in which we built an electric longboard. It was a pretty straight forward project, and the end result worked suprisingly well.")}var ka='"Banned From Vegas"',ja="vegas.jpeg",Ta="This is an automatic card-dealing and sorting robot made at MakeHarvard 2020. It uses computer vision to detect and sort the cards (and a little bit of card-counting to make sure you always win).",Pa={hardware:!0,software:!0,hackathon:!0},Ia={github:"https://github.com/0xJeremy/MakeHarvard2020"};function _a(){return S.a.createElement(be,{title:ka,data:Ia},S.a.createElement(ye,{images:["".concat(we,"/vegas/vegas.jpg"),"".concat(we,"/vegas/vegas2.jpeg")]}),'"Banned From Vegas" is an automatic card-dealing and sorting robot made at MakeHarvard 2020. It uses computer vision to detect and sort a deck of cards (and with a little bit of card-counting thrown in can make the operator always win at cards). It was built over the course of 24 hours and was powered by a Raspberry Pi and a large number of servos and motors. The end result worked shockingly well.',S.a.createElement(ye,{space:!0,images:["".concat(we,"/vegas/vegas3.jpeg"),"".concat(we,"/vegas/vegas4.jpeg")]}))}var Ca='"Space Jam": Space Printer',xa="spaceprinter.JPG",Ja="This is a 3D printer designed to be used in zero-gravity (such as on the ISS). it was made as a senior design project at Tufts in the Fall of 2020 for Professor Doug Matson.",Fa={hardware:!0,software:!0},Ma={github:"https://github.com/0xJeremy/senior-design"};function Na(){return S.a.createElement(be,{title:Ca,data:Ma},S.a.createElement(ye,{images:["".concat(we,"/space_printer/spaceprinter.JPG")]}),"This is a 3D printer designed to be used in *space* (specifically, zero-gravity environments, such as on the International Space Station). It was built for Professor Douglas Matson for his use in research. We also built the firmware from scratch for this printer given the unique control style and setup of the stepper motors.")}var Ra="STM32 Development Board",Ba="devboard.JPG",Ga="This is a development breakout board for the STM32F405 series microcontroller. I made it to learn about PCB design and embedded microcontroller programming.",Aa={software:!0,pcb:!0};function Sa(){return S.a.createElement(be,{title:Ra},S.a.createElement(ye,{images:["".concat(we,"/devboard/devboard.JPG"),"".concat(we,"/devboard/devboard_5.JPG")]}),"This PCB is a custom-designed breakout for the STM32F405 series microcontroller. I made it to practice PCB design, and learn about programming embedded microcontrollers from scratch. I designed a custom power-chain for supplying power to the MCU and added breakouts around the side for serial breakouts.",S.a.createElement(ye,{space:!0,images:["".concat(we,"/devboard/devboard_4.JPG"),"".concat(we,"/devboard/devboard_3.JPG")]}),S.a.createElement(ye,{images:["".concat(we,"/devboard/devboard_1.JPG"),"".concat(we,"/devboard/devboard_2.JPG")]}),S.a.createElement(ye,{images:["".concat(we,"/devboard/devboard_layout.JPG")]}))}var za="Raspberry Pi Pico Servo Driver",Da="pico_pca.JPG",Oa="This is a PCB daughterboard for the Raspberry Pi Pico that carries a PCB9685 16 channel servo-driver.",Ha={software:!0,pcb:!0};function La(){return S.a.createElement(be,{title:za},S.a.createElement(ye,{images:["".concat(we,"/pico_pca/pico_pca.JPG"),"".concat(we,"/pico_pca/pico_pca_1.JPG"),"".concat(we,"/pico_pca/pico_pca_2.JPG")]}),"This PCB is a breakout board for the Raspberry Pi Pico. It carries a PCA9685 16-channel PWM driver chip, and provides breakouts for 16 servos. It also includes breakouts for Stemma QWIIC connectors on the side of the board.",S.a.createElement(ye,{space:!0,images:["".concat(we,"/pico_pca/pico_pca_3.JPG"),"".concat(we,"/pico_pca/pico_pca_4.JPG")]}))}var Wa={hexapod:a,crawler:r,ballbot:n,drawing_robot:i,clock:c,led:s,daedalus:l,helios:u,icarus:d,fireeye:m,bci:h,mle:f,socketengine:g,vizengine:p,ctrlengine:b,meteorites:w,pico_oscilloscope:v,couch:E,autodrive:y,fleet:k,dume_arms:j,lego:T,qbot:P,ujumbo:I,firefighting:_,expo_digitizer:C,hobbesbot:x,quadcopter:J,longboard:F,vegas:M,space_printer:N,devboard:R,pico_pca:B},qa=window.screen.width<650,Va=Object(L.a)((function(e){return{root:{background:"#202020"},title:{display:"flex",alignItems:"center",flexWrap:"wrap",color:"#F7931E",fontWeight:"600",fontSize:"8vh",paddingBottom:"3vh",paddingTop:"3vh",marginLeft:"1vw"},icon:{fontSize:"1em"},paper:{height:"5vh"},grid:{marginLeft:"".concat(1,"vw"),marginRight:"".concat(1,"vw"),width:"".concat(98,"vw")},hardware:{color:function(e){return e.filter.hardware?"#FF1B1C":"#888888"},borderColor:function(e){return e.filter.hardware?"#FF1B1C":"#888888"},marginLeft:"5vw",marginTop:function(e){return e.smallScreen?"2vh":0}},software:{color:function(e){return e.filter.software?"#4fbbd6":"#888888"},borderColor:function(e){return e.filter.software?"#4fbbd6":"#888888"},marginLeft:"1.5vw",marginTop:function(e){return e.smallScreen?"2vh":0}},pcb:{color:function(e){return e.filter.pcb?"#38A700":"#888888"},borderColor:function(e){return e.filter.pcb?"#38A700":"#888888"},marginLeft:"1.5vw",marginTop:function(e){return e.smallScreen?"2vh":0}},oss:{color:function(e){return e.filter.oss?"#F7CB15":"#888888"},borderColor:function(e){return e.filter.oss?"#F7CB15":"#888888"},marginLeft:"1.5vw",marginTop:function(e){return e.smallScreen?"2vh":0}},hackathon:{color:function(e){return e.filter.hackathon?"#F7931E":"#888888"},borderColor:function(e){return e.filter.hackathon?"#F7931E":"#888888"},marginLeft:"1.5vw",marginTop:function(e){return e.smallScreen?"2vh":0}}}}));var Ua=Object(L.a)((function(e){return{root:{fontWeight:"600",fontSize:"4em",position:"relative",left:"".concat(5,"vw"),width:"".concat(95,"vw"),height:"".concat(75,"vh"),top:"".concat(15,"vh")},email:{color:"white"},website:{color:"white",paddingTop:"".concat(2,"vh")},github:{color:"white",paddingTop:"".concat(2,"vh")},linkedin:{color:"white",paddingTop:"".concat(2,"vh")},outline:{borderColor:"#F7931E"},link:{color:"#38A700"},button:{float:"none",fontWeight:"600",fontSize:"0.7em",color:"#F7931E","&:hover":{borderColor:"#38A700",color:"#38A700"}}}}));var Ka=Object(L.a)((function(e){return{root:{fontWeight:"600",fontSize:"4em",position:"relative",left:"".concat(5,"vw"),width:"".concat(95,"vw"),height:"".concat(75,"vh"),top:"".concat(15,"vh")},text:{color:"white"},outline:{borderColor:"#F7931E"},link:{color:"#38A700"},button:{float:"none",fontWeight:"600",fontSize:"0.7em",marginRight:"2em",color:"#F7931E","&:hover":{borderColor:"#38A700",color:"#38A700"}}}}));D.a.render(S.a.createElement(O.a,null,S.a.createElement(H.c,null,S.a.createElement(H.a,{exact:!0,path:"/",component:ee}),S.a.createElement(H.a,{exact:!0,path:"/contact",component:function(){var e=Ua();return Object(A.useEffect)((function(){document.title="Contact | Jeremy Kanovsky"})),S.a.createElement("div",null,S.a.createElement(K,null),S.a.createElement("div",{className:e.root},S.a.createElement("div",{className:e.email},"email:"," ",S.a.createElement("a",{href:"mailto:kanovsky.jeremy@gmail.com",rel:"noopener noreferrer",className:e.link},"kanovsky.jeremy@gmail.com")),S.a.createElement("div",{className:e.website},"website: you're here."),S.a.createElement("div",{className:e.github},"github:"," ",S.a.createElement("a",{href:"https://github.com/0xJeremy",target:"_blank",rel:"noopener noreferrer",className:e.link},"github.com/0xJeremy")),S.a.createElement("div",{className:e.linkedin},"linkedin:"," ",S.a.createElement("a",{href:"https://www.linkedin.com/in/jeremy-kanovsky/",target:"_blank",rel:"noopener noreferrer",className:e.link},"linkedin.com/in/jeremy-kanovsky")),S.a.createElement("br",null),S.a.createElement("br",null),S.a.createElement(O.b,{to:"/",style:{textDecoration:"none"}},S.a.createElement(q.a,{className:e.button,classes:{outlined:e.outline},variant:"outlined",color:"primary"},"Home"))))}}),S.a.createElement(H.a,{exact:!0,path:"/projects",component:function(){var e=S.a.useState({software:!0,hardware:!0,pcb:!0,oss:!0,hackathon:!0}),t=Object(G.a)(e,2),o=t[0],a=t[1],r=Va({filter:o,smallScreen:qa}),n=qa?12:4;Object(A.useEffect)((function(){document.title="Projects | Jeremy Kanovsky"}));var i=function(e){a(Object(oe.a)(Object(oe.a)({},o),{},Object(te.a)({},e,!o[e])))};return S.a.createElement("div",null,S.a.createElement(K,null),S.a.createElement("div",{className:r.root},S.a.createElement("div",{className:r.title},"> PROJECTS",S.a.createElement(de.a,{variant:"outlined",label:"Hardware",className:r.hardware,onClick:function(){return i("hardware")}}),S.a.createElement(de.a,{variant:"outlined",label:"Software",className:r.software,onClick:function(){return i("software")}}),S.a.createElement(de.a,{variant:"outlined",label:"PCB Design",className:r.pcb,onClick:function(){return i("pcb")}}),S.a.createElement(de.a,{variant:"outlined",label:"Open-Source Library",className:r.oss,onClick:function(){return i("oss")}}),S.a.createElement(de.a,{variant:"outlined",label:"Hackathon Project",className:r.hackathon,onClick:function(){return i("hackathon")}})),S.a.createElement(ae.a,{container:!0,spacing:2,className:r.grid},Object.entries(Wa).map((function(e){var t=Object(G.a)(e,2),a=t[0],r=t[1];return function(e){for(var t=0,a=Object.entries(e.tags);t<a.length;t++){var r=Object(G.a)(a[t],1)[0];if(!o[r])return!1}return!0}(r)?S.a.createElement(ae.a,{item:!0,xs:n,key:a},S.a.createElement(fe,{name:a,project:r,key:a})):S.a.createElement("div",null)})))))}}),S.a.createElement(H.a,{exact:!0,path:"/research",component:function(){var e=Ka();return Object(A.useEffect)((function(){document.title="Research | Jeremy Kanovsky"})),S.a.createElement("div",null,S.a.createElement(K,null),S.a.createElement("div",{className:e.root},S.a.createElement("div",{className:e.text},"there will be some stuff here eventually. for now, see"," ",S.a.createElement("a",{href:"static/ME94%20Poster%20Final.pdf",target:"_blank",rel:"noopener noreferrer",className:e.link},"here"),"."),S.a.createElement("br",null),S.a.createElement("br",null),S.a.createElement(O.b,{to:"/",style:{textDecoration:"none"}},S.a.createElement(q.a,{className:e.button,classes:{outlined:e.outline},variant:"outlined",color:"primary"},"Home"))))}}),Object.entries(Wa).map((function(e){var t=Object(G.a)(e,2),o=t[0],a=t[1];return S.a.createElement(H.a,{exact:!0,path:"/projects/".concat(o),key:o,component:a.Component})})),S.a.createElement(H.a,{path:"/",component:ee}))),document.getElementById("root"))}},[[43,1,2]]]);
//# sourceMappingURL=main.9ab5cecd.chunk.js.map